{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_common/error.interceptor.ts","./src/app/_common/password-policy.ts","./src/app/_common/rbac-allow.directive.ts","./src/app/_common/routes.config.ts","./src/app/_common/user-search.validator.ts","./src/app/_services/auth.service.ts","./src/app/_services/authentication.guard.ts","./src/app/_services/authorization.guard.ts","./src/app/_services/message.service.ts","./src/app/_services/photograph.service.ts","./src/app/_services/photographerService.ts","./src/app/_services/transaction.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/message/add-message/add-message.component.ts","./src/app/message/add-message/add-message.component.html","./src/app/message/messages/messages.component.ts","./src/app/message/messages/messages.component.html","./src/app/photograph/add-photograph/add-photograph.component.ts","./src/app/photograph/add-photograph/add-photograph.component.html","./src/app/photograph/edit-photograph/edit-photograph.component.ts","./src/app/photograph/edit-photograph/edit-photograph.component.html","./src/app/photograph/my-photographs/my-photographs.component.ts","./src/app/photograph/my-photographs/my-photographs.component.html","./src/app/photograph/photographs/photographs.component.ts","./src/app/photograph/photographs/photographs.component.html","./src/app/photographer/add-photographer/add-photographer.component.ts","./src/app/photographer/add-photographer/add-photographer.component.html","./src/app/photographer/edit-photographer/edit-photographer.component.ts","./src/app/photographer/edit-photographer/edit-photographer.component.html","./src/app/photographer/photographers/photographers.component.ts","./src/app/photographer/photographers/photographers.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/transaction/add-transaction/add-transaction.component.ts","./src/app/transaction/add-transaction/add-transaction.component.html","./src/app/transaction/mytransactions/mytransactions.component.ts","./src/app/transaction/mytransactions/mytransactions.component.html","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2017.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Observable, throwError,of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(public toasterService: ToastrService) {}\r\n\r\n  intercept(req: HttpRequest<any>,next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n        catchError((err: any) => {\r\n            if(err instanceof HttpErrorResponse) {\r\n              this.toasterService.error(err.error.error, 'Error', { positionClass: 'toast-top-center' ,timeOut:5000});\r\n            }\r\n            return of(err);\r\n        }));\r\n  }\r\n  \r\n}","import { ValidationErrors, ValidatorFn, AbstractControl } from '@angular/forms';\n\nexport class PasswordPolicy {\n\n  static pass:string[] = [\"1v7Upjw3nT\",\"YAgjecc826\",\"a838hfiD\",\"PolniyPizdec0211\",\"Password1\",\"Sojdlg123aljg\",\n    \"j38ifUbn\",\"3rJs1la7qE\",\"iw14Fi9j\"]\n\n    static patternValidator(regex: RegExp, error: ValidationErrors): ValidatorFn {\n        return (control: AbstractControl): { [key: string]: any } => {\n          if (!control.value) {\n            // if control is empty return no error\n            return null;\n          }\n      \n          // test the value of the control against the regexp supplied\n          const valid = regex.test(control.value);\n      \n          // if true, return no error (no error), else return error passed in the second parameter\n          return valid ? null : error;\n        };\n    }\n\n    static passwordMatchValidator(control: AbstractControl) {\n        const password: string = control.get('password').value; // get password from our password form control\n        const confirmPassword: string = control.get('confirmPassword').value; // get password from our confirmPassword form control\n        // compare is the password math\n        if (password !== confirmPassword) {\n          // if they don't match, set an error in our confirmPassword form control\n          control.get('confirmPassword').setErrors({ NoPassswordMatch: true });\n        }\n    }\n\n    static checkTop1000(error: ValidationErrors): ValidatorFn {\n      return (control: AbstractControl): { [key: string]: any } => {\n        if (!control.value) {\n          // if control is empty return no error\n          return null;\n        }\n    \n        const valid = this.pass.includes(control.value)      \n    \n        // if true, return no error (no error), else return error passed in the second parameter\n        return valid ? error : null;\n      };\n  }\n}\n","import { Directive, OnDestroy, TemplateRef, ViewContainerRef, Input } from '@angular/core';\nimport { User } from '../_models/user';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../_services/auth.service';\nimport * as _ from 'lodash';\n\n\n@Directive({\n    selector:\"[rbacAllow]\"\n})\nexport class RbacAllowDirective implements OnDestroy {\n\n    allowedRole:string;\n    user:User;\n\n    sub:Subscription;\n\n    constructor(private templateRef: TemplateRef<any>,private viewContainer: ViewContainerRef,\n        private authService: AuthService) {\n\n        this.sub = authService.user$.subscribe(\n            user => {\n                this.user = user;\n                this.showIfUserAllowed();\n            });\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    @Input()\n    set rbacAllow(allowedRole: string) {\n        this.allowedRole = allowedRole;\n        this.showIfUserAllowed();\n    }\n\n    showIfUserAllowed() {\n\n        if (!this.allowedRole || !this.user) {\n            this.viewContainer.clear();\n            return;\n        }\n\n        if (this.allowedRole == this.user.role) {\n            this.viewContainer.createEmbeddedView(this.templateRef);\n        }\n        else {\n            this.viewContainer.clear();\n        }\n\n    }\n\n}","import {Routes} from '@angular/router';\nimport {LoginComponent} from \"../login/login.component\";\nimport {SignupComponent} from \"../signup/signup.component\";\nimport {AddTransactionComponent} from \"../transaction/add-transaction/add-transaction.component\";\nimport {MyTransactionsComponent} from \"../transaction/mytransactions/mytransactions.component\";\nimport { PhotographersComponent } from '../photographer/photographers/photographers.component';\nimport { AddPhotographerComponent } from '../photographer/add-photographer/add-photographer.component';\nimport { EditPhotographerComponent } from '../photographer/edit-photographer/edit-photographer.component';\nimport { PhotographsComponent } from '../photograph/photographs/photographs.component';\nimport { AddPhotographComponent } from '../photograph/add-photograph/add-photograph.component';\nimport { EditPhotographComponent } from '../photograph/edit-photograph/edit-photograph.component';\nimport { MyPhotographsComponent } from '../photograph/my-photographs/my-photographs.component';\nimport { MessagesComponent } from '../message/messages/messages.component';\nimport { AddMessageComponent } from '../message/add-message/add-message.component';\nimport { UsersComponent } from '../users/users.component';\nimport { WelcomeComponent } from '../welcome/welcome.component';\n\n\nexport const routesConfig: Routes = [\n    \n/*********************************************** */\n    {\n        path: 'photographs',\n        component: PhotographsComponent,\n        canActivate:[\"authenticationGuard\"]\n    },\n    {\n        path: 'myphotographs',\n        component: MyPhotographsComponent,\n        canActivate: [\"usersOnlyGuard\"]\n    },\n    {\n        path: 'photographs/add',\n        component: AddPhotographComponent,\n        canActivate: [\"adminsOnlyGuard\"]\n    },\n    {\n        path: 'photographs/:id',\n        component: EditPhotographComponent,\n        canActivate: [\"adminsOnlyGuard\"]\n    },\n/*********************************************** */\n    {\n        path: 'photographers',\n        component: PhotographersComponent,\n        canActivate:[\"adminsOnlyGuard\"]\n    },\n    {\n        path: 'photographers/add',\n        component: AddPhotographerComponent,\n        canActivate: [\"adminsOnlyGuard\"]\n    },\n    {\n        path: 'photographers/:id',\n        component: EditPhotographerComponent,\n        canActivate: [\"adminsOnlyGuard\"]\n    },\n/*********************************************** */\n\n    {\n        path: 'messages',\n        component: MessagesComponent,\n        canActivate: [\"usersOnlyGuard\"]\n    },\n    {\n        path: 'messages/add',\n        component: AddMessageComponent,\n        canActivate: [\"usersOnlyGuard\"]\n    },\n\n/*********************************************** */\n    \n    {\n        path: 'transactions',\n        component: MyTransactionsComponent,\n        canActivate:[\"authenticationGuard\"]\n    },\n    {\n        path: 'transaction',\n        component: AddTransactionComponent,\n        canActivate: [\"usersOnlyGuard\"]\n    },\n/*********************************************** */\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n\n    {\n        path: 'signup',\n        component: SignupComponent\n    },\n    /*********************************************** */\n    {\n        path: 'users',\n        component: UsersComponent,\n        canActivate:[\"authenticationGuard\"]\n    },\n    {\n        path: 'welcome',\n        component: WelcomeComponent\n    },\n    {\n        path: '',\n        redirectTo:'/welcome',\n        pathMatch: 'full'\n    },\n    {\n        path: '**',\n        redirectTo: '/welcome',\n        pathMatch: 'full'\n    }    \n];","import { FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\r\n\r\n  export function validSearch():ValidatorFn{\r\n    return (control: AbstractControl): {[key: string]: any} | null => {\r\n\r\n        if(control.value.toString().includes(';') || control.value.toString().includes('--') || control.value.toString().includes('=')\r\n        || control.value.toString().toLowerCase().includes('insert') || control.value.toString().toLowerCase().includes('drop table') || /\\d/.test(control.value.toString())){\r\n\r\n            return {validSearch: true};            \r\n        }else{\r\n\r\n            return null;\r\n        }\r\n  }\r\n}\r\n","import {tap, shareReplay, map, filter} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable, BehaviorSubject} from \"rxjs\";\nimport {User} from \"../_models/user\";\n\nexport const ANONYMOUS_USER : User = {\n    id: undefined,\n    email: '',\n    money:undefined,\n    firstName:'',\n    lastName:'',\n    profileLink:'',\n    role:''\n}\n\n\n@Injectable()\nexport class AuthService {\n\n   private subject = new BehaviorSubject<User>(undefined);\n   user$: Observable<User> = this.subject.asObservable().pipe(filter(user => !!user));;\n   isLoggedIn$: Observable<boolean> = this.user$.pipe(map(user => !!user.id));\n   isLoggedOut$: Observable<boolean> = this.isLoggedIn$.pipe(map(isLoggedIn => !isLoggedIn));\n\n    constructor(private http: HttpClient) {\n        http.get<User>('/api/user').subscribe(user => this.subject.next(user ? user : ANONYMOUS_USER));\n    }\n\n\n    signUp(email:string, password:string,firstName:string,lastName:string,profileLink:string ) {      \n      return this.http.post<User>('/api/signup', {email, password,firstName,lastName,profileLink}).pipe(\n          shareReplay(),tap(user => this.subject.next(user)),);\n    }\n\n    login(email:string, password:string ) {\n        return this.http.post<User>('/api/login', {email, password}).pipe(shareReplay(),tap(user => this.subject.next(user)),);\n    }\n\n    logout() : Observable<any> {\n        return this.http.post('/api/logout', null).pipe(shareReplay(),tap(user => this.subject.next(ANONYMOUS_USER)));\n    }\n\n    getAllUsers() : Observable<User[]> {\n        return this.http.get<User[]>('/api/users-all');\n    }\n\n    getUsers(input:string) : Observable<User[]> {\n        return this.http.post<any>(`/api/users`,{input});\n    }\n\n    validateCaptcha(captcha: string) {\n        return this.http.post<any>('/api/validatecaptcha', {captcha});\n    }\n}\n\n\n\n\n\n","import { AuthService } from './auth.service';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, first, tap } from 'rxjs/operators';\r\nimport * as _ from 'lodash';\r\n\r\nexport class AuthenticationGuard implements  CanActivate {\r\n    \r\n    constructor(private authService:AuthService, private router:Router) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot,state: RouterStateSnapshot): Observable<boolean>  {\r\n        return this.authService.user$.pipe(\r\n\r\n            map(user => user.id != undefined),\r\n            first(),\r\n            tap(allowed => {\r\n                if (!allowed) {\r\n                    this.router.navigateByUrl('/');\r\n                }\r\n            }),\r\n        );\r\n    }\r\n}","import { AuthService } from './auth.service';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, first, tap } from 'rxjs/operators';\nimport * as _ from 'lodash';\n\nexport class AuthorizationGuard implements  CanActivate {\n    constructor(private allowedRole:string,private authService:AuthService, private router:Router) {}\n\n    canActivate(route: ActivatedRouteSnapshot,state: RouterStateSnapshot): Observable<boolean>  {\n        return this.authService.user$.pipe(\n\n            map(user => this.allowedRole == user.role),\n            first(),\n            tap(allowed => {\n                if (!allowed) {\n                    this.router.navigateByUrl('/');\n                }\n            }),\n        );\n    }\n}","import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { shareReplay, tap } from 'rxjs/operators';\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\n\n\n@Injectable()\nexport class MessageService {\n\n    constructor(private http: HttpClient) {}\n\n    getMessages() : Observable<Message[]> {\n        return this.http.get<Message[]>('/api/messages');\n    }\n\n    addMessage(content:string,receiverEmail:number){ \n        return this.http.post<Message>('/api/addmessage',{content,receiverEmail}).pipe(\n            shareReplay(),tap()\n        );\n    }\n}","import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { shareReplay, tap } from 'rxjs/operators';\nimport { Photograph } from '../_models/photograph';\n\n\n@Injectable()\nexport class PhotographService {\n\n    constructor(private http: HttpClient) {}\n\n    getPhotographs() : Observable<Photograph[]> {\n        return this.http.get<Photograph[]>(`/api/photographs`);\n    }\n\n    getMyPhotographs() : Observable<Photograph[]> {\n        return this.http.get<Photograph[]>(`/api/myphotographs`);\n    }\n\n    getPhotograph(id:number) : Observable<Photograph> {\n        var address='/api/photographs/'+id.toString(); \n        return this.http.get<Photograph>(address);\n    }\n\n    addPhotograph(name:string,photographerId:number,year:number,price:number){\n        return this.http.post<Photograph>('/api/addphotograph',{name,photographerId,year,price}).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n    editPhotograph(id:number,name:string,photographerId:number,year:number,price:number){  \n        var address='/api/photographs/'+id.toString();   \n        return this.http.put<Photograph>(address,{id,name,photographerId,year,price}).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n    deletePhotograph(id:number){  \n        var address='/api/photographs/'+id.toString();       \n        return this.http.delete<any>(address).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n    buyPhotograph(id:number){  \n        var address=`/api/buyphotograph/`+id.toString();       \n        return this.http.post<Photograph>(address,{id}).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n    sellPhotograph(id:number){  \n        var address=`/api/sellphotograph/`+id.toString();       \n        return this.http.post<Photograph>(address,{id}).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n    ping(input:string) {\n        return this.http.post<any>('/api/ping',{input});\n    }\n\n}","import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { Photographer } from '../_models/photographer';\nimport { shareReplay, tap } from 'rxjs/operators';\n\n\n@Injectable()\nexport class PhotographerService {\n\n    constructor(private http: HttpClient) {\n\n\n    }\n\n    getPhotographers() : Observable<Photographer[]> {\n        return this.http.get<Photographer[]>('/api/photographers');\n    }\n\n    getPhotographer(id:number) : Observable<Photographer> {\n        var address='/api/photographers/'+id.toString(); \n        return this.http.get<Photographer>(address);\n    }\n\n    addPhotographer(firstName:string,lastName:string,age:number){      \n        return this.http.post<Photographer>('/api/addphotographer',{firstName,lastName,age}).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n    editPhotographer(id:number,firstName:string,lastName:string,age:number){   \n        var address='/api/photographers/'+id.toString();   \n        return this.http.put<Photographer>(address,{id,firstName,lastName,age}).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n    deletePhotographer(id:number){  \n        var address='/api/photographers/'+id.toString();       \n        return this.http.delete<any>(address).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n}","import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { Transaction } from '../_models/transaction';\n\n\n@Injectable()\nexport class TransactionService {\n\n    constructor(private http: HttpClient) {}\n\n    sendMoney(receiverEmail:string, amount:number, password:string) {\n        return this.http.post<Transaction>('/api/sendmoney', {receiverEmail, amount,password}).pipe(\n            shareReplay(),tap()\n        );\n    } \n\n    getTransactions():Observable<Transaction[]> {\n        return this.http.get<Transaction[]>('/api/transactions');\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './_services/auth.service';\nimport { User } from './_models/user';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'TestApp';\n\n  isLoggedIn$: Observable<boolean>;\n  isLoggedOut$: Observable<boolean>;\n\n  loggedUser$:Observable<User>;\n  email:string;\n  money:number;\n  errorMessage:string;\n  successMessage:string;\n\n  constructor(private authService:AuthService,private router:Router,public toasterService: ToastrService) {\n    this.authService.user$.subscribe(a=>this.email=a.email);\n    this.authService.user$.subscribe(a=>this.money=a.money);\n  }\n\n\n  ngOnInit() {\n    this.isLoggedIn$ = this.authService.isLoggedIn$;\n    this.isLoggedOut$ = this.authService.isLoggedOut$;\n    this.loggedUser$=this.authService.user$;\n  }\n\n  logout() {\n\n    this.authService.logout()\n    .subscribe(\n      () => {\n          this.successMessage=\"You have been successfully logged out\";\n          this.toasterService.success(this.successMessage, 'Success', { positionClass: 'toast-top-center' ,timeOut:5000});\n\n          setTimeout(() => {\n            this.router.navigateByUrl('welcome');\n        }, 1500);\n      },\n      err => {\n          this.errorMessage = err.error.error;\n      }\n    );\n  }\n}\n","<header class=\"l-header\">\n\n  <header class=\"l-header\">\n    <ul class=\"top-menu disable-link-styles\">\n         <li *ngIf=\"isLoggedOut$ | async\">\n              <a routerLink=\"/signup\">Sign Up</a>\n          </li>\n          <li *ngIf=\"isLoggedOut$ | async\">\n              <a routerLink=\"/login\">Login</a>\n          </li>\n            <li *rbacAllow=\"['ADMIN']\">\n              <a routerLink=\"/photographers\">Photographers</a>\n            </li>\n          <li *ngIf=\"isLoggedIn$ | async\">\n            <a routerLink=\"/photographs\">Photographs</a>\n          </li>\n          <li *rbacAllow=\"['USER']\">\n            <a routerLink=\"/myphotographs\">My Photographs</a>\n          </li>\n          <li *rbacAllow=\"['USER']\">\n            <a routerLink=\"/transactions\">Transactions</a>\n          </li>\n          <li *rbacAllow=\"['ADMIN']\">\n            <a routerLink=\"/transactions\">Transactions</a>\n          </li>\n          <li *rbacAllow=\"['USER']\">\n            <a routerLink=\"/messages\">Messages</a>\n          </li>\n          <li *ngIf=\"isLoggedIn$ | async\">\n            <a routerLink=\"/users\">Users</a>\n          </li>\n          <li *ngIf=\"isLoggedIn$ | async\">\n            <a>{{(loggedUser$ | async).email}}</a>\n          </li>\n          <li *rbacAllow=\"['USER']\">\n            <a>{{(loggedUser$ | async).money}}$</a>\n          </li>\n          <li *ngIf=\"isLoggedIn$ | async\" (click)=\"logout()\">\n            <a>Logout</a>\n          </li>\n    </ul>\n  </header>\n</header>\n<main>\n  <router-outlet></router-outlet>\n\n</main>\n\n\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule, HttpClientXsrfModule, HTTP_INTERCEPTORS} from '@angular/common/http';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport {routesConfig} from \"./_common/routes.config\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\n\nimport { AppComponent } from './app.component';\nimport { AuthService } from './_services/auth.service';\nimport { TransactionService } from './_services/transaction.service';\nimport { PhotographService } from './_services/photograph.service';\nimport { MessageService } from './_services/message.service';\n\nimport {Router, RouterModule} from \"@angular/router\";\n\nimport { AddTransactionComponent } from './transaction/add-transaction/add-transaction.component';\nimport { MyTransactionsComponent } from './transaction/mytransactions/mytransactions.component';\nimport { PhotographersComponent } from './photographer/photographers/photographers.component';\nimport { PhotographerService } from './_services/photographerService';\nimport { AddPhotographerComponent } from './photographer/add-photographer/add-photographer.component';\nimport { EditPhotographerComponent } from './photographer/edit-photographer/edit-photographer.component';\nimport { PhotographsComponent } from './photograph/photographs/photographs.component';\nimport { AddPhotographComponent } from './photograph/add-photograph/add-photograph.component';\nimport { EditPhotographComponent } from './photograph/edit-photograph/edit-photograph.component';\nimport { MyPhotographsComponent } from './photograph/my-photographs/my-photographs.component';\nimport { AddMessageComponent } from './message/add-message/add-message.component';\nimport { MessagesComponent } from './message/messages/messages.component';\nimport { UsersComponent } from './users/users.component';\nimport { AuthorizationGuard } from './_services/authorization.guard';\nimport { AuthenticationGuard } from './_services/authentication.guard';\nimport { ErrorInterceptor } from './_common/error.interceptor';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { RbacAllowDirective } from './_common/rbac-allow.directive';\nimport { RecaptchaModule, RecaptchaFormsModule } from 'ng-recaptcha';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\n\nexport function createAdminOnlyGuard(authService:AuthService, router:Router) {\n  return new AuthorizationGuard('ADMIN', authService, router);\n}\nexport function createUserOnlyGuard(authService:AuthService, router:Router) {\nreturn new AuthorizationGuard('USER', authService, router);\n}\nexport function createAuthenticationGuard(authService:AuthService, router:Router) {\nreturn new AuthenticationGuard(authService, router);\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    AddTransactionComponent,\n    MyTransactionsComponent,\n    PhotographersComponent,\n    AddPhotographerComponent,\n    EditPhotographerComponent,\n    PhotographsComponent,\n    AddPhotographComponent,\n    EditPhotographComponent,\n    MyPhotographsComponent,\n    AddMessageComponent,\n    MessagesComponent,\n    UsersComponent,\n    WelcomeComponent,\n    RbacAllowDirective\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    HttpClientXsrfModule.withOptions({\n      cookieName: 'XSRF-TOKEN',\n      headerName: 'x-xsrf-token'\n    }),\n    RouterModule.forRoot(routesConfig),\n    ReactiveFormsModule,\n    RecaptchaModule,  //this is the recaptcha main module\n    RecaptchaFormsModule, //this is the module for form incase form validation\n    BrowserAnimationsModule, // required animations module\n    ToastrModule.forRoot() // ToastrModule added\n  ],\n  providers: [AuthService, TransactionService, PhotographerService,PhotographService,MessageService,\n    {\n      provide: 'adminsOnlyGuard',\n      useFactory: createAdminOnlyGuard,\n      deps: [\n          AuthService,\n          Router\n      ]\n    },\n    {\n      provide: 'usersOnlyGuard',\n      useFactory: createUserOnlyGuard,\n      deps: [\n          AuthService,\n          Router\n      ]\n    },\n    {\n      provide: 'authenticationGuard',\n      useFactory: createAuthenticationGuard,\n      deps: [\n          AuthService,\n          Router\n      ]\n    },\n    { \n      provide: HTTP_INTERCEPTORS, \n      useClass: ErrorInterceptor,\n       multi: true\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators, FormControl} from \"@angular/forms\";\nimport { AuthService } from '../_services/auth.service';\nimport {Router} from \"@angular/router\";\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    form:FormGroup;\n    errorMessage:string;\n    successMessage:string;\n    cap:boolean;\n\n    error_messages = {\n        'email': [\n          { type: 'required', message: 'Email is required.' },\n          { type: 'minlength', message: 'Email length.' },\n          { type: 'maxlength', message: 'Email length.' },\n          { type: 'pattern', message: 'please enter a email address of a proper type.' }\n        ],\n        'password': [\n          { type: 'required', message: 'password is required.' },\n          { type: 'minlength', message: 'password length.' },\n          { type: 'maxlength', message: 'password length.' }\n        ],\n        'captcha': [\n            { type: 'required', message: 'captcha is required.' }\n        ]\n    }\n\n    constructor(private fb:FormBuilder, private authService: AuthService, private router: Router,public toasterService: ToastrService) {\n\n        this.form = this.fb.group({\n            email: new FormControl('', Validators.compose([\n                Validators.required,\n                Validators.minLength(6),\n                Validators.maxLength(30),\n                Validators.pattern(\"[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}\"),\n                Validators.email\n              ])),\n            password: new FormControl('', Validators.compose([\n                Validators.required,\n                Validators.minLength(8),\n                Validators.maxLength(30)\n            ])),\n            \n            recaptchaReactive: new FormControl('', Validators.compose([\n                Validators.required,\n            ]))\n            }, { \n          validators: this.captcha.bind(this)\n        });\n\n    }\n\n    ngOnInit() {\n    }\n\n    //function to resolve the reCaptcha and retrieve a token\n    async resolved(captchaResponse: string) {\n        this.sendTokenToBackend(captchaResponse); //declaring the token send function with a token parameter\n    }\n  \n    //function to send the token to the node server\n    sendTokenToBackend(tok){\n\n        //calling the service and passing the token to the service\n        this.authService.validateCaptcha(tok).subscribe(\n        data => {\n            this.cap=data.success;\n            this.captcha();\n        },\n        err => {\n        },\n        () => {}\n        );\n    }\n\n    captcha(){\n        return this.cap == true ? null : { robot: true };\n    }\n\n    login() {\n\n        const val = this.form.value;\n\n        if (val.email && val.password) {\n\n            this.authService.login(val.email, val.password)\n                .subscribe(\n                    () => {\n                        this.successMessage=\"You have been successfully logged in\";\n                        this.toasterService.success(this.successMessage, 'Success', { positionClass: 'toast-top-center' ,timeOut:5000});\n\n                        setTimeout(() => {\n                            this.router.navigateByUrl('welcome');\n                        }, 1500);\n                    },\n                    err => {\n                        this.errorMessage = err.error.error;\n                    }\n                );\n        }\n    }\n}\n","<head>    <script src=\"https://www.google.com/recaptcha/api.js?onload=grecaptchaCallback&amp;render=explicit\"></script>\n</head> \n<h1 class=\"naslov\">Login</h1>\n<div class=\"error-messages\">\n    <ng-container *ngFor=\"let error of error_messages.email\">\n      <label class=\"text-danger errors\" *ngIf=\"form.get('email').hasError(error.type) && (form.get('email').dirty || form.get('email').touched)\">\n          {{error.message }}\n      </label>\n    </ng-container>\n</div>\n<div class=\"error-messages\">\n    <ng-container *ngFor=\"let error of error_messages.password\">\n      <label class=\"text-danger errors\" *ngIf=\"form.get('password').hasError(error.type) && (form.get('password').dirty || form.get('password').touched)\">\n          {{error.message }}\n      </label>\n    </ng-container>\n</div>\n\n<form autocomplete=\"off\" novalidate [formGroup]=\"form\" class=\"form-center\">\n    <fieldset>\n      <div>\n          <re-captcha (resolved)=\"resolved($event)\" \n                      formControlName=\"recaptchaReactive\" \n                      siteKey=\"6LfePfAUAAAAAGa6FIBtAHMku9gAzvgwZsYD1cXu\">  \n          </re-captcha>\n      </div>\n      <div class=\"form-group\">\n          <label>Email:</label>\n          <input name=\"email\" formControlName=\"email\" class=\"form-control\">\n      </div>\n\n      <div class=\"form-group\">\n          <label>Password:</label>\n          <input name=\"password\" class=\"form-control\" formControlName=\"password\" type=\"password\" class=\"form-control\">\n      </div>\n\n  </fieldset>\n\n\n  <div class=\"form-buttons\">\n    <button class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"login()\">Login</button>\n  </div>\n\n\n</form>","import { Component, OnInit, SecurityContext } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { Observable } from 'rxjs';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MessageService } from 'src/app/_services/message.service';\nimport { TransactionService } from 'src/app/_services/transaction.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-add-message',\n  templateUrl: './add-message.component.html',\n  styleUrls: ['./add-message.component.css']\n})\nexport class AddMessageComponent implements OnInit {\n\n  \n  users$: Observable<User[]>;\n  form:FormGroup;\n  errorMessage:string;\n  successMessage:string;\n\n  constructor(private fb:FormBuilder, private messageService: MessageService, private router: Router,\n    private transactionService:TransactionService,private sanitizer:DomSanitizer, private authService:AuthService,public toasterService: ToastrService) {\n    \n    this.form = this.fb.group({\n      content: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(300)\n      ])),\n      receiverEmail: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n    },);\n  }\n\n  ngOnInit(): void {\n    this.users$ = this.authService.getAllUsers();\n  }\n\n  sendMessage() {\n    const val = this.form.value;\n\n    if (val.content && val.receiverEmail) {\n\n        this.messageService.addMessage(val.content, val.receiverEmail)\n            .subscribe(\n              () => {\n                  this.successMessage=\"Message has been sent\";\n                  this.toasterService.success(this.successMessage, 'Success', { positionClass: 'toast-top-center' ,timeOut:5000});\n                  setTimeout(() => {\n                      this.router.navigateByUrl(`messages`);\n                  }, 1500);\n              },\n              err => {\n                  this.errorMessage = err.error.error;\n              }\n          );\n    }\n  }\n\n}\n","<h1 class=\"naslov\">New message</h1>\n\n<form autocomplete=\"off\" novalidate [formGroup]=\"form\" class=\"form-center\">\n  <fieldset>\n      <div class=\"form-field\" >\n          <label>Receiver:</label>\n          <select id=\"receiverEmail\" class=\"form-control\" name=\"receiverEmail\" formControlName=\"receiverEmail\" required >\n              <option *ngFor=\"let user of users$ | async\" [ngValue]=\"user.email\">\n                  {{ user.firstName }} {{user.lastName}}\n              </option>\n          </select>\n      </div>\n      <div class=\"form-field\">\n          <label>Content:</label>\n          <textarea type=\"text\" class=\"form-control\" name=\"content\" formControlName=\"content\" required maxlength=\"300\"></textarea>\n      </div>\n  </fieldset>\n\n  <div class=\"form-buttons\">\n      <button class=\"btn btn-dark\" [disabled]=\"form.invalid\" (click)=\"sendMessage()\"> Send</button>\n  </div>\n\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../../_models/user';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\nimport { Router } from '@angular/router';\nimport { MessageService } from 'src/app/_services/message.service';\nimport { DomSanitizer, SafeResourceUrl, SafeUrl, SafeHtml } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  messages$: Observable<Message[]>;\n  loggedUser$: Observable<User>;\n  content:string;\n  message1:SafeUrl;\n  message2:SafeHtml;\n  message3:SafeHtml;\n  contents:SafeHtml[]=[];\n  session:string;\n\n  constructor(private messageService: MessageService, private router: Router, private authService: AuthService, private sanitizer:DomSanitizer) {    \n      this.messages$=this.messageService.getMessages();\n      this.loggedUser$=this.authService.user$;\n  }\n\n  desanitizeURL(text:string):SafeUrl {\n    return this.sanitizer.bypassSecurityTrustUrl(text);\n  }\n\n  ngOnInit(): void {\n    this.messages$=this.messageService.getMessages();\n    this.loggedUser$=this.authService.user$;\n    \n  }\n}","<div>\n    <h1 class=\"naslov\">Messages</h1>\n    <button routerLink=\"/messages/add\" class=\"btn btn-dark btn-center\">\n        New message\n    </button>\n</div>\n\n<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"(messages$ | async)\" > \n    <table class=\"table lessons-list card card-strong \">\n        <tbody>\n        <tr *ngFor=\"let p of messages$ | async;\" >\n            <td class=\"lesson-title mess\"> <b>Sender</b><br>{{p.sender.firstName}} {{p.sender.lastName}} </td>\n            <td class=\"lesson-title mess\"> <b>Receiver</b><br>{{p.receiver.firstName}} {{p.receiver.lastName}} </td>\n            <td class=\"mess\"> <b>Date</b><br>{{p.date}} </td>\n            <td class=\"message-content\" [innerHtml]=\"p.content\"></td>\n        </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Photographer } from 'src/app/_models/photographer';\nimport { Observable } from 'rxjs';\nimport { PhotographService } from 'src/app/_services/photograph.service';\nimport { Router } from '@angular/router';\nimport { PhotographerService } from 'src/app/_services/photographerService';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-add-photograph',\n  templateUrl: './add-photograph.component.html',\n  styleUrls: ['./add-photograph.component.css']\n})\nexport class AddPhotographComponent implements OnInit {\n\n  \n  photographers$: Observable<Photographer[]>;\n  form:FormGroup;\n  errorMessage:string;\n  successMessage:string;\n\n  error_messages = {\n    'name': [\n      { type: 'maxlength', message: 'Input cannot be more than 50 characters long' },\n    ],\n    'year': [\n      { type: 'max', message: 'Year must be between 1800 and 2020' },\n      { type: 'min', message: 'Year must be between 1800 and 2020' },\n    ]\n  };\n\n  constructor(private fb:FormBuilder, private photographService: PhotographService,\n    private photographerService: PhotographerService, private router: Router,public toasterService: ToastrService) {\n\n    this.form = this.fb.group({\n      year: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.min(1800),\n        Validators.max(2020),\n      ])),\n      price: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.min(1),\n      ])),\n      name: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(50)\n      ])),\n      photographerId: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n    },);\n  }\n\n  ngOnInit(): void {\n    this.photographers$ = this.photographerService.getPhotographers();\n  }\n\n  createPhotograph() {\n    const val = this.form.value;\n\n    if (val.name && val.photographerId && val.year && val.price) {\n\n        this.photographService.addPhotograph(val.name,val.photographerId,val.year,val.price)\n            .subscribe(\n              () => {\n                  this.successMessage=\"Photograph has been created\";\n                  this.toasterService.success(this.successMessage, 'Success', { positionClass: 'toast-top-center' ,timeOut:5000});\n                  setTimeout(() => {\n                      this.router.navigateByUrl(`/photographs`);\n                  }, 1500);\n              },\n              err => {\n                  this.errorMessage = err.error.error;\n              }\n          );\n\n    }\n  }\n}\n","<h1 class=\"naslov\">New photograph</h1>\n\n<ng-container *ngFor=\"let error of error_messages.name\" >\n    <label class=\"text-danger errors\" *ngIf=\"form.get('name').hasError(error.type) && (form.get('name').dirty || form.get('name').touched)\">\n        {{error.message }}\n    </label>\n</ng-container>\n\n<ng-container *ngFor=\"let error of error_messages.year\" class=\"errors\">\n    <label class=\"text-danger errors\" *ngIf=\"form.get('year').hasError(error.type) && (form.get('year').dirty || form.get('year').touched)\">\n      {{error.message }}\n    </label>\n</ng-container>\n\n<form autocomplete=\"off\" novalidate [formGroup]=\"form\" class=\"form-center\">\n    <fieldset>\n        <div class=\"form-group\">\n            <label>Name:</label>\n            <input class=\"form-control\" formControlName=\"name\" type=\"text\"  required/>\n        </div>\n        <div class=\"form-field\" >\n            <label>Photographer:</label>\n            <select id=\"photographerId\" class=\"form-control\" name=\"photographerId\" formControlName=\"photographerId\" required >\n                <option *ngFor=\"let p of photographers$ | async\" [ngValue]=\"p.id\">\n                    {{ p.firstName }} {{ p.lastName }}\n                </option>\n            </select>\n        </div>\n        <div class=\"form-field\">\n            <label>Year:</label>\n            <input type=\"number\" class=\"form-control\" name=\"year\" formControlName=\"year\" required>\n        </div>\n        <div class=\"form-field\">\n            <label>Price:</label>\n            <input type=\"number\" class=\"form-control\" name=\"price\" formControlName=\"price\" required>\n        </div>\n    </fieldset>\n\n    <div class=\"form-buttons\">\n        <button class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"createPhotograph()\">Save</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormControl, FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\nimport { PhotographerService } from 'src/app/_services/photographerService';\nimport { PhotographService } from 'src/app/_services/photograph.service';\nimport { Photograph } from 'src/app/_models/photograph';\nimport { switchMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Photographer } from 'src/app/_models/photographer';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-edit-photograph',\n  templateUrl: './edit-photograph.component.html',\n  styleUrls: ['./edit-photograph.component.css']\n})\nexport class EditPhotographComponent implements OnInit {\n\n  private photographId: number;\n  photographers$: Observable<Photographer[]>;\n  photograph:Photograph;\n  form:FormGroup;\n  errorMessage:string;\n  successMessage:string;\n\n  error_messages = {\n    'name': [\n      { type: 'maxlength', message: 'Input cannot be more than 50 characters long' },\n    ],\n    'year': [\n      { type: 'max', message: 'Year must be between 1800 and 2020' },\n      { type: 'min', message: 'Year must be between 1800 and 2020' },\n    ]\n  };\n\n constructor(private route: ActivatedRoute,private fb:FormBuilder, \n   private photographerService:PhotographerService,private photographService:PhotographService, private router: Router,public toasterService: ToastrService) {\n     \n    this.form = this.fb.group({\n      year: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.min(1800),\n        Validators.max(2020),\n      ])),\n      price: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.min(1),\n      ])),\n      name: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(50)\n      ])),\n      photographerId: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n    },);\n  }\n\n \n ngOnInit() {\n   this.route.paramMap\n     .pipe(switchMap((params: ParamMap) => params.get(\"id\")))\n     .subscribe(id => {\n       this.photographId = parseInt(id, 10);\n       this.load();\n       this.photographers$ = this.photographerService.getPhotographers();\n     });\n }\n\n load(onlyTasks: boolean = false) {\n   this.photographService.getPhotograph(this.photographId).subscribe(a => {\n       this.photograph = {\n         id : a.id,\n         name:a.name,\n         year : a.year,\n         photoLink : a.photoLink,\n         photographer:null,\n         photographerId:a.photographerId,\n         price:a.price,\n         userId:null\n       };\n   });\n }\n\n editPhotograph(){\n   const val = this.form.value;\n\n   if (val.name && val.photographerId && val.year && val.price) {\n       this.photographService.editPhotograph(this.photographId, val.name , val.photographerId , val.year , val.price)\n           .subscribe(\n            () => {\n                this.successMessage=\"Photograph has been edited\";\n                this.toasterService.success(this.successMessage, 'Success', { positionClass: 'toast-top-center' ,timeOut:5000});\n                setTimeout(() => {\n                    this.router.navigateByUrl(`admin/photographs`);\n                }, 1500);\n            },\n            err => {\n                this.errorMessage = err.error.error;\n            }\n        );\n\n   }\n }\n\n}\n","<h1 class=\"naslov\">Edit photograph</h1>\n<ng-container *ngFor=\"let error of error_messages.name\" class=\"errors\">\n    <label class=\"text-danger errors\" *ngIf=\"form.get('name').hasError(error.type) && (form.get('name').dirty || form.get('name').touched)\">\n        {{error.message }}\n    </label>\n</ng-container>\n\n<ng-container *ngFor=\"let error of error_messages.year\" class=\"errors\">\n    <label class=\"text-danger errors\" *ngIf=\"form.get('year').hasError(error.type) && (form.get('year').dirty || form.get('year').touched)\">\n      {{error.message }}\n    </label>\n</ng-container>\n\n<form autocomplete=\"off\" novalidate [formGroup]=\"form\" *ngIf=\"photograph\" class=\"form-center\">\n    <fieldset>\n        <div class=\"form-group\">\n            <label>Name:</label>\n            <input class=\"form-control\" formControlName=\"name\" type=\"text\" [(ngModel)]=\"photograph.name\" required />\n        </div>\n        <div class=\"form-field\" >\n            <label>Photographer:</label>\n            <select id=\"photographerId\" class=\"form-control\" name=\"photographerId\" formControlName=\"photographerId\" [(ngModel)]=\"photograph.photographerId\" required>\n                <option *ngFor=\"let p of photographers$ | async\" [ngValue]=\"p.id\">\n                    {{ p.firstName }} {{ p.lastName }}\n                </option>\n            </select>\n        </div>\n        <div class=\"form-field\">\n            <label>Year:</label>\n            <input type=\"number\" class=\"form-control\" name=\"year\" formControlName=\"year\" [(ngModel)]=\"photograph.year\" required >\n        </div>\n        <div class=\"form-field\">\n            <label>Price:</label>\n            <input type=\"number\" class=\"form-control\" name=\"price\" formControlName=\"price\" [(ngModel)]=\"photograph.price\" required>\n        </div>\n    </fieldset>\n\n    <div class=\"form-buttons\">\n        <button class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"editPhotograph()\">Save</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { PhotographService } from 'src/app/_services/photograph.service';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { Photograph } from 'src/app/_models/photograph';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-my-photographs',\n  templateUrl: './my-photographs.component.html',\n  styleUrls: ['./my-photographs.component.css']\n})\nexport class MyPhotographsComponent implements OnInit {\n\n  photos$: Observable<Photograph[]>;\n  errorMessage:string;\n  successMessage:string;\n\n  constructor(private photographService: PhotographService, private authService: AuthService,private router:Router,public toasterService: ToastrService) {}\n\n  ngOnInit(): void {\n    this.photos$=this.photographService.getMyPhotographs();\n  }\n\n  sellPhotograph(id:number){\n    this.photographService.sellPhotograph(id).\n    subscribe(\n      () => {\n          this.successMessage=\"Photograph has been sold\";\n          this.toasterService.success(this.successMessage, 'Success', { positionClass: 'toast-top-center' ,timeOut:5000});\n          location.reload(true);\n          if (this.photographService.getMyPhotographs() == null){\n            this.photos$=null;\n          }else{\n            this.photos$=this.photographService.getMyPhotographs();\n          }\n      },\n      err => {\n          this.errorMessage = err.error.error;\n      }\n    );\n  }\n\n}\n","<h2 *ngIf=\"!(photos$ | async)\" class=\"naslov\">You currently don't own any photographs..</h2>\n\n<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"(photos$ | async)\" >\n\n    <div>\n        <h1 class=\"naslov\">My Photographs</h1>\n \n    <table class=\"table lessons-list card card-strong\">\n        <tbody>\n        <tr *ngFor=\"let p of photos$ | async\" >\n            <td class=\"title\"> \n                {{p.name}}, {{p.year}}\n            </td>\n            <td class=\"title\"> \n               {{p.photographer.firstName}} {{p.photographer.lastName}} ({{p.photographer.age}})\n            </td>\n            <td class=\"title\"> \n                {{p.price}}$\n            </td>\n            <td class=\"photo\">\n                <a  href=\"{{p.photoLink}}\" target=\"_blank\">\n                    <img src=\"../../../assets/photos/{{p.photoLink}}\" alt=\"photo\" height=\"130\" width=\"160\">\n                </a>\n            </td>\n            <button type=\"button\" class=\"btn btn-dark\" *ngIf=\"p.userId\" (click)=\"sellPhotograph(p.id)\">\n                Sell\n            </button>\n        </tr>\n        </tbody>\n    </table>\n    \n    \n    </div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Photograph } from 'src/app/_models/photograph';\nimport { PhotographService } from 'src/app/_services/photograph.service';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { User } from '../../_models/user';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-photographs',\n  templateUrl: './photographs.component.html',\n  styleUrls: ['./photographs.component.css']\n})\nexport class PhotographsComponent  implements OnInit {\n\n  photos$: Observable<Photograph[]>;\n  loggedUser$: Observable<User>\n  form:FormGroup;\n  form2:FormGroup;\n  response:any;\n  errorMessage:string;\n  successMessage:string;\n\n  error_messages = {\n    'ipaddress': [\n      { type: 'maxlength', message: 'Ip address must be beetween 7 and 15 characters long' },\n      { type: 'minlength', message: 'Ip address must be beetween 7 and 15 characters long' },\n      { type: 'pattern', message: 'That is not a valid ip address' },\n    ]\n  };\n\n  constructor(private photographService: PhotographService, private router: Router, \n    private authService: AuthService,private fb:FormBuilder,public toasterService: ToastrService) {\n      this.form = this.fb.group({\n        ipaddress: new FormControl('', Validators.compose([\n          Validators.required,\n        ]))\n      },);\n  }\n\n  ngOnInit(): void {\n    this.photos$=this.photographService.getPhotographs();\n    this.loggedUser$=this.authService.user$;\n  }\n\n  deletePhotograph(id:number){\n    this.photographService.deletePhotograph(id).subscribe(\n      () => {\n          this.toasterService.success(this.successMessage, 'Success', { positionClass: 'toast-top-center' ,timeOut:5000});\n          if (this.photographService.getPhotographs() == null){\n            this.photos$=null;\n          }else{\n            this.photos$=this.photographService.getPhotographs();\n          }                  \n        },err => {\n          this.errorMessage = err.error.error;\n      }\n    );\n  }\n\n  buyPhotograph(id:number){\n    this.photographService.buyPhotograph(id)\n    .subscribe(\n      () => {\n          this.successMessage=\"Photograph has been bought\";\n          this.toasterService.success(this.successMessage, 'Success', { positionClass: 'toast-top-center' ,timeOut:5000});\n          setTimeout(() => {\n            location.reload(true);\n          }, 1500);\n      },\n      err => {\n          this.errorMessage = err.error.error;\n      }\n    );    \n  }\n\n  sellPhotograph(id:number){\n    this.photographService.sellPhotograph(id).subscribe(\n      () => {\n          this.successMessage=\"Photograph has been sold\";\n          this.toasterService.success(this.successMessage, 'Success', { positionClass: 'toast-top-center' ,timeOut:5000});\n          setTimeout(() => {\n            location.reload(true);\n          }, 1500);\n      },\n      err => {\n          this.errorMessage = err.error.error;\n      }\n    );\n  }\n\n  ping(){\n    const val = this.form.value;\n\n    if (val.ipaddress) {\n      this.photographService.ping(val.ipaddress).subscribe(\n        (resp) => {\n            this.response = resp;\n        }\n      );\n    }\n  }\n}\n\n","<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"(photos$ | async)\" >\n\n    <h1 class=\"naslov\">Photographs</h1>\n    <button routerLink=\"/photographs/add\" class=\"btn btn-dark btn-center\" *rbacAllow=\"['ADMIN']\">\n        New photograph\n    </button>\n  \n    <table class=\"table lessons-list card card-strong\">\n        <tbody>\n        <tr *ngFor=\"let p of photos$ | async\" >\n            <td class=\"title\"> \n                <b>{{p.name}}</b>, {{p.year}}\n            </td>\n            <td class=\"title\"> \n               {{p.photographer.firstName}} {{p.photographer.lastName}} ({{p.photographer.age}})\n            </td>\n            <td class=\"title\"> \n                {{p.price}}$\n            </td>\n            <td class=\"photo\">\n                <a  href=\"{{p.photoLink}}\" target=\"_blank\">\n                    <img src=\"../../../assets/photos/{{p.photoLink}}\" alt=\"photo\" height=\"130\" width=\"160\">\n                </a>\n            </td>\n            <div *rbacAllow=\"['ADMIN']\">\n                <button type=\"button\" class=\"btn btn-warning\" routerLink=\"/photographs/{{p.id}}\">\n                    Edit\n                </button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deletePhotograph(p.id)\">\n                    Delete \n                </button>\n            </div>\n            \n            <div *rbacAllow=\"['USER']\">\n                <button type=\"button\" class=\"btn btn-light\" *ngIf=\"!p.userId\" (click)=\"buyPhotograph(p.id)\" >\n                    Buy\n                </button>\n                <button type=\"button\" class=\"btn btn-dark\" *ngIf=\"p.userId === (loggedUser$ | async).id\" (click)=\"sellPhotograph(p.id)\">\n                    Sell\n                </button>\n            </div>\n            \n        </tr>\n        </tbody>\n    </table>    \n</div>\n\n\n\n<div *rbacAllow=\"['USER']\">\n    <h2>Bored of photographs?</h2>\n    <div class=\"ipsearch\">\n        <h3>Ping an address to waste time</h3>\n        <form novalidate [formGroup]=\"form\">\n            <div class=\"form-group\">\n                <input class=\"form-control search\" formControlName=\"ipaddress\" type=\"text\" placeholder=\"IPv4 address\"\n                    required minlength=\"7\" maxlength=\"15\" pattern=\"^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$\"/>\n            </div>\n            <div class=\"form-buttons\">\n                <button class=\"btn btn-dark src-btn\" [disabled]=\"!form.valid\" (click)=\"ping()\">Ping it!</button>\n             </div>\n        </form> \n        <div *ngIf=\"response\" class=\"ipresponse\">\n            {{response.response}}\n        </div>\n    </div>\n</div>\n<ng-container *ngFor=\"let error of error_messages.ipaddress\" >\n    <label class=\"text-danger errors\" *ngIf=\"form.get('ipaddress').hasError(error.type) && (form.get('ipaddress').dirty || form.get('ipaddress').touched)\">\n        {{error.message }}\n    </label>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { PhotographerService } from '../../_services/photographerService';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-add-photographer',\n  templateUrl: './add-photographer.component.html',\n  styleUrls: ['./add-photographer.component.css']\n})\nexport class AddPhotographerComponent implements OnInit {\n\n  form:FormGroup;\n  errorMessage:string;\n  successMessage:string;\n\n  error_messages = {\n    'firstName': [\n      { type: 'maxlength', message: 'Input cannot be more than 30 characters long' },\n    ],\n    'lastName': [\n      { type: 'maxlength', message: 'Input cannot be more than 30 characters long' },\n    ],\n    'age': [\n      { type: 'max', message: 'Age must be between 18 and 100' },\n      { type: 'min', message: 'Age must be between 18 and 100' },\n\n    ]\n  };\n  \n  constructor(private fb:FormBuilder, private photographerService:PhotographerService, private router: Router,public toasterService: ToastrService) {\n    this.form = this.fb.group({\n      firstName: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(30),\n      ])),\n      lastName: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(30),\n      ])),\n      age: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.min(18),\n        Validators.max(100)\n      ])),\n    },);\n   }\n\n  ngOnInit(): void {\n  }\n\n  createPhotographer(){\n    const val = this.form.value;\n\n    if (val.firstName && val.lastName && val.age) {\n        this.photographerService.addPhotographer(val.firstName,val.lastName,val.age)\n            .subscribe(\n              () => {\n                  this.successMessage=\"Photographer has been created\";\n                  this.toasterService.success(this.successMessage, 'Success', { positionClass: 'toast-top-center' ,timeOut:5000});\n                  setTimeout(() => {\n                      this.router.navigateByUrl(`photographers`);\n                  }, 1500);\n              },\n              err => {\n                  this.errorMessage = err.error.error;\n              }\n          );\n\n    }\n  }\n\n}\n","\n<h1 class=\"naslov\">new Photographer</h1>\n\n<ng-container *ngFor=\"let error of error_messages.firstName\" >\n  <label class=\"text-danger errors\" *ngIf=\"form.get('firstName').hasError(error.type) && (form.get('firstName').dirty || form.get('firstName').touched)\">\n      {{error.message }}\n  </label>\n</ng-container>\n<ng-container *ngFor=\"let error of error_messages.lastName\" >\n  <label class=\"text-danger errors\" *ngIf=\"form.get('lastName').hasError(error.type) && (form.get('lastName').dirty || form.get('lastName').touched)\">\n      {{error.message }}\n  </label>\n</ng-container>\n<ng-container *ngFor=\"let error of error_messages.age\" >\n  <label class=\"text-danger errors\" *ngIf=\"form.get('age').hasError(error.type) && (form.get('age').dirty || form.get('age').touched)\">\n      {{error.message }}\n  </label>\n</ng-container>\n\n<form autocomplete=\"off\" novalidate [formGroup]=\"form\" class=\"form-center\">\n    <fieldset>\n        <div class=\"form-group\">\n            <label>First Name:</label>\n            <input class=\"form-control\" formControlName=\"firstName\" type=\"text\" required />\n        </div>\n        <div class=\"form-field\">\n            <label>Last Name:</label>\n            <input class=\"form-control\" formControlName=\"lastName\" type=\"text\" required/>\n        </div>\n        <div class=\"form-field\">\n            <label>Age</label>\n            <input  class=\"form-control\" type=\"number\" name=\"age\" formControlName=\"age\" required>\n        </div>\n    </fieldset>\n\n    <div class=\"form-buttons\">\n        <button class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"createPhotographer()\">Save</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { PhotographerService } from 'src/app/_services/photographerService';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { switchMap } from 'rxjs/operators';\nimport { Photographer } from 'src/app/_models/photographer';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-edit-photographer',\n  templateUrl: './edit-photographer.component.html',\n  styleUrls: ['./edit-photographer.component.css']\n})\nexport class EditPhotographerComponent implements OnInit {\n\n  private photographerId: number;\n  photographer:Photographer;\n  form:FormGroup;\n  errorMessage:string;\n  successMessage:string;\n\n  error_messages = {\n    'firstName': [\n      { type: 'maxlength', message: 'Input cannot be more than 30 characters long' },\n    ],\n    'lastName': [\n      { type: 'maxlength', message: 'Input cannot be more than 30 characters long' },\n    ],\n    'age': [\n      { type: 'max', message: 'Age must be between 18 and 100' },\n      { type: 'min', message: 'Age must be between 18 and 100' },\n\n    ]\n  };\n\n  constructor(private route: ActivatedRoute,private fb:FormBuilder, private photographerService:PhotographerService, \n    private router: Router,public toasterService: ToastrService) {\n    this.form = this.fb.group({\n      firstName: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(30),\n      ])),\n      lastName: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(30),\n      ])),\n      age: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.min(18),\n        Validators.max(100)\n      ])),\n    },);\n   }\n\n  \n  ngOnInit() {\n    this.route.paramMap\n      .pipe(switchMap((params: ParamMap) => params.get(\"id\")))\n      .subscribe(id => {\n        this.photographerId = parseInt(id, 10);\n        this.load();\n      });\n  }\n\n  load(onlyTasks: boolean = false) {\n    this.photographerService.getPhotographer(this.photographerId).subscribe(a => {\n        this.photographer = {\n          id : a.id,\n          firstName : a.firstName,\n          lastName : a.lastName,\n          age : a.age\n        };\n    });\n  }\n\n  editPhotographer(){\n    const val = this.form.value;\n\n    if (val.firstName && val.lastName && val.age) {\n        this.photographerService.editPhotographer(this.photographerId, val.firstName,val.lastName,val.age)\n        .subscribe(\n          () => {\n              this.successMessage=\"Photographer has been edited\";\n              this.toasterService.success(this.successMessage, 'Success', { positionClass: 'toast-top-center' ,timeOut:5000});\n              setTimeout(() => {\n                  this.router.navigateByUrl(`photographers`);\n              }, 1500);\n          },\n          err => {\n              this.errorMessage = err.error.error;\n          }\n      );\n\n    }\n  }\n\n\n}\n","\n<h1 class=\"naslov\">Edit photographer</h1>\n\n<ng-container *ngFor=\"let error of error_messages.firstName\" >\n  <label class=\"text-danger errors\" *ngIf=\"form.get('firstName').hasError(error.type) && (form.get('firstName').dirty || form.get('firstName').touched)\">\n      {{error.message }}\n  </label>\n</ng-container>\n<ng-container *ngFor=\"let error of error_messages.lastName\" >\n  <label class=\"text-danger errors\" *ngIf=\"form.get('lastName').hasError(error.type) && (form.get('lastName').dirty || form.get('lastName').touched)\">\n      {{error.message }}\n  </label>\n</ng-container>\n<ng-container *ngFor=\"let error of error_messages.age\" >\n  <label class=\"text-danger errors\" *ngIf=\"form.get('age').hasError(error.type) && (form.get('age').dirty || form.get('age').touched)\">\n      {{error.message }}\n  </label>\n</ng-container>\n\n<form autocomplete=\"off\" novalidate [formGroup]=\"form\" *ngIf=\"photographer\" class=\"form-center\">\n    <fieldset>\n        <div class=\"form-group\">\n            <label>First Name:</label>\n            <input class=\"form-control\" formControlName=\"firstName\" type=\"text\" [(ngModel)]=\"photographer.firstName\" required/>\n        </div>\n        <div class=\"form-field\">\n            <label>Last Name:</label>\n            <input class=\"form-control\" formControlName=\"lastName\" type=\"text\" [(ngModel)]=\"photographer.lastName\" required/>\n        </div>\n        <div class=\"form-field\">\n            <label>Age</label>\n            <input type=\"number\" class=\"form-control\" name=\"age\" formControlName=\"age\" [(ngModel)]=\"photographer.age\" required>\n        </div>\n    </fieldset>\n\n    <div class=\"form-buttons\">\n        <button class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"editPhotographer()\" >Save</button>\n    </div>\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Photographer } from '../../_models/photographer';\nimport { PhotographerService } from '../../_services/photographerService';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-photographers',\n  templateUrl: './photographers.component.html',\n  styleUrls: ['./photographers.component.css']\n})\nexport class PhotographersComponent implements OnInit {\n\n  photographers$: Observable<Photographer[]>;\n  errorMessage:string;\n  successMessage:string;\n\n  constructor(private photographerService: PhotographerService, private router: Router,public toasterService: ToastrService) {\n  }\n\n  ngOnInit(): void {\n    this.photographers$=this.photographerService.getPhotographers();\n  }\n\n  deletePhotographer(id:number){\n    this.photographerService.deletePhotographer(id)\n    .subscribe(\n      () => {\n          this.successMessage=\"Photographer has been deleted\";\n          this.toasterService.success(this.successMessage, 'Success', { positionClass: 'toast-top-center' ,timeOut:5000});\n          setTimeout(() => {\n            this.router.navigateByUrl(`photographers`);\n        }, 1500);\n      },\n      err => {\n          this.errorMessage = err.error.error;\n      }\n    );\n    this.photographers$=this.photographerService.getPhotographers();\n  }\n}\n","<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"(photographers$ | async)\" >\n\n    <div>\n        <h1 class=\"naslov\">Photographers</h1>\n        <button routerLink=\"/photographers/add\" class=\"btn btn-dark btn-center\">\n            New photographer\n        </button>\n    </div>\n\n    <table class=\"table lessons-list card card-strong\">\n        <tbody>\n        <tr *ngFor=\"let p of photographers$ | async\" >\n            <td class=\"lesson-title\"> <b>{{p.firstName}} {{p.lastName}}</b> <br> {{p.age}} years old </td>\n            <td class=\"lesson-title\">\n                <button routerLink=\"/photographers/{{p.id}}\" class=\"btn btn-warning\">\n                    Edit \n                </button>\n                <button class=\"btn btn-danger\" (click)=\"deletePhotographer(p.id)\">\n                    Delete \n                </button>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n    \n    \n    </div>","import { Component, OnInit, SecurityContext } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators, FormControl} from \"@angular/forms\";\nimport {AuthService} from \"../_services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {PasswordPolicy} from '../_common/password-policy';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n    errorMessage:string;\n    successMessage:string;\n    public frmSignup: FormGroup; \n\n    constructor(private formBuilder: FormBuilder, private authService: AuthService,private router:Router,\n      private sanitizer:DomSanitizer,public toasterService: ToastrService) {\n      this.frmSignup = this.createSignupForm();\n    }\n\n    ngOnInit() {\n    }\n\n    submit() {\n        const val = this.frmSignup.value;\n\n        if (val.email && val.firstName && val.lastName && val.password && val.password === val.confirmPassword) {\n\n          this.authService.signUp(val.email, val.password,val.firstName,val.lastName,val.profileLink)\n          .subscribe(\n            () => {\n                this.successMessage=\"You have successfully signed in\";\n                this.toasterService.success(this.successMessage, 'Success', { positionClass: 'toast-top-center' ,timeOut:5000});\n                setTimeout(() => {\n                  this.router.navigateByUrl('welcome');\n                }, 1500);\n            },\n            err => {\n                this.errorMessage = err.error.error;\n            }\n        );\n\n        }\n        \n    }\n\n    createSignupForm(): FormGroup {\n      return this.formBuilder.group(\n        {\n          profileLink:[null,Validators.compose([\n            Validators.minLength(30),\n            Validators.maxLength(60),\n            Validators.pattern(\"http://localhost:8081/secure/[a-zA-Z.-]{2,}[.]{1}html\"),\n          ])],\n          firstName:[null,Validators.compose([\n            Validators.required,\n            Validators.minLength(1),\n            Validators.maxLength(30),\n          ])],\n          lastName:[null,Validators.compose([\n            Validators.required,\n            Validators.minLength(1),\n            Validators.maxLength(30),\n          ])],\n          email: [\n            null,\n            Validators.compose([\n              Validators.email, \n              Validators.required,\n              Validators.pattern(\"[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}\"),\n              Validators.minLength(6),\n              Validators.maxLength(30),\n            ])\n          ],\n          password: [\n            null,\n            Validators.compose([\n              Validators.required,\n              // check whether the entered password has a number\n              PasswordPolicy.patternValidator(/\\d/, {\n                hasNumber: true\n              }),\n              // check whether the entered password has upper case letter\n              PasswordPolicy.patternValidator(/[A-Z]/, {\n                hasCapitalCase: true\n              }),\n              // check whether the entered password has a lower case letter\n              PasswordPolicy.patternValidator(/[a-z]/, {\n                hasSmallCase: true\n              }),\n              PasswordPolicy.checkTop1000({\n                goodPass: true\n              }),\n              Validators.minLength(8),\n              Validators.maxLength(30)\n            ])\n          ],\n          confirmPassword: [null, Validators.compose([Validators.required])]\n        },\n        {\n          // check whether our password and confirm password match\n          validator: PasswordPolicy.passwordMatchValidator\n        }\n      );\n    }\n\n}\n","\n<h1 class=\"naslov\">Sign Up</h1>\n\n          <form [formGroup]=\"frmSignup\" (submit)=\"submit()\" autocomplete=\"off\" class=\"form-center\">\n            <div class=\"form-group\">\n                <label for=\"firstName\">First name</label>\n                <input id=\"firstName\" formControlName=\"firstName\" type=\"firstName\" class=\"form-control\" [ngClass]=\"frmSignup.controls['firstName'].invalid ? 'is-invalid' : ''\">\n                <label class=\"text-danger\" *ngIf=\"frmSignup.controls['firstName'].hasError('firstName')\">\n                  Name cannot be longer than 30 characters long\n                </label>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"lastName\">Last name</label>\n                <input id=\"lastName\" formControlName=\"lastName\" type=\"lastName\" class=\"form-control\" [ngClass]=\"frmSignup.controls['lastName'].invalid ? 'is-invalid' : ''\">\n                <label class=\"text-danger\" *ngIf=\"frmSignup.controls['lastName'].hasError('lastName')\">\n                  Last name cannot be longer than 30 characters long\n                </label>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"profileLink\">Profile link on Secursy</label>\n                <input onchange=\"\" placeholder=\"Optional..\" id=\"profileLink\" formControlName=\"profileLink\" type=\"profileLink\" class=\"form-control\" [ngClass]=\"frmSignup.controls['profileLink'].invalid ? 'is-invalid' : ''\">\n                <label class=\"text-danger\" *ngIf=\"frmSignup.controls['profileLink'].hasError('profileLink')\">\n                  That is not a valid Secursy profile link!\n                </label>\n              </div>\n            <div class=\"form-group\">\n              <label for=\"email\">Email Address</label>\n              <input id=\"email\" formControlName=\"email\" type=\"email\" class=\"form-control\" [ngClass]=\"frmSignup.controls['email'].invalid ? 'is-invalid' : ''\">\n              <label class=\"text-danger\" *ngIf=\"frmSignup.controls['email'].hasError('email')\">\n                That is not a valid email address!\n              </label>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"password\">Password</label>\n              <input id=\"password\" formControlName=\"password\" type=\"password\" class=\"form-control\" [ngClass]=\"frmSignup.controls['password'].invalid ? 'is-invalid' : ''\">\n              <!-- <label class=\"text-danger col\" *ngIf=\"frmSignup.controls['password'].hasError('required')\">\n                Password is Required!\n              </label> -->\n              <label class=\"col\" [ngClass]=\"frmSignup.controls['password'].hasError('required') || frmSignup.controls['password'].hasError('minlength')  ? 'text-danger' : 'text-success'\">\n                <i class=\"material-icons\">{{ frmSignup.controls['password'].hasError('required') ||\n                  frmSignup.controls['password'].hasError('minlength') ? 'cancel' :\n                  'check_circle' }}</i>\n                Must be at least 8 characters!\n              </label>\n              <label class=\"col\" [ngClass]=\"frmSignup.controls['password'].hasError('required') || frmSignup.controls['password'].hasError('hasNumber')  ? 'text-danger' : 'text-success'\">\n                <i class=\"material-icons\">{{ frmSignup.controls['password'].hasError('required') ||\n                  frmSignup.controls['password'].hasError('hasNumber') ? 'cancel' :\n                  'check_circle' }}</i>\n                Must contain at least 1 number!\n              </label>\n              <label class=\"col\" [ngClass]=\"frmSignup.controls['password'].hasError('required') || frmSignup.controls['password'].hasError('hasCapitalCase')  ? 'text-danger' : 'text-success'\">\n                <i class=\"material-icons\">{{ frmSignup.controls['password'].hasError('required') ||\n                  frmSignup.controls['password'].hasError('hasCapitalCase') ? 'cancel' :\n                  'check_circle' }}</i>\n                Must contain at least 1 in Capital Case!\n              </label>\n              <label class=\"col\" [ngClass]=\"frmSignup.controls['password'].hasError('required') || frmSignup.controls['password'].hasError('hasSmallCase')  ? 'text-danger' : 'text-success'\">\n                <i class=\"material-icons\">{{ frmSignup.controls['password'].hasError('required') ||\n                  frmSignup.controls['password'].hasError('hasSmallCase') ? 'cancel' :\n                  'check_circle' }}</i>\n                Must contain at least 1 Letter in Small Case!\n              </label>\n              <label class=\"col\" [ngClass]=\"frmSignup.controls['password'].hasError('required') || frmSignup.controls['password'].hasError('goodPass')  ? 'text-danger' : 'text-success'\">\n                <i class=\"material-icons\">{{ frmSignup.controls['password'].hasError('required') ||\n                  frmSignup.controls['password'].hasError('goodPass') ? 'cancel' :\n                  'check_circle' }}</i>\n                Must be secure!\n              </label>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"confirmPassword\" >Confirm\n                Password</label>\n              <input id=\"confirmPassword\" formControlName=\"confirmPassword\" type=\"password\" class=\"form-control\"\n                [ngClass]=\"frmSignup.controls['confirmPassword'].invalid ? 'is-invalid' : ''\">\n \n              <label class=\"text-danger\" *ngIf=\"frmSignup.controls['confirmPassword'].hasError('NoPassswordMatch')\">\n                Password do not match\n              </label>\n            </div>\n            <div class=\"form-buttons\">\n              <button [disabled]=\"frmSignup.invalid\" type=\"submit\" class=\"btn btn-dark\">Sign\n                up</button>\n            </div>\n          </form>\n\n\n  <style>\n      main {\n          width: 900px;\n      }\n  </style>","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../../_models/user';\nimport { FormBuilder, FormControl, Validators, FormGroup } from '@angular/forms';\nimport { TransactionService } from '../../_services/transaction.service';\nimport { Router } from '@angular/router';\nimport { Transaction } from '../../_models/transaction';\nimport { AuthService } from '../../_services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-add-transaction',\n  templateUrl: './add-transaction.component.html',\n  styleUrls: ['./add-transaction.component.css']\n})\nexport class AddTransactionComponent implements OnInit {\n\n  users$: Observable<User[]>;\n  form:FormGroup;\n  transaction:Transaction;\n\n  errorMessage:string;\n  successMessage:string;\n\n  error_messages = {\n    'amount': [\n      { type: 'max', message: 'Amount must be between $1 and $10 000' },\n      { type: 'min', message: 'Amount must be between $1 and $10 000' },\n\n    ],\n    'password': [\n      { type: 'minlength', message: 'Password length must be at least 8' },\n    ]\n  };\n\n  constructor(private fb:FormBuilder, private authService: AuthService, private router: Router,\n    private transactionService:TransactionService,public toasterService: ToastrService) {\n    \n    this.form = this.fb.group({\n      amount: new FormControl('', Validators.compose([\n        Validators.min(1),\n        Validators.max(10000),\n        Validators.required,\n      ])),\n      receiverEmail: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      password: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(8),\n        Validators.maxLength(30)\n      ]))\n    },);\n  }\n\n  ngOnInit(): void {\n    this.users$ = this.authService.getAllUsers();\n  }\n\n  sendMoney() { \n    const val = this.form.value;\n\n    if (val.amount && val.receiverEmail && val.password) {\n\n      this.transactionService.sendMoney(val.receiverEmail, val.amount,val.password)\n          .subscribe(\n              () => {\n                  this.successMessage=\"Money has been sent\";\n                  this.toasterService.success(this.successMessage, 'Success', { positionClass: 'toast-top-center' ,timeOut:5000});\n                  setTimeout(() => {\n                    this.router.navigateByUrl(`/transactions`);\n                  }, 1500);\n              },err => {\n                this.errorMessage = err.error.error;\n              }\n          );\n    }\n  }\n}\n","\n<h1 class=\"naslov\">New transaction</h1>\n\n<ng-container *ngFor=\"let error of error_messages.amount\" >\n    <label class=\"text-danger errors\" *ngIf=\"form.get('amount').hasError(error.type) && (form.get('amount').dirty || form.get('amount').touched)\">\n        {{error.message }}\n    </label>\n  </ng-container>\n  <ng-container *ngFor=\"let error of error_messages.password\" >\n    <label class=\"text-danger errors\" *ngIf=\"form.get('password').hasError(error.type) && (form.get('password').dirty || form.get('password').touched)\">\n        {{error.message }}\n    </label>\n  </ng-container>\n\n<form autocomplete=\"off\" novalidate [formGroup]=\"form\" class=\"form-center\">\n    <fieldset>\n        <div class=\"form-field\">\n            <label>Amount:</label>\n            <input class=\"form-control\" type=\"number\" name=\"amount\" formControlName=\"amount\" required>\n        </div>\n        <div class=\"form-field\" >\n            <label>Receiver:</label>\n            <select id=\"receiverEmail\" name=\"receiverEmail\"  class=\"form-control\"formControlName=\"receiverEmail\" required>\n                <option *ngFor=\"let user of users$ | async\" [ngValue]=\"user.email\">\n                    {{ user.firstName }}  {{ user.lastName }}\n                </option>\n            </select>\n        </div>\n        <div class=\"form-field\">\n            <label>Password:</label>\n            <input name=\"password\" class=\"form-control\" formControlName=\"password\" type=\"password\" required>\n        </div>\n    </fieldset>\n\n    <div class=\"form-buttons\">\n        <button class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"sendMoney()\">Save</button>\n    </div>\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../../_models/user';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../_services/auth.service';\nimport { Transaction } from '../../_models/transaction';\nimport { TransactionService } from '../../_services/transaction.service';\n\n\n@Component({\n  selector: 'app-mytransactions',\n  templateUrl: './mytransactions.component.html',\n  styleUrls: ['./mytransactions.component.css']\n})\nexport class MyTransactionsComponent implements OnInit {\n\n  user$: Observable<User>;\n  transactions$: Observable<Transaction[]>;\n\n  constructor(private authService: AuthService, private router: Router,private transactionService: TransactionService) {\n    this.user$ = this.authService.user$;\n    this.transactions$=this.transactionService.getTransactions();\n\n  }\n\n  ngOnInit(): void {\n    this.user$ = this.authService.user$;\n    this.transactions$=this.transactionService.getTransactions();\n  }\n}\n","<div>\n    <h1 class=\"naslov\">Transactions</h1>\n    <button routerLink=\"/transaction\" class=\"btn btn-dark btn-center\" *rbacAllow=\"['USER']\">\n        New transaction\n    </button>\n</div>\n\n<h2 *ngIf=\"!(transactions$ | async)\">You currently don't own any transactions..</h2>\n\n<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"(transactions$ | async)\">\n        <table class=\"table lessons-list card card-strong\">\n            <tbody>\n                <tr *ngFor=\"let transaction of transactions$ | async\" >\n                    <td class=\"lesson-title\"> <b>Amount</b><br>{{transaction.amount}}$ </td>\n                    <td class=\"lesson-title\"> <b>Sender</b><br>{{transaction.sender.email}} </td>\n                    <td class=\"lesson-title\"> <b>Receiver</b><br>{{transaction.receiver.email}} </td>\n                    <td class=\"lesson-description\"> <b>Date</b><br>{{transaction.date}} </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthService } from '../_services/auth.service';\nimport { SafeUrl, DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport {validSearch} from '../_common/user-search.validator';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n    users$: Observable<User[]>;\n    loggedUser$: Observable<User>\n    form:FormGroup;\n    profileLink:SafeUrl;\n\n    error_messages = {\n      'search': [\n        { type: 'maxlength', message: 'Input cannot be more than 25 characters long' },\n        { type: 'validSearch', message: 'Your input is not valid' }\n      ]\n    };\n  \n    constructor(private authService: AuthService,private fb:FormBuilder, private sanitizer:DomSanitizer,private router:Router) {\n\n      this.form = this.fb.group({\n        search: new FormControl('', Validators.compose([\n          Validators.required,\n          validSearch(),\n          Validators.maxLength(25),\n        ])),\n      },);\n  }\n  \n    ngOnInit(): void {\n      this.loggedUser$=this.authService.user$;\n      this.loggedUser$.subscribe(\n        (resp) => {\n            this.profileLink=this.sanitizer.bypassSecurityTrustUrl(resp.profileLink);\n            if (resp.email== 'admin@mail.hr'){\n              this.users$=this.authService.getAllUsers();\n            }\n        }\n      );\n    }\n  \n    search(){\n      const val = this.form.value;\n  \n      if (val.search) {\n        this.users$=this.authService.getUsers(val.search);\n      }\n    }\n  }\n\n","<head>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n</head>\n<h1 class=\"naslov\">Users</h1>\n\n<ng-container *ngFor=\"let error of error_messages.search\" class=\"errors\">\n    <label class=\"text-danger errors\" *ngIf=\"form.get('search').hasError(error.type) && (form.get('search').dirty || form.get('search').touched)\">\n        {{error.message }}\n    </label>\n</ng-container>\n\n<form [formGroup]=\"form\" class=\"form-center user_search\"> \n    <input type=\"text\" placeholder=\"Search..\" formControlName=\"search\" required class=\"form-control\">\n    <button type=\"submit\" [disabled]=\"!form.valid\" (click)=\"search()\"><i class=\"fa fa-search\"></i></button>\n</form>\n\n<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"!(users$ | async) && (loggedUser$ | async) && (loggedUser$ | async).role == 'USER'\">  \n    <table class=\"table lessons-list card card-strong search_card\">\n        <tbody>\n        <tr>\n            <td class=\"lesson-title mess\">\n                <b>{{(loggedUser$ | async).firstName}} {{(loggedUser$ | async).lastName}}</b>\n            </td>\n            <td class=\"lesson-title mess\"> <b>Email address</b><br>{{(loggedUser$ | async).email}} </td>\n            <td class=\"lesson-title mess\" *ngIf=\"(loggedUser$ | async).profileLink\"> <b>Profile on Secursy</b><br><a [href]=\"profileLink\"  target=\"_blank\">Click here</a></td>\n            <td class=\"lesson-title mess\"> <b>Money</b><br>{{(loggedUser$ | async).money}}$ </td>\n        </tr>\n        </tbody>\n    </table>\n</div>\n\n<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"(users$ | async)\" >  \n        <table class=\"table lessons-list card card-strong search_card\">\n            <tbody>\n            <tr *ngFor=\"let p of users$ | async\" >\n                <td class=\"lesson-title mess\">\n                    <b>{{p.firstName}} {{p.lastName}}</b>\n                </td>\n                <td class=\"lesson-title mess\"> <b>Email address</b><br>{{p.email}} </td>\n                <td class=\"lesson-title mess\" *ngIf=\"p.profileLink\"> <b>Profile on Secursy</b><br><a [href]=\"profileLink\"  target=\"_blank\">Click here</a></td>\n                <td class=\"lesson-title mess\" *rbacAllow=\"['ADMIN']\"> <b>Money</b><br>{{p.money}}$ </td>\n            </tr>\n            </tbody>\n        </table>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bgimg w3-display-container w3-animate-opacity w3-text-white bck\">\n    <div class=\"w3-display-middle\">\n      <h1 class=\"w3-jumbo w3-animate-top\" style=\"color: white; padding-top: 20px;\">Welcome to PhotographiusScope</h1>\n      <hr class=\"w3-border-grey\" style=\"margin:auto;width:40%\">\n      <h1 class=\"w3-jumbo w3-animate-top\" style=\"color: white; padding-top: 20px;\" *rbacAllow=\"['ADMIN']\">ADMIN</h1>\n\n    </div>\n  </div>\n  \n  <style>\n    .bgimg {\n      background-image:linear-gradient(rgba(0,0,0,0.7),rgba(0,0,0,0.7)), url(../../assets/photos/background1.jpg);\n      min-height: 100%;\n      background-position: center;\n      background-size: cover;\n    }\n\n    .bck {\n        height: 667px;\n        background-attachment: fixed;\n    }\n    </style>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}