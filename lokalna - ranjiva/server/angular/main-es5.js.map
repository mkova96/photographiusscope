{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_common/routes.config.ts","webpack:///src/app/_services/auth.service.ts","webpack:///src/app/_services/message.service.ts","webpack:///src/app/_services/photograph.service.ts","webpack:///src/app/_services/photographerService.ts","webpack:///src/app/_services/transaction.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/message/add-message/add-message.component.ts","webpack:///src/app/message/add-message/add-message.component.html","webpack:///src/app/message/messages/messages.component.ts","webpack:///src/app/message/messages/messages.component.html","webpack:///src/app/photograph/add-photograph/add-photograph.component.ts","webpack:///src/app/photograph/add-photograph/add-photograph.component.html","webpack:///src/app/photograph/admin-photographs/admin-photographs.component.ts","webpack:///src/app/photograph/admin-photographs/admin-photographs.component.html","webpack:///src/app/photograph/edit-photograph/edit-photograph.component.ts","webpack:///src/app/photograph/edit-photograph/edit-photograph.component.html","webpack:///src/app/photograph/my-photographs/my-photographs.component.ts","webpack:///src/app/photograph/my-photographs/my-photographs.component.html","webpack:///src/app/photograph/photographs/photographs.component.ts","webpack:///src/app/photograph/photographs/photographs.component.html","webpack:///src/app/photographer/add-photographer/add-photographer.component.ts","webpack:///src/app/photographer/add-photographer/add-photographer.component.html","webpack:///src/app/photographer/edit-photographer/edit-photographer.component.ts","webpack:///src/app/photographer/edit-photographer/edit-photographer.component.html","webpack:///src/app/photographer/photographers/photographers.component.ts","webpack:///src/app/photographer/photographers/photographers.component.html","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/app/transaction/add-transaction/add-transaction.component.ts","webpack:///src/app/transaction/add-transaction/add-transaction.component.html","webpack:///src/app/transaction/mytransactions/mytransactions.component.ts","webpack:///src/app/transaction/mytransactions/mytransactions.component.html","webpack:///src/app/users/users.component.ts","webpack:///src/app/users/users.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routesConfig","path","component","redirectTo","pathMatch","ANONYMOUS_USER","undefined","email","money","firstName","lastName","profileLink","AuthService","http","subject","user$","asObservable","pipe","user","isLoggedIn$","isLoggedOut$","isLoggedIn","get","subscribe","next","password","post","input","MessageService","session","content","receiverEmail","PhotographService","name","params","param1","address","toString","photographerId","year","price","put","ipaddress","PhotographerService","age","TransactionService","amount","data","AppComponent","authService","router","title","a","document","cookie","split","substring","length","loggedUser$","logout","successMessage","setTimeout","navigateByUrl","err","errorMessage","error","selector","templateUrl","styleUrls","AppModule","forRoot","declarations","imports","providers","bootstrap","LoginComponent","fb","refresh","form","group","required","val","value","login","location","reload","AddMessageComponent","messageService","transactionService","sanitizer","compose","minLength","maxLength","url","users$","getAllUsers","addMessage","sendMessage","MessagesComponent","contents","messages$","getMessages","text","bypassSecurityTrustUrl","bypassSecurityTrustHtml","num","modal","getElementById","style","display","window","onclick","event","target","AddPhotographComponent","photographService","photographerService","photographers$","getPhotographers","addPhotograph","createPhotograph","AdminPhotographsComponent","form2","search","photos$","getPhotographs","deletePhotograph","EditPhotographComponent","route","paramMap","photographId","parseInt","load","onlyTasks","getPhotograph","photograph","photoLink","photographer","userId","editPhotograph","MyPhotographsComponent","getMyPhotographs","sellPhotograph","PhotographsComponent","buyPhotograph","ping","resp","response","AddPhotographerComponent","addPhotographer","createPhotographer","EditPhotographerComponent","getPhotographer","editPhotographer","PhotographersComponent","deletePhotographer","SignupComponent","formBuilder","confirmpassword","signUp","AddTransactionComponent","myForm","file","fileSource","fileExample","sendMoney","files","reader","FileReader","onload","evt","result","addTransactionSerialize","readAsText","controls","onFileChange","uploadFile","MyTransactionsComponent","transactions$","getTransactions","UsersComponent","xss","profileLink1","getUsers","environment","production","bootstrapModule","console"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACXA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAiBO,QAAMC,YAAY,GAAW,CAChC;AACIC,UAAI,EAAE,OADV;AAEIC,eAAS,EAAE;AAFf,KADgC,EAKhC;AACID,UAAI,EAAE,gCADV;AAEIC,eAAS,EAAE;AAFf,KALgC;AASpC;AACI;AACID,UAAI,EAAE,kBADV;AAEIC,eAAS,EAAE;AAFf,KAVgC,EAchC;AACID,UAAI,EAAE,mBADV;AAEIC,eAAS,EAAE;AAFf,KAdgC,EAkBhC;AACID,UAAI,EAAE,kCADV;AAEIC,eAAS,EAAE;AAFf,KAlBgC,EAsBhC;AACID,UAAI,EAAE,iBADV;AAEIC,eAAS,EAAE;AAFf,KAtBgC,EA0BhC;AACID,UAAI,EAAE,iBADV;AAEIC,eAAS,EAAE;AAFf,KA1BgC;AA8BpC;AACI;AACID,UAAI,EAAE,eADV;AAEIC,eAAS,EAAE;AAFf,KA/BgC,EAmChC;AACID,UAAI,EAAE,mBADV;AAEIC,eAAS,EAAE;AAFf,KAnCgC,EAuChC;AACID,UAAI,EAAE,mBADV;AAEIC,eAAS,EAAE;AAFf,KAvCgC;AA2CpC;AAEI;AACID,UAAI,EAAE,6BADV;AAEIC,eAAS,EAAE;AAFf,KA7CgC,EAiDhC;AACID,UAAI,EAAE,iCADV;AAEIC,eAAS,EAAE;AAFf,KAjDgC;AAsDpC;AAEI;AACID,UAAI,EAAE,qBADV;AAEIC,eAAS,EAAE;AAFf,KAxDgC,EA4DhC;AACID,UAAI,EAAE,OADV;AAEIC,eAAS,EAAE;AAFf,KA5DgC,EAgEhC;AACID,UAAI,EAAE,QADV;AAEIC,eAAS,EAAE;AAFf,KAhEgC,EAoEhC;AACID,UAAI,EAAE,EADV;AAEIE,gBAAU,EAAC,mBAFf;AAGIC,eAAS,EAAE;AAHf,KApEgC,CAA7B;;;;;;;;;;;;;;;;AClBP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMO,QAAMC,cAAc,GAAU;AACjCN,QAAE,EAAEO,SAD6B;AAEjCC,WAAK,EAAE,EAF0B;AAGjCC,WAAK,EAACF,SAH2B;AAIjCG,eAAS,EAAC,EAJuB;AAKjCC,cAAQ,EAAC,EALwB;AAMjCC,iBAAW,EAAC;AANqB,KAA9B;;QAWMC,W;AAOT,2BAAoBC,IAApB,EAAsC;AAAA;;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AALb,aAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA0BR,SAA1B,CAAV;AACR,aAAAS,KAAA,GAA0B,KAAKD,OAAL,CAAaE,YAAb,GAA4BC,IAA5B,CAAiC,8DAAO,UAAAC,IAAI;AAAA,iBAAI,CAAC,CAACA,IAAN;AAAA,SAAX,CAAjC,CAA1B;AACA,aAAAC,WAAA,GAAmC,KAAKJ,KAAL,CAAWE,IAAX,CAAgB,2DAAI,UAAAC,IAAI;AAAA,iBAAI,CAAC,CAACA,IAAI,CAACnB,EAAX;AAAA,SAAR,CAAhB,CAAnC;AACA,aAAAqB,YAAA,GAAoC,KAAKD,WAAL,CAAiBF,IAAjB,CAAsB,2DAAI,UAAAI,UAAU;AAAA,iBAAI,CAACA,UAAL;AAAA,SAAd,CAAtB,CAApC;AAGKR,YAAI,CAACS,GAAL,CAAe,WAAf,EAA4BC,SAA5B,CAAsC,UAAAL,IAAI;AAAA,iBAAI,KAAI,CAACJ,OAAL,CAAaU,IAAb,CAAkBN,IAAI,GAAGA,IAAH,GAAUb,cAAhC,CAAJ;AAAA,SAA1C;AACH;;;;+BAGME,K,EAAckB,Q,EAAgBhB,S,EAAiBC,Q,EAAgBC,W,EAAoB;AAAA;;AACxF,iBAAO,KAAKE,IAAL,CAAUa,IAAV,CAAqB,aAArB,EAAoC;AAACnB,iBAAK,EAALA,KAAD;AAAQkB,oBAAQ,EAARA,QAAR;AAAiBhB,qBAAS,EAATA,SAAjB;AAA2BC,oBAAQ,EAARA,QAA3B;AAAoCC,uBAAW,EAAXA;AAApC,WAApC,EAAsFM,IAAtF,CACH,oEADG,EACW,2DAAI,UAAAC,IAAI;AAAA,mBAAI,MAAI,CAACJ,OAAL,CAAaU,IAAb,CAAkBN,IAAlB,CAAJ;AAAA,WAAR,CADX,CAAP;AAED;;;8BAEKX,K,EAAckB,Q,EAAe;AAAA;;AAC/B,iBAAO,KAAKZ,IAAL,CAAUa,IAAV,CAAqB,YAArB,EAAmC;AAACnB,iBAAK,EAALA,KAAD;AAAQkB,oBAAQ,EAARA;AAAR,WAAnC,EAAsDR,IAAtD,CAA2D,oEAA3D,EAAyE,2DAAI,UAAAC,IAAI;AAAA,mBAAI,MAAI,CAACJ,OAAL,CAAaU,IAAb,CAAkBN,IAAlB,CAAJ;AAAA,WAAR,CAAzE,CAAP;AACH;;;iCAEQ;AAAA;;AACL,iBAAO,KAAKL,IAAL,CAAUa,IAAV,CAAe,aAAf,EAA8B,IAA9B,EAAoCT,IAApC,CAAyC,oEAAzC,EAAuD,2DAAI,UAAAC,IAAI;AAAA,mBAAI,MAAI,CAACJ,OAAL,CAAaU,IAAb,CAAkBnB,cAAlB,CAAJ;AAAA,WAAR,CAAvD,CAAP;AACH;;;sCAEa;AACV,iBAAO,KAAKQ,IAAL,CAAUS,GAAV,CAAsB,gBAAtB,CAAP;AACH;;;iCAEQK,K,EAAc;AACnB,iBAAO,KAAKd,IAAL,CAAUa,IAAV,eAAiC;AAACC,iBAAK,EAALA;AAAD,WAAjC,CAAP;AACH;;;;;;;uBA/BQf,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW;;;;;sEAAXA,W,EAAW;cADvB;AACuB,Q;;;;;;;;;;;;;;;;;;;;;;ACjBxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQagB,c;AAET,8BAAoBf,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAoB;;;;oCAE5BgB,O,EAAgB;AACxB,iBAAO,KAAKhB,IAAL,CAAUS,GAAV,mCAAoDO,OAApD,EAAP;AACH;;;mCAEUC,O,EAAeC,a,EAAoB;AAC1C,iBAAO,KAAKlB,IAAL,CAAUa,IAAV,CAAwB,iBAAxB,EAA0C;AAACI,mBAAO,EAAPA,OAAD;AAASC,yBAAa,EAAbA;AAAT,WAA1C,EAAmEd,IAAnE,CACH,oEADG,EACW,4DADX,CAAP;AAGH;;;;;;;uBAZQW,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc;;;;;sEAAdA,c,EAAc;cAD1B;AAC0B,Q;;;;;;;;;;;;;;;;;;;;;;ACR3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaI,iB;AAET,iCAAoBnB,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAoB;;;;uCAEzBoB,I,EAAYJ,O,EAAgB;AACvC,cAAMK,MAAM,GAAG;AACXC,kBAAM,EAAEF;AADG,WAAf;AAGA,iBAAO,KAAKpB,IAAL,CAAUS,GAAV,qBAA+C;AAACY,kBAAM,EAANA;AAAD,WAA/C,CAAP;AACH;;;yCAEgBL,O,EAAgB;AAC7B,iBAAO,KAAKhB,IAAL,CAAUS,GAAV,wCAA4DO,OAA5D,EAAP;AACH;;;sCAEa9B,E,EAAW;AACrB,cAAIqC,OAAO,GAAC,sBAAoBrC,EAAE,CAACsC,QAAH,EAAhC;AACA,iBAAO,KAAKxB,IAAL,CAAUS,GAAV,CAA0Bc,OAA1B,CAAP;AACH;;;sCAEaH,I,EAAYK,c,EAAsBC,I,EAAYC,K,EAAY;AACpE,iBAAO,KAAK3B,IAAL,CAAUa,IAAV,CAA2B,oBAA3B,EAAgD;AAACO,gBAAI,EAAJA,IAAD;AAAMK,0BAAc,EAAdA,cAAN;AAAqBC,gBAAI,EAAJA,IAArB;AAA0BC,iBAAK,EAALA;AAA1B,WAAhD,EAAkFvB,IAAlF,CACH,oEADG,EACW,4DADX,CAAP;AAGH;;;uCAEclB,E,EAAUkC,I,EAAYK,c,EAAsBC,I,EAAYC,K,EAAY;AAC/E,cAAIJ,OAAO,GAAC,sBAAoBrC,EAAE,CAACsC,QAAH,EAAhC;AACA,iBAAO,KAAKxB,IAAL,CAAU4B,GAAV,CAA0BL,OAA1B,EAAkC;AAACrC,cAAE,EAAFA,EAAD;AAAIkC,gBAAI,EAAJA,IAAJ;AAASK,0BAAc,EAAdA,cAAT;AAAwBC,gBAAI,EAAJA,IAAxB;AAA6BC,iBAAK,EAALA;AAA7B,WAAlC,EAAuEvB,IAAvE,CACH,oEADG,EACW,4DADX,CAAP;AAGH;;;yCAEgBlB,E,EAAS;AACtB,cAAIqC,OAAO,GAAC,sBAAoBrC,EAAE,CAACsC,QAAH,EAAhC;AACA,iBAAO,KAAKxB,IAAL,WAAsBuB,OAAtB,EAA+BnB,IAA/B,CACH,oEADG,EACW,4DADX,CAAP;AAGH;;;sCAEalB,E,EAAS;AACnB,cAAIqC,OAAO,GAAC,wBAAsBrC,EAAE,CAACsC,QAAH,EAAlC;AACA,iBAAO,KAAKxB,IAAL,CAAUa,IAAV,CAA2BU,OAA3B,EAAmC;AAACrC,cAAE,EAAFA;AAAD,WAAnC,EAAyCkB,IAAzC,CACH,oEADG,EACW,4DADX,CAAP;AAGH;;;uCAEclB,E,EAAS;AACpB,cAAIqC,OAAO,GAAC,yBAAuBrC,EAAE,CAACsC,QAAH,EAAnC;AACA,iBAAO,KAAKxB,IAAL,CAAUa,IAAV,CAA2BU,OAA3B,EAAmC;AAACrC,cAAE,EAAFA;AAAD,WAAnC,EAAyCkB,IAAzC,CACH,oEADG,EACW,4DADX,CAAP;AAGH;;;6BAEIyB,S,EAAkB;AACnB,cAAMR,MAAM,GAAG;AACXC,kBAAM,EAAEO;AADG,WAAf;AAGA,iBAAO,KAAK7B,IAAL,CAAUS,GAAV,CAAmB,WAAnB,EAA+B;AAACY,kBAAM,EAANA;AAAD,WAA/B,CAAP;AACH;;;;;;;uBA3DQF,iB,EAAiB,uH;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB;;;;;sEAAjBA,iB,EAAiB;cAD7B;AAC6B,Q;;;;;;;;;;;;;;;;;;;;;;ACR9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaW,mB;AAET,mCAAoB9B,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAGnB;;;;2CAEkB;AACf,iBAAO,KAAKA,IAAL,CAAUS,GAAV,CAA8B,oBAA9B,CAAP;AACH;;;wCAEevB,E,EAAW;AACvB,cAAIqC,OAAO,GAAC,wBAAsBrC,EAAE,CAACsC,QAAH,EAAlC;AACA,iBAAO,KAAKxB,IAAL,CAAUS,GAAV,CAA4Bc,OAA5B,CAAP;AACH;;;wCAEe3B,S,EAAiBC,Q,EAAgBkC,G,EAAU;AACvD,iBAAO,KAAK/B,IAAL,CAAUa,IAAV,CAA6B,sBAA7B,EAAoD;AAACjB,qBAAS,EAATA,SAAD;AAAWC,oBAAQ,EAARA,QAAX;AAAoBkC,eAAG,EAAHA;AAApB,WAApD,EAA8E3B,IAA9E,CACH,oEADG,EACW,4DADX,CAAP;AAGH;;;yCAEgBlB,E,EAAUU,S,EAAiBC,Q,EAAgBkC,G,EAAU;AAClE,cAAIR,OAAO,GAAC,wBAAsBrC,EAAE,CAACsC,QAAH,EAAlC;AACA,iBAAO,KAAKxB,IAAL,CAAU4B,GAAV,CAA4BL,OAA5B,EAAoC;AAACrC,cAAE,EAAFA,EAAD;AAAIU,qBAAS,EAATA,SAAJ;AAAcC,oBAAQ,EAARA,QAAd;AAAuBkC,eAAG,EAAHA;AAAvB,WAApC,EAAiE3B,IAAjE,CACH,oEADG,EACW,4DADX,CAAP;AAGH;;;2CAEkBlB,E,EAAS;AACxB,cAAIqC,OAAO,GAAC,wBAAsBrC,EAAE,CAACsC,QAAH,EAAlC;AACA,iBAAO,KAAKxB,IAAL,WAAsBuB,OAAtB,EAA+BnB,IAA/B,CACH,oEADG,EACW,4DADX,CAAP;AAGH;;;;;;;uBAlCQ0B,mB,EAAmB,uH;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB;;;;;sEAAnBA,mB,EAAmB;cAD/B;AAC+B,Q;;;;;;;;;;;;;;;;;;;;;;ACPhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaE,kB;AAET,kCAAoBhC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAoB,O,CAExC;;;;;kCACUkB,a,EAAsBe,M,EAAa;AACzC,iBAAO,KAAKjC,IAAL,CAAUS,GAAV,mCAAsDS,aAAtD,qBAA8Ee,MAA9E,EAAP;AACH,S,CAED;;;;wCACgBvC,K,EAAY;AACxB,iBAAO,KAAKM,IAAL,CAAUS,GAAV,6BAAkDf,KAAlD,EAAP;AACH;;;gDAEuBwC,I,EAAc;AAClC,iBAAO,KAAKlC,IAAL,CAAUa,IAAV,CAA4B,2BAA5B,EAAyD;AAACqB,gBAAI,EAAJA;AAAD,WAAzD,EAAiE9B,IAAjE,CACH,oEADG,EACW,4DADX,CAAP;AAGH;;;;;;;uBAlBQ4B,kB,EAAkB,uH;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB;;;;;sEAAlBA,kB,EAAkB;cAD9B;AAC8B,Q;;;;;;;;;;;;;;;;;;;;;;ACT/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGI;;AACE;;AAAG;;;;AAA+B;;AACpC;;;;;;AADK;;AAAA;;;;;;;;AAcH;;AAAgC;AAAA;;AAAA;;AAAA;AAAA;;AAC9B;;AAAG;;AAAM;;AACX;;;;;;AAlBJ;;AACE;;;;AAGE;;AACE;;AAAwC;;AAAY;;AACtD;;AACA;;AACE;;AAAmC;;AAAW;;AAChD;;AACA;;AACE;;AAA+B;;AAAa;;AAC9C;;AACA;;AACE;;AAAuB;;AAAK;;AAC9B;;AACA;;;;AAGJ;;;;;;AAlBM;;AAAA;;AAIG;;AAAA;;AAWD;;AAAA;;;;;;AAMJ;;AACE;;AAAG;;;;AAA+B;;AACpC;;;;;;AADK;;AAAA;;;;;;AAEH;;AACE;;AAAkC;;AAAW;;AAC/C;;;;;;AACA;;AACE;;AAAqD;;AAAc;;AACrE;;;;;;AADK;;AAAA;;;;;;AAEL;;AACE;;AAAwC;;AAAY;;AACtD;;;;;;AADK;;AAAA;;;;;;AAEL;;AACE;;AAAgD;;AAAQ;;AAC1D;;;;;;AADK;;AAAA;;;;;;AAEL;;AACE;;AAAuB;;AAAK;;AAC9B;;;;;;AACA;;AACE;;AAAG;;AAAU;;AACf;;;;;;AADK;;AAAA;;;;;;;;AAEL;;AAAgC;AAAA;;AAAA;;AAAA;AAAA;;AAC9B;;AAAG;;AAAM;;AACX;;;;;;AAxBN;;AACI;;;;AAGE;;;;AAGA;;;;AAGA;;;;AAGA;;;;AAGA;;;;AAGA;;;;AAGA;;;;AAGN;;;;;;AAxBQ;;AAAA;;AAGE;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;AAMR;;AACK;;AAAwB;;AAAO;;AACnC;;;;;;AACA;;AACI;;AAAuB;;AAAK;;AAChC;;;;;;AANH;;AACE;;;;AAGC;;;;AAGL;;;;;;AANQ;;AAAA;;AAGC;;AAAA;;;;;;AAOP;;AACE;;AAAQ;;AAAO;;AAAU;;AACzB;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;;;;;AAJ2B;;AAAA;;;;;;AAM3B;;AACE;;AAAQ;;AAAK;;AAAU;;AACvB;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;;;;;AAJyB;;AAAA;;;;QD1DdG,Y;AAaX,4BAAoBC,WAApB,EAAoDC,MAApD,EAAmE;AAAA;;AAAA;;AAA/C,aAAAD,WAAA,GAAAA,WAAA;AAAgC,aAAAC,MAAA,GAAAA,MAAA;AAZpD,aAAAC,KAAA,GAAQ,SAAR;AAaE,aAAKF,WAAL,CAAiBlC,KAAjB,CAAuBQ,SAAvB,CAAiC,UAAA6B,CAAC;AAAA,iBAAE,MAAI,CAAC7C,KAAL,GAAW6C,CAAC,CAAC7C,KAAf;AAAA,SAAlC;AACA,aAAK0C,WAAL,CAAiBlC,KAAjB,CAAuBQ,SAAvB,CAAiC,UAAA6B,CAAC;AAAA,iBAAE,MAAI,CAAC5C,KAAL,GAAW4C,CAAC,CAAC5C,KAAf;AAAA,SAAlC;;AAEA,YAAI6C,QAAQ,CAACC,MAAb,EAAoB;AAClB,eAAKzB,OAAL,GAAewB,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BC,SAA9B,CAAwC,CAAxC,EAA2CH,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BE,MAAzE,CAAf;AACD;AACF;;;;mCAGU;AACT,eAAKtC,WAAL,GAAmB,KAAK8B,WAAL,CAAiB9B,WAApC;AACA,eAAKC,YAAL,GAAoB,KAAK6B,WAAL,CAAiB7B,YAArC;AAEA,eAAKsC,WAAL,GAAiB,KAAKT,WAAL,CAAiBlC,KAAlC;;AAEA,cAAIsC,QAAQ,CAACC,MAAb,EAAoB;AAClB,iBAAKzB,OAAL,GAAewB,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BC,SAA9B,CAAwC,CAAxC,EAA2CH,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BE,MAAzE,CAAf;AAED;AACF;;;iCAEQ;AAAA;;AAEP,eAAKR,WAAL,CAAiBU,MAAjB,GACCpC,SADD,CAEE,YAAM;AACF,kBAAI,CAACqC,cAAL,GAAoB,uCAApB;AACAC,sBAAU,CAAC,YAAM;AACf,oBAAI,CAACX,MAAL,CAAYY,aAAZ;AACH,aAFW,EAET,CAFS,CAAV;AAGH,WAPH,EAQE,UAAAC,GAAG,EAAI;AACH,kBAAI,CAACC,YAAL,GAAoBD,GAAG,CAACE,KAAJ,CAAUA,KAA9B;AACH,WAVH;AAYD;;;;;;;uBAjDUjB,Y,EAAY,mI,EAAA,uH;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,q0B;AAAA;AAAA;ACXzB;;AAEE;;AAqBA;;AA2BA;;AAQF;;AACA;;AAEE;;AAOA;;AAOA;;AAEF;;;;AA3E2C;;AAAA;;AAqBA;;AAAA;;AA2BA;;AAAA;;AAWpC;;AAAA;;AAOA;;AAAA;;;;;;;;;;sEDzDMA,Y,EAAY;cALxB,uDAKwB;eALd;AACTkB,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;AEXzaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,CAAC,kEAAD,EAAc,iFAAd,EAAkC,kFAAlC,EAAsD,+EAAtD,EAAwE,yEAAxE,C;AAAuF,gBANzF,CACP,uEADO,EAEP,qEAFO,EAGP,8DAAaC,OAAb,CAAqB,kEAArB,CAHO,EAIP,kEAJO,CAMyF;;;;0HAGvFD,S,EAAS;AAAA,uBA1BlB,2DA0BkB,EAzBlB,qEAyBkB,EAxBlB,wEAwBkB,EAvBlB,+GAuBkB,EAtBlB,6GAsBkB,EArBlB,2GAqBkB,EApBlB,mHAoBkB,EAnBlB,sHAmBkB,EAlBlB,mGAkBkB,EAjBlB,2GAiBkB,EAhBlB,8GAgBkB,EAflB,2GAekB,EAdlB,+FAckB,EAblB,uFAakB,EAZlB,sEAYkB,EAXlB,mHAWkB;AAXO,kBAGzB,uEAHyB,EAIzB,qEAJyB,EAIT,6DAJS,EAMzB,kEANyB;AAWP,O;AALC,K;;;;;sEAKVA,S,EAAS;cA5BrB,sDA4BqB;eA5BZ;AACRE,sBAAY,EAAE,CACZ,2DADY,EAEZ,qEAFY,EAGZ,wEAHY,EAIZ,+GAJY,EAKZ,6GALY,EAMZ,2GANY,EAOZ,mHAPY,EAQZ,sHARY,EASZ,mGATY,EAUZ,2GAVY,EAWZ,8GAXY,EAYZ,2GAZY,EAaZ,+FAbY,EAcZ,uFAdY,EAeZ,sEAfY,EAgBZ,mHAhBY,CADN;AAmBRC,iBAAO,EAAE,CACP,uEADO,EAEP,qEAFO,EAGP,8DAAaF,OAAb,CAAqB,kEAArB,CAHO,EAIP,kEAJO,CAnBD;AAyBRG,mBAAS,EAAE,CAAC,kEAAD,EAAc,iFAAd,EAAkC,kFAAlC,EAAsD,+EAAtD,EAAwE,yEAAxE,CAzBH;AA0BRC,mBAAS,EAAE,CAAC,2DAAD;AA1BH,S;AA4BY,Q;;;;;;;;;;;;;;;;;;AC9DtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AAAQ;;AAAO;;AAAU;;AACzB;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;;;;;AAJ2B;;AAAA;;;;;;AAM3B;;AACE;;AAAQ;;AAAK;;AAAU;;AACvB;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;;;;;AAJyB;;AAAA;;;;QDEdC,c;AAOT,8BAAoBC,EAApB,EAA4C3B,WAA5C,EAA8EC,MAA9E,EAA8F;AAAA;;AAA1E,aAAA0B,EAAA,GAAAA,EAAA;AAAwB,aAAA3B,WAAA,GAAAA,WAAA;AAAkC,aAAAC,MAAA,GAAAA,MAAA;AAF9E,aAAA2B,OAAA,GAAgB,KAAhB;AAII,aAAKC,IAAL,GAAY,KAAKF,EAAL,CAAQG,KAAR,CAAc;AACtBxE,eAAK,EAAE,CAAC,EAAD,EAAI,0DAAWyE,QAAf,CADe;AAEtBvD,kBAAQ,EAAE,CAAC,EAAD,EAAI,0DAAWuD,QAAf;AAFY,SAAd,CAAZ;AAKH;;;;mCAEU;AACP,cAAI,KAAKH,OAAT,EAAiB;AACb,iBAAK3B,MAAL,CAAYY,aAAZ;AACH;AACJ;;;gCAEO;AAAA;;AAEJ,cAAMmB,GAAG,GAAG,KAAKH,IAAL,CAAUI,KAAtB;;AAEA,cAAID,GAAG,CAAC1E,KAAJ,IAAa0E,GAAG,CAACxD,QAArB,EAA+B;AAE3B,iBAAKwB,WAAL,CAAiBkC,KAAjB,CAAuBF,GAAG,CAAC1E,KAA3B,EAAkC0E,GAAG,CAACxD,QAAtC,EACKF,SADL,CAEQ,YAAM;AACF,oBAAI,CAACqC,cAAL,GAAoB,sCAApB;AACA,oBAAI,CAACiB,OAAL,GAAa,IAAb;AACAhB,wBAAU,CAAC,YAAM;AAACuB,wBAAQ,CAACC,MAAT,CAAgB,IAAhB;AACjB,eADS,EACP,IADO,CAAV;AAEH,aAPT,EAQQ,UAAAtB,GAAG,EAAI;AACH,oBAAI,CAACC,YAAL,GAAoBD,GAAG,CAACE,KAAJ,CAAUA,KAA9B;AACH,aAVT;AAaH;AACJ;;;;;;;uBA1CQU,c,EAAc,2H,EAAA,mI,EAAA,uH;AAAA,K;;;YAAdA,c;AAAc,4B;AAAA,e;AAAA,a;AAAA,q0B;AAAA;AAAA;ACV3B;;AAOE;;AAOF;;AAAmB;;AAAK;;AAExB;;AAEI;;AACI;;AACI;;AAAO;;AAAM;;AACb;;AACJ;;AACA;;AACI;;AAAO;;AAAS;;AAChB;;AACJ;;AACJ;;AAEA;;AACI;;AAAsD;AAAA,mBAAS,IAAAQ,KAAA,EAAT;AAAgB,WAAhB;;AAAkB;;AAAK;;AACjF;;AAGJ;;;;AAlCK;;AAOE;;AAAA;;AAS6B;;AAAA;;AAcC;;AAAA;;;;;;;;;sEDpBxBR,c,EAAc;cAL1B,uDAK0B;eALhB;AACTT,kBAAQ,EAAE,OADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD,EAA0B,sBAA1B;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AAAQ;;AAAO;;AAAU;;AACzB;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;;;;;AAJ2B;;AAAA;;;;;;AAM3B;;AACE;;AAAQ;;AAAK;;AAAU;;AACvB;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;;;;;AAJyB;;AAAA;;;;;;AAaX;;AACI;;AACJ;;;;;;AAF4C;;AACxC;;AAAA;;;;QDPPkB,mB;AASX,mCAAoBV,EAApB,EAA4CW,cAA5C,EAAoFrC,MAApF,EACUsC,kBADV,EACwDC,SADxD,EACwFxC,WADxF,EACiH;AAAA;;AAD7F,aAAA2B,EAAA,GAAAA,EAAA;AAAwB,aAAAW,cAAA,GAAAA,cAAA;AAAwC,aAAArC,MAAA,GAAAA,MAAA;AAC1E,aAAAsC,kBAAA,GAAAA,kBAAA;AAA8C,aAAAC,SAAA,GAAAA,SAAA;AAAgC,aAAAxC,WAAA,GAAAA,WAAA;AAEtF,aAAK6B,IAAL,GAAY,KAAKF,EAAL,CAAQG,KAAR,CAAc;AACxBjD,iBAAO,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAW4D,OAAX,CAAmB,CAC9C,0DAAWV,QADmC,EAE9C,0DAAWW,SAAX,CAAqB,CAArB,CAF8C,EAG9C,0DAAWC,SAAX,CAAqB,GAArB,CAH8C,CAAnB,CAApB,CADe;AAMxB7D,uBAAa,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAW2D,OAAX,CAAmB,CACpD,0DAAWV,QADyC,CAAnB,CAApB;AANS,SAAd,CAAZ;AAUA,aAAKnD,OAAL,GAAe,KAAKqB,MAAL,CAAY2C,GAAZ,CAAgBtC,KAAhB,CAAsB,YAAtB,EAAoC,CAApC,EAAuClB,QAAvC,EAAf;;AACG,YAAI,CAAC,KAAKR,OAAV,EAAmB;AAChB,eAAKA,OAAL,GAAewB,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BC,SAA9B,CAAwC,CAAxC,EAA2CH,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BE,MAAzE,CAAf;AACD;AACN;;;;mCAEO;AACN,eAAKqC,MAAL,GAAc,KAAK7C,WAAL,CAAiB8C,WAAjB,EAAd;AACA,eAAKlE,OAAL,GAAe,KAAKqB,MAAL,CAAY2C,GAAZ,CAAgBtC,KAAhB,CAAsB,YAAtB,EAAoC,CAApC,EAAuClB,QAAvC,EAAf;;AACG,cAAI,CAAC,KAAKR,OAAV,EAAmB;AAChB,iBAAKA,OAAL,GAAewB,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BC,SAA9B,CAAwC,CAAxC,EAA2CH,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BE,MAAzE,CAAf;AACD;AACN;;;sCAEa;AAAA;;AACZ,cAAMwB,GAAG,GAAG,KAAKH,IAAL,CAAUI,KAAtB;;AAEA,cAAID,GAAG,CAACnD,OAAJ,IAAemD,GAAG,CAAClD,aAAvB,EAAsC;AAElC,iBAAKwD,cAAL,CAAoBS,UAApB,CAA+Bf,GAAG,CAACnD,OAAnC,EAA4CmD,GAAG,CAAClD,aAAhD,EACKR,SADL,CAEM,YAAM;AACF,oBAAI,CAACqC,cAAL,GAAoB,uBAApB;AACAC,wBAAU,CAAC,YAAM;AACb,sBAAI,CAACX,MAAL,CAAYY,aAAZ,8BAAgD,MAAI,CAACjC,OAArD;AACH,eAFS,EAEP,IAFO,CAAV;AAGH,aAPP,EAQM,UAAAkC,GAAG,EAAI;AACH,oBAAI,CAACC,YAAL,GAAoBD,GAAG,CAACE,KAAJ,CAAUA,KAA9B;AACH,aAVP;AAYH;AACF;;;;;;;uBAtDUqB,mB,EAAmB,2H,EAAA,yI,EAAA,uH,EAAA,iJ,EAAA,uI,EAAA,mI;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,65B;AAAA;AAAA;ACfhC;;AAOE;;AAOF;;AAAmB;;AAAW;;AAE9B;;AACI;;AACI;;AACI;;AAAO;;AAAS;;AAChB;;AACI;;;;AAGJ;;AACJ;;AACA;;AACI;;AAAO;;AAAQ;;AACf;;AACJ;;AACJ;;AAEA;;AACI;;AAAsD;AAAA,mBAAS,IAAAW,WAAA,EAAT;AAAsB,WAAtB;;AAAyB;;AAAI;;AACvF;;AAEJ;;;;AApCK;;AAOE;;AAAA;;AAS6B;;AAAA;;AAKZ;;AAAA;;AAYa;;AAAA;;;;;;;;;;sEDlBxBX,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTpB,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEfhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACcQ;;AACI;;AACK;;AACG;;AAAc;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;AAAG;;AAAG;;AAAM;;AAAI;;AAAI;;AAA4C;;AAAI;;AACnH;;AACI;;AACI;;AAAoB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAkC;;AAAO;;AAC7D;;AAAgC;;AAA4C;;AAC5E;;AAAgC;;AAAyB;;AACzD;;AAAgC;;AAAyB;;AAAgE;;AAAG;;AAAU;;AAAI;;AAAI;;AAClJ;;AACJ;;AACJ;;AACJ;;AACA;;AACK;;AACG;;AAAc;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAmC;;AAAG;;AAAG;;AAAQ;;AAAI;;AAAI;;AAAgD;;AAAI;;AAC3H;;AACI;;AACI;;AAAoB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAoC;;AAAO;;AAC/D;;AAAgC;;AAAgD;;AAChF;;AAAgC;;AAA2B;;AAC3D;;AAAgC;;AAAyB;;AAAmE;;AAAG;;AAAU;;AAAI;;AAAI;;AACrJ;;AAEJ;;AACJ;;AACJ;;AACA;;AAAsB;;AAAG;;AAAI;;AAAI;;AAAI;;AAAW;;AAChD;;AACJ;;;;;;;;AA3B+E;;AAAA;;AAC9D;;AAAA,2GAAArE,EAAA;;AAGmC;;AAAA;;AACA;;AAAA;;AAC4B;;AAAA;;AAOG;;AAAA;;AAClE;;AAAA,6GAAAA,EAAA;;AAGmC;;AAAA;;AACA;;AAAA;;AAC4B;;AAAA;;AAMvC;;AAAA;;AACT;;AAAA;;;;;;AAhCxC;;AACI;;AACI;;AACA;;;;AA+BA;;AACJ;;AACJ;;;;;;AAjCY;;AAAA;;;;QDACmG,iB;AAWX,iCAAoBX,cAApB,EAA4DrC,MAA5D,EAAoFD,WAApF,EACWwC,SADX,EACmC;AAAA;;AADf,aAAAF,cAAA,GAAAA,cAAA;AAAwC,aAAArC,MAAA,GAAAA,MAAA;AAAwB,aAAAD,WAAA,GAAAA,WAAA;AACzE,aAAAwC,SAAA,GAAAA,SAAA;AAJX,aAAAU,QAAA,GAAoB,EAApB,CAImC,CAC9B;AACA;AACA;;AACA,aAAKtE,OAAL,GAAe,KAAKqB,MAAL,CAAY2C,GAAZ,CAAgBtC,KAAhB,CAAsB,YAAtB,EAAoC,CAApC,EAAuClB,QAAvC,EAAf;;AACD,YAAI,CAAC,KAAKR,OAAV,EAAmB;AACjB,eAAKA,OAAL,GAAewB,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BC,SAA9B,CAAwC,CAAxC,EAA2CH,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BE,MAAzE,CAAf;AACD;;AAED,aAAK2C,SAAL,GAAe,KAAKb,cAAL,CAAoBc,WAApB,CAAgC,KAAKxE,OAArC,CAAf;AACA,aAAK6B,WAAL,GAAiB,KAAKT,WAAL,CAAiBlC,KAAlC;AACH;;;;sCAEauF,I,EAAW;AACvB,iBAAO,KAAKb,SAAL,CAAec,sBAAf,CAAsCD,IAAtC,CAAP;AACD;;;8BAEK;AACJ,iBAAO,KAAKb,SAAL,CAAee,uBAAf,CAAuC,+BAAvC,CAAP;AACD;;;mCAGO;AACN,eAAK3E,OAAL,GAAe,KAAKqB,MAAL,CAAY2C,GAAZ,CAAgBtC,KAAhB,CAAsB,YAAtB,EAAoC,CAApC,EAAuClB,QAAvC,EAAf;;AACA,cAAI,CAAC,KAAKR,OAAV,EAAmB;AAChB,iBAAKA,OAAL,GAAewB,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BC,SAA9B,CAAwC,CAAxC,EAA2CH,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BE,MAAzE,CAAf;AACF;;AAED,eAAK2C,SAAL,GAAe,KAAKb,cAAL,CAAoBc,WAApB,CAAgC,KAAKxE,OAArC,CAAf;AACA,eAAK6B,WAAL,GAAiB,KAAKT,WAAL,CAAiBlC,KAAlC;AAED;;;kCAES0F,G,EAAU;AAClB;AACA,cAAIC,KAAK,GAAGrD,QAAQ,CAACsD,cAAT,CAAwB,YAAUF,GAAlC,CAAZ,CAFkB,CAIlB;;AAEAC,eAAK,CAACE,KAAN,CAAYC,OAAZ,GAAsB,OAAtB;AACD;;;mCAEUJ,G,EAAU;AACnB;AAEA;AACA,cAAIC,KAAK,GAAGrD,QAAQ,CAACsD,cAAT,CAAwB,YAAUF,GAAlC,CAAZ;AAEEC,eAAK,CAACE,KAAN,CAAYC,OAAZ,GAAsB,MAAtB,CANiB,CASrB;;AACAC,gBAAM,CAACC,OAAP,GAAiB,UAASC,KAAT,EAAgB;AAC/B,gBAAIA,KAAK,CAACC,MAAN,IAAgBP,KAApB,EAA2B;AACzBA,mBAAK,CAACE,KAAN,CAAYC,OAAZ,GAAsB,MAAtB;AACD;AACF,WAJD;AAOC;;;;;;;uBAvEUX,iB,EAAiB,yI,EAAA,uH,EAAA,mI,EAAA,uI;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA,6hB;AAAA;AAAA;ACd9B;;AACI;;AAAmB;;AAAQ;;AAC3B;;AACI;;AACJ;;AACJ;;AAMA;;;;;;AATY;;AAAA;;AASgD;;AAAA;;;;;;;;;;sEDG/CA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACThC,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEd9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AAAQ;;AAAO;;AAAU;;AACzB;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;;;;;AAJ2B;;AAAA;;;;;;AAM3B;;AACE;;AAAQ;;AAAK;;AAAU;;AACvB;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;;;;;AAJyB;;AAAA;;;;;;AAiBX;;AACI;;AACJ;;;;;;AAFiD;;AAC7C;;AAAA;;;;QDbP8C,sB;AAQX,sCAAoBtC,EAApB,EAA4CuC,iBAA5C,EACUC,mBADV,EAC4DlE,MAD5D,EAC4E;AAAA;;AADxD,aAAA0B,EAAA,GAAAA,EAAA;AAAwB,aAAAuC,iBAAA,GAAAA,iBAAA;AAClC,aAAAC,mBAAA,GAAAA,mBAAA;AAAkD,aAAAlE,MAAA,GAAAA,MAAA;AAE1D,aAAK4B,IAAL,GAAY,KAAKF,EAAL,CAAQG,KAAR,CAAc;AACxBxC,cAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWmD,OAAX,CAAmB,CAC3C,0DAAWV,QADgC,CAAnB,CAApB,CADkB;AAIxBxC,eAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWkD,OAAX,CAAmB,CAC5C,0DAAWV,QADiC,CAAnB,CAApB,CAJiB;AAOxB/C,cAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWyD,OAAX,CAAmB,CAC3C,0DAAWV,QADgC,CAAnB,CAApB,CAPkB;AAUxB1C,wBAAc,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWoD,OAAX,CAAmB,CACrD,0DAAWV,QAD0C,CAAnB,CAApB;AAVQ,SAAd,CAAZ;AAcD;;;;mCAEO;AACN,eAAKqC,cAAL,GAAsB,KAAKD,mBAAL,CAAyBE,gBAAzB,EAAtB;AACD;;;2CAEkB;AAAA;;AACjB,cAAMrC,GAAG,GAAG,KAAKH,IAAL,CAAUI,KAAtB;;AAEA,cAAID,GAAG,CAAChD,IAAJ,IAAYgD,GAAG,CAAC3C,cAAhB,IAAkC2C,GAAG,CAAC1C,IAAtC,IAA8C0C,GAAG,CAACzC,KAAtD,EAA6D;AAEzD,iBAAK2E,iBAAL,CAAuBI,aAAvB,CAAqCtC,GAAG,CAAChD,IAAzC,EAA8CgD,GAAG,CAAC3C,cAAlD,EAAiE2C,GAAG,CAAC1C,IAArE,EAA0E0C,GAAG,CAACzC,KAA9E,EACKjB,SADL,CAEM,YAAM;AACF,oBAAI,CAACqC,cAAL,GAAoB,6BAApB;AACAC,wBAAU,CAAC,YAAM;AACb,sBAAI,CAACX,MAAL,CAAYY,aAAZ;AACH,eAFS,EAEP,IAFO,CAAV;AAGH,aAPP,EAQM,UAAAC,GAAG,EAAI;AACH,oBAAI,CAACC,YAAL,GAAoBD,GAAG,CAACE,KAAJ,CAAUA,KAA9B;AACH,aAVP;AAaH;AACF;;;;;;;uBAlDUiD,sB,EAAsB,2H,EAAA,+I,EAAA,kJ,EAAA,uH;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,e;AAAA,a;AAAA,mmC;AAAA;AAAA;ACbnC;;AAOE;;AAOF;;AAAmB;;AAAc;;AAEjC;;AACI;;AACI;;AACI;;AAAO;;AAAK;;AACZ;;AACJ;;AACA;;AACI;;AAAO;;AAAa;;AACpB;;AACI;;;;AAGJ;;AACJ;;AACA;;AACI;;AAAO;;AAAK;;AACZ;;AACJ;;AACA;;AACI;;AAAO;;AAAM;;AACb;;AACJ;;AACJ;;AAEA;;AACI;;AAAsD;AAAA,mBAAS,IAAAM,gBAAA,EAAT;AAA2B,WAA3B;;AAA6B;;AAAI;;AAC3F;;AACJ;;;;AA3CK;;AAOE;;AAAA;;AAS6B;;AAAA;;AASZ;;AAAA;;AAgBa;;AAAA;;;;;;;;;;sED5BxBN,sB,EAAsB;cALlC,uDAKkC;eALxB;AACThD,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEbnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACQQ;;AACI;;AACI;;AAAG;;AAAU;;AAAI;;AACrB;;AACA;;AACG;;AACH;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AAA6C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACzC;;AACJ;;AACJ;;;;;;AAnBW;;AAAA;;AAAc;;AAAA;;AAGlB;;AAAA;;AAGC;;AAAA;;AAGI;;AAAA;;AACK;;AAAA;;AAGiC;;AAAA;;;;;;AAvB1D;;AAEI;;AAAmB;;AAAyB;;AAC5C;;AACI;;AACJ;;AACA;;AACI;;AACA;;;;AAsBA;;AACJ;;AAGA;;;;;;AA1BQ;;AAAA;;;;QDMCqD,yB;AAWX,yCAAoBN,iBAApB,EAAkEjE,MAAlE,EACUD,WADV,EAC2C2B,EAD3C,EAC2D;AAAA;;AADvC,aAAAuC,iBAAA,GAAAA,iBAAA;AAA8C,aAAAjE,MAAA,GAAAA,MAAA;AACxD,aAAAD,WAAA,GAAAA,WAAA;AAAiC,aAAA2B,EAAA,GAAAA,EAAA;AACvC,aAAKE,IAAL,GAAY,KAAKF,EAAL,CAAQG,KAAR,CAAc;AACxBrC,mBAAS,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWgD,OAAX,CAAmB,CAChD,0DAAWV,QADqC,CAAnB,CAApB;AADa,SAAd,CAAZ;AAKA,aAAK0C,KAAL,GAAa,KAAK9C,EAAL,CAAQG,KAAR,CAAc;AACzB4C,gBAAM,EAAE,IAAI,0DAAJ;AADiB,SAAd,CAAb;AAGH;;;;mCAEO;AACN,eAAKC,OAAL,GAAa,KAAKT,iBAAL,CAAuBU,cAAvB,CAAsC,EAAtC,EAAyC,KAAKhG,OAA9C,CAAb;AACA,eAAK6B,WAAL,GAAiB,KAAKT,WAAL,CAAiBlC,KAAlC;AACD;;;yCAEgBhB,E,EAAS;AAAA;;AACxB,eAAKoH,iBAAL,CAAuBW,gBAAvB,CAAwC/H,EAAxC,EACAwB,SADA,CAEE,YAAM;AACF,mBAAI,CAACqC,cAAL,GAAoB,6BAApB;;AACA,gBAAI,OAAI,CAACuD,iBAAL,CAAuBU,cAAvB,CAAsC,EAAtC,EAAyC,OAAI,CAAChG,OAA9C,KAA0D,IAA9D,EAAmE;AACjE,qBAAI,CAAC+F,OAAL,GAAa,IAAb;AACD,aAFD,MAEK;AACH,qBAAI,CAACA,OAAL,GAAa,OAAI,CAACT,iBAAL,CAAuBU,cAAvB,CAAsC,EAAtC,EAAyC,OAAI,CAAChG,OAA9C,CAAb;AACD;AACJ,WATH,EAUE,UAAAkC,GAAG,EAAI;AACH,mBAAI,CAACC,YAAL,GAAoBD,GAAG,CAACE,KAAJ,CAAUA,KAA9B;AACH,WAZH;AAcD;;;;;;;uBA3CUwD,yB,EAAyB,+I,EAAA,uH,EAAA,mI,EAAA,2H;AAAA,K;;;YAAzBA,yB;AAAyB,4C;AAAA,c;AAAA,a;AAAA,qiB;AAAA;AAAA;ACdtC;;;;;;AAA4D;;;;;;;;;;sEDc/CA,yB,EAAyB;cALrC,uDAKqC;eAL3B;AACTvD,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAK2B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AAAQ;;AAAO;;AAAU;;AACzB;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;;;;;AAJ2B;;AAAA;;;;;;AAM3B;;AACE;;AAAQ;;AAAK;;AAAU;;AACvB;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;;;;;AAJyB;;AAAA;;;;;;AAiBX;;AACI;;AACJ;;;;;;AAFiD;;AAC7C;;AAAA;;;;;;;;AAVpB;;AACI;;AACI;;AACI;;AAAO;;AAAK;;AACZ;;AAA+D;AAAA;;AAAA;;AAAA;AAAA;;AAA/D;;AACJ;;AACA;;AACI;;AAAO;;AAAa;;AACpB;;AAAwG;AAAA;;AAAA;;AAAA;AAAA;;AACpG;;;;AAGJ;;AACJ;;AACA;;AACI;;AAAO;;AAAK;;AACZ;;AAA6E;AAAA;;AAAA;;AAAA;AAAA;;AAA7E;;AACJ;;AACA;;AACI;;AAAO;;AAAM;;AACb;;AAA+E;AAAA;;AAAA;;AAAA;AAAA;;AAA/E;;AACJ;;AACJ;;AAEA;;AACI;;AAAsD;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AAAI;;AACzF;;AACJ;;;;;;AA3BoC;;AAIuC;;AAAA;;AAIyC;;AAAA;;AAC5F;;AAAA;;AAOiE;;AAAA;;AAIE;;AAAA;;AAKtD;;AAAA;;;;QD1BxB2D,uB;AASZ,uCAAoBC,KAApB,EAAkDpD,EAAlD,EACUwC,mBADV,EAC0DD,iBAD1D,EACuGjE,MADvG,EACuH;AAAA;;AADnG,aAAA8E,KAAA,GAAAA,KAAA;AAA8B,aAAApD,EAAA,GAAAA,EAAA;AACxC,aAAAwC,mBAAA,GAAAA,mBAAA;AAAgD,aAAAD,iBAAA,GAAAA,iBAAA;AAA6C,aAAAjE,MAAA,GAAAA,MAAA;AAEpG,aAAK4B,IAAL,GAAY,KAAKF,EAAL,CAAQG,KAAR,CAAc;AACxBxC,cAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWmD,OAAX,CAAmB,CAC3C,0DAAWV,QADgC,CAAnB,CAApB,CADkB;AAIxBxC,eAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWkD,OAAX,CAAmB,CAC5C,0DAAWV,QADiC,CAAnB,CAApB,CAJiB;AAOxB/C,cAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWyD,OAAX,CAAmB,CAC3C,0DAAWV,QADgC,CAAnB,CAApB,CAPkB;AAUxB1C,wBAAc,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWoD,OAAX,CAAmB,CACrD,0DAAWV,QAD0C,CAAnB,CAApB;AAVQ,SAAd,CAAZ;AAcD;;;;mCAGS;AAAA;;AACT,eAAKgD,KAAL,CAAWC,QAAX,CACGhH,IADH,CACQ,iEAAU,UAACiB,MAAD;AAAA,mBAAsBA,MAAM,CAACZ,GAAP,CAAW,IAAX,CAAtB;AAAA,WAAV,CADR,EAEGC,SAFH,CAEa,UAAAxB,EAAE,EAAI;AACf,mBAAI,CAACmI,YAAL,GAAoBC,QAAQ,CAACpI,EAAD,EAAK,EAAL,CAA5B;;AACA,mBAAI,CAACqI,IAAL;;AACA,mBAAI,CAACf,cAAL,GAAsB,OAAI,CAACD,mBAAL,CAAyBE,gBAAzB,EAAtB;AACD,WANH;AAOD;;;+BAEgC;AAAA;;AAAA,cAA5Be,SAA4B,uEAAP,KAAO;AAC/B,eAAKlB,iBAAL,CAAuBmB,aAAvB,CAAqC,KAAKJ,YAA1C,EAAwD3G,SAAxD,CAAkE,UAAA6B,CAAC,EAAI;AACnE,mBAAI,CAACmF,UAAL,GAAkB;AAChBxI,gBAAE,EAAGqD,CAAC,CAACrD,EADS;AAEhBkC,kBAAI,EAACmB,CAAC,CAACnB,IAFS;AAGhBM,kBAAI,EAAGa,CAAC,CAACb,IAHO;AAIhBiG,uBAAS,EAAGpF,CAAC,CAACoF,SAJE;AAKhBC,0BAAY,EAAC,IALG;AAMhBnG,4BAAc,EAACc,CAAC,CAACd,cAND;AAOhBE,mBAAK,EAACY,CAAC,CAACZ,KAPQ;AAQhBkG,oBAAM,EAAC;AARS,aAAlB;AAUH,WAXD;AAYD;;;yCAEa;AAAA;;AACZ,cAAMzD,GAAG,GAAG,KAAKH,IAAL,CAAUI,KAAtB;;AAEA,cAAID,GAAG,CAAChD,IAAJ,IAAYgD,GAAG,CAAC3C,cAAhB,IAAkC2C,GAAG,CAAC1C,IAAtC,IAA8C0C,GAAG,CAACzC,KAAtD,EAA6D;AACzD,iBAAK2E,iBAAL,CAAuBwB,cAAvB,CAAsC,KAAKT,YAA3C,EAAyDjD,GAAG,CAAChD,IAA7D,EAAoEgD,GAAG,CAAC3C,cAAxE,EAAyF2C,GAAG,CAAC1C,IAA7F,EAAoG0C,GAAG,CAACzC,KAAxG,EACKjB,SADL,CAEK,YAAM;AACF,qBAAI,CAACqC,cAAL,GAAoB,4BAApB;AACAC,wBAAU,CAAC,YAAM;AACb,uBAAI,CAACX,MAAL,CAAYY,aAAZ;AACH,eAFS,EAEP,IAFO,CAAV;AAGH,aAPN,EAQK,UAAAC,GAAG,EAAI;AACH,qBAAI,CAACC,YAAL,GAAoBD,GAAG,CAACE,KAAJ,CAAUA,KAA9B;AACH,aAVN;AAaH;AACF;;;;;;;uBAxEW8D,uB,EAAuB,+H,EAAA,2H,EAAA,kJ,EAAA,+I,EAAA,uH;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA,c;AAAA,a;AAAA,6zC;AAAA;AAAA;ACfpC;;AAOE;;AAOF;;AAAmB;;AAAe;;AAElC;;;;AAhBK;;AAOE;;AAAA;;AASgD;;AAAA;;;;;;;;;;sEDD1CA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACT7D,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEfpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AAA8C;;AAAyC;;;;;;;;AAwBvE;;AAA4D;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACxD;;AACJ;;;;;;AAjBJ;;AACI;;AACI;;AACJ;;AACA;;AACG;;AACH;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AAGJ;;;;;;AAhBQ;;AAAA;;AAGD;;AAAA;;AAGC;;AAAA;;AAGI;;AAAA;;AACK;;AAAA;;AAG8B;;AAAA;;;;;;AAtB3D;;AAEI;;AACI;;AAAmB;;AAAc;;AAEjC;;AACI;;AACA;;;;AAmBA;;AACJ;;AAGJ;;AA9BJ;;;;;;AAOgB;;AAAA;;;;QDGHwE,sB;AAOX,sCAAoBzB,iBAApB,EAAkElE,WAAlE,EAAmGC,MAAnG,EAAkH;AAAA;;AAA9F,aAAAiE,iBAAA,GAAAA,iBAAA;AAA8C,aAAAlE,WAAA,GAAAA,WAAA;AAAiC,aAAAC,MAAA,GAAAA,MAAA;AACjG,aAAKrB,OAAL,GAAe,KAAKqB,MAAL,CAAY2C,GAAZ,CAAgBtC,KAAhB,CAAsB,YAAtB,EAAoC,CAApC,EAAuClB,QAAvC,EAAf;;AACA,YAAI,CAAC,KAAKR,OAAV,EAAmB;AAChB,eAAKA,OAAL,GAAewB,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BC,SAA9B,CAAwC,CAAxC,EAA2CH,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BE,MAAzE,CAAf;AACD;AAAG;;;;mCAEC;AACN,eAAKmE,OAAL,GAAa,KAAKT,iBAAL,CAAuB0B,gBAAvB,CAAwC,KAAKhH,OAA7C,CAAb;AACA,eAAKA,OAAL,GAAe,KAAKqB,MAAL,CAAY2C,GAAZ,CAAgBtC,KAAhB,CAAsB,YAAtB,EAAoC,CAApC,EAAuClB,QAAvC,EAAf;;AACA,cAAI,CAAC,KAAKR,OAAV,EAAmB;AAChB,iBAAKA,OAAL,GAAewB,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BC,SAA9B,CAAwC,CAAxC,EAA2CH,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BE,MAAzE,CAAf;AACD;AAAG;;;uCAEQ1D,E,EAAS;AAAA;;AACtB,eAAKoH,iBAAL,CAAuB2B,cAAvB,CAAsC/I,EAAtC,EACAwB,SADA,CAEE,YAAM;AACF,mBAAI,CAACqC,cAAL,GAAoB,0BAApB;AACAwB,oBAAQ,CAACC,MAAT,CAAgB,IAAhB;;AACA,gBAAI,OAAI,CAAC8B,iBAAL,CAAuB0B,gBAAvB,CAAwC,OAAI,CAAChH,OAA7C,KAAyD,IAA7D,EAAkE;AAChE,qBAAI,CAAC+F,OAAL,GAAa,IAAb;AACD,aAFD,MAEK;AACH,qBAAI,CAACA,OAAL,GAAa,OAAI,CAACT,iBAAL,CAAuB0B,gBAAvB,CAAwC,OAAI,CAAChH,OAA7C,CAAb;AACD;AACJ,WAVH,EAWE,UAAAkC,GAAG,EAAI;AACH,mBAAI,CAACC,YAAL,GAAoBD,GAAG,CAACE,KAAJ,CAAUA,KAA9B;AACH,WAbH;AAeD;;;;;;;uBApCU2E,sB,EAAsB,+I,EAAA,mI,EAAA,uH;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,c;AAAA,a;AAAA,igB;AAAA;AAAA;ACZnC;;;;AAEA;;;;;;AAFI;;AAEwD;;AAAA;;;;;;;;;;sEDU/CA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACT1E,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGA;;AACI;;AAAQ;;AAAO;;AAAU;;AACzB;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;;;;;AAJ2B;;AAAA;;;;;;AAM3B;;AACE;;AAAQ;;AAAK;;AAAU;;AACvB;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;;;;;AAJyB;;AAAA;;;;;;;;AA2Bf;;AAA8D;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC1D;;AACJ;;;;;;;;AACA;;AAAyF;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACrF;;AACJ;;;;;;AApBJ;;AACI;;AACI;;AAAG;;AAAU;;AAAI;;AACrB;;AACA;;AACG;;AACH;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AAGA;;;;AAGJ;;;;;;;;AAnBW;;AAAA;;AAAc;;AAAA;;AAGlB;;AAAA;;AAGC;;AAAA;;AAGI;;AAAA;;AACK;;AAAA;;AAG+B;;AAAA;;AAGD;;AAAA;;;;;;AAxBvD;;AAEI;;AAAmB;;AAAW;;AAE9B;;AACI;;AACA;;;;AAsBA;;AACJ;;AACJ;;;;;;AAxBY;;AAAA;;;;;;AAsCJ;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;QDhDC2E,oB;AAWX,oCAAoB5B,iBAApB,EAAkEjE,MAAlE,EACUD,WADV,EAC2C2B,EAD3C,EAC2D;AAAA;;AADvC,aAAAuC,iBAAA,GAAAA,iBAAA;AAA8C,aAAAjE,MAAA,GAAAA,MAAA;AACxD,aAAAD,WAAA,GAAAA,WAAA;AAAiC,aAAA2B,EAAA,GAAAA,EAAA;AACvC,aAAKE,IAAL,GAAY,KAAKF,EAAL,CAAQG,KAAR,CAAc;AACxBrC,mBAAS,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWgD,OAAX,CAAmB,CAChD,0DAAWV,QADqC,CAAnB,CAApB;AADa,SAAd,CAAZ;AAKH;;;;mCAEO;AACN,eAAK4C,OAAL,GAAa,KAAKT,iBAAL,CAAuBU,cAAvB,CAAsC,EAAtC,EAAyC,KAAKhG,OAA9C,CAAb;AACA,eAAK6B,WAAL,GAAiB,KAAKT,WAAL,CAAiBlC,KAAlC;AACD;;;yCAEgBhB,E,EAAS;AAAA;;AACxB,eAAKoH,iBAAL,CAAuBW,gBAAvB,CAAwC/H,EAAxC,EAA4CwB,SAA5C,CACE,YAAM;AACF,gBAAI,OAAI,CAAC4F,iBAAL,CAAuBU,cAAvB,CAAsC,EAAtC,EAAyC,OAAI,CAAChG,OAA9C,KAA0D,IAA9D,EAAmE;AACjE,qBAAI,CAAC+F,OAAL,GAAa,IAAb;AACD,aAFD,MAEK;AACH,qBAAI,CAACA,OAAL,GAAa,OAAI,CAACT,iBAAL,CAAuBU,cAAvB,CAAsC,EAAtC,EAAyC,OAAI,CAAChG,OAA9C,CAAb;AACD;AACF,WAPL,EAOM,UAAAkC,GAAG,EAAI;AACP,mBAAI,CAACC,YAAL,GAAoBD,GAAG,CAACE,KAAJ,CAAUA,KAA9B;AACH,WATH;AAWD;;;sCAEalE,E,EAAS;AAAA;;AACrB,eAAKoH,iBAAL,CAAuB6B,aAAvB,CAAqCjJ,EAArC,EACCwB,SADD,CAEE,YAAM;AACF,mBAAI,CAACqC,cAAL,GAAoB,4BAApB;AACAC,sBAAU,CAAC,YAAM;AACfuB,sBAAQ,CAACC,MAAT,CAAgB,IAAhB;AACD,aAFS,EAEP,IAFO,CAAV;AAGH,WAPH,EAQE,UAAAtB,GAAG,EAAI;AACH,mBAAI,CAACC,YAAL,GAAoBD,GAAG,CAACE,KAAJ,CAAUA,KAA9B;AACH,WAVH;AAYD;;;uCAEclE,E,EAAS;AAAA;;AACtB,eAAKoH,iBAAL,CAAuB2B,cAAvB,CAAsC/I,EAAtC,EAA0CwB,SAA1C,CACE,YAAM;AACF,mBAAI,CAACqC,cAAL,GAAoB,0BAApB;AACAC,sBAAU,CAAC,YAAM;AACfuB,sBAAQ,CAACC,MAAT,CAAgB,IAAhB;AACD,aAFS,EAEP,IAFO,CAAV;AAGH,WANH,EAOE,UAAAtB,GAAG,EAAI;AACH,mBAAI,CAACC,YAAL,GAAoBD,GAAG,CAACE,KAAJ,CAAUA,KAA9B;AACH,WATH;AAWD;;;+BAEG;AAAA;;AACF,cAAMgB,GAAG,GAAG,KAAKH,IAAL,CAAUI,KAAtB;;AAEA,cAAID,GAAG,CAACvC,SAAR,EAAmB;AACjB,iBAAKyE,iBAAL,CAAuB8B,IAAvB,CAA4BhE,GAAG,CAACvC,SAAhC,EAA2CnB,SAA3C,CACE,UAAC2H,IAAD,EAAU;AACN,qBAAI,CAACC,QAAL,GAAgBD,IAAhB;AACH,aAHH;AAKD;AACF;;;;;;;uBA9EUH,oB,EAAoB,+I,EAAA,uH,EAAA,mI,EAAA,2H;AAAA,K;;;YAApBA,oB;AAAoB,sC;AAAA,e;AAAA,a;AAAA,o+C;AAAA;AAAA;ACdjC;;AACI;;AACJ;;AACA;;AAOE;;AAOF;;;;AAgCA;;AACI;;AAAI;;AAAqB;;AACzB;;AACI;;AAAI;;AAA6B;;AACjC;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAA8D;AAAA,mBAAS,IAAAE,IAAA,EAAT;AAAe,WAAf;;AAAiB;;AAAQ;;AAC1F;;AACL;;AACA;;AAGJ;;AACJ;;;;AA9DK;;AAAA;;AAOE;;AAAA;;AAOqD;;AAAA;;AAoCnC;;AAAA;;AAK4B;;AAAA;;AAGxC;;AAAA;;;;;;;;;;sED/CAF,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT7E,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AAAQ;;AAAO;;AAAU;;AACzB;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;;;;;AAJ2B;;AAAA;;;;;;AAM3B;;AACE;;AAAQ;;AAAK;;AAAU;;AACvB;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;;;;;AAJyB;;AAAA;;;;QDEdgF,wB;AAMX,wCAAoBxE,EAApB,EAA4CwC,mBAA5C,EAA6FlE,MAA7F,EAA6G;AAAA;;AAAzF,aAAA0B,EAAA,GAAAA,EAAA;AAAwB,aAAAwC,mBAAA,GAAAA,mBAAA;AAAiD,aAAAlE,MAAA,GAAAA,MAAA;AAC3F,aAAK4B,IAAL,GAAY,KAAKF,EAAL,CAAQG,KAAR,CAAc;AACxBtE,mBAAS,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWiF,OAAX,CAAmB,CAChD,0DAAWV,QADqC,CAAnB,CAApB,CADa;AAIxBtE,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWgF,OAAX,CAAmB,CAC/C,0DAAWV,QADoC,CAAnB,CAApB,CAJc;AAOxBpC,aAAG,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAW8C,OAAX,CAAmB,CAC1C,0DAAWV,QAD+B,CAAnB,CAApB;AAPmB,SAAd,CAAZ;AAWA;;;;mCAEM,CACP;;;6CAEiB;AAAA;;AAChB,cAAMC,GAAG,GAAG,KAAKH,IAAL,CAAUI,KAAtB;;AAEA,cAAID,GAAG,CAACxE,SAAJ,IAAiBwE,GAAG,CAACvE,QAArB,IAAiCuE,GAAG,CAACrC,GAAzC,EAA8C;AAC1C,iBAAKwE,mBAAL,CAAyBiC,eAAzB,CAAyCpE,GAAG,CAACxE,SAA7C,EAAuDwE,GAAG,CAACvE,QAA3D,EAAoEuE,GAAG,CAACrC,GAAxE,EACKrB,SADL,CAEM,YAAM;AACF,qBAAI,CAACqC,cAAL,GAAoB,+BAApB;AACAC,wBAAU,CAAC,YAAM;AACb,uBAAI,CAACX,MAAL,CAAYY,aAAZ;AACH,eAFS,EAEP,IAFO,CAAV;AAGH,aAPP,EAQM,UAAAC,GAAG,EAAI;AACH,qBAAI,CAACC,YAAL,GAAoBD,GAAG,CAACE,KAAJ,CAAUA,KAA9B;AACH,aAVP;AAaH;AACF;;;;;;;uBAzCUmF,wB,EAAwB,2H,EAAA,kJ,EAAA,uH;AAAA,K;;;YAAxBA,wB;AAAwB,2C;AAAA,e;AAAA,a;AAAA,m6B;AAAA;AAAA;ACVrC;;AAOE;;AAOF;;AAAmB;;AAAgB;;AAEnC;;AACI;;AACI;;AACI;;AAAO;;AAAW;;AAClB;;AACJ;;AACA;;AACI;;AAAO;;AAAU;;AACjB;;AACJ;;AACA;;AACI;;AAAO;;AAAG;;AACV;;AACJ;;AACJ;;AAEA;;AACI;;AAAsD;AAAA,mBAAS,IAAAE,kBAAA,EAAT;AAA6B,WAA7B;;AAA+B;;AAAI;;AAC7F;;AACJ;;;;AAnCK;;AAOE;;AAAA;;AAS6B;;AAAA;;AAiBC;;AAAA;;;;;;;;;sEDvBxBF,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACTlF,kBAAQ,EAAE,sBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEVrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AAAQ;;AAAO;;AAAU;;AACzB;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;;;;;AAJ2B;;AAAA;;;;;;AAM3B;;AACE;;AAAQ;;AAAK;;AAAU;;AACvB;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;;;;;AAJyB;;AAAA;;;;;;;;AAQ3B;;AACI;;AACI;;AACI;;AAAO;;AAAW;;AAClB;;AAAoE;AAAA;;AAAA;;AAAA;AAAA;;AAApE;;AACJ;;AACA;;AACI;;AAAO;;AAAU;;AACjB;;AAAmE;AAAA;;AAAA;;AAAA;AAAA;;AAAnE;;AACJ;;AACA;;AACI;;AAAO;;AAAG;;AACV;;AAA2E;AAAA;;AAAA;;AAAA;AAAA;;AAA3E;;AACJ;;AACJ;;AAEA;;AACI;;AAAsD;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAI;;AAC5F;;AACJ;;;;;;AAnBoC;;AAI4C;;AAAA;;AAID;;AAAA;;AAIQ;;AAAA;;AAKlD;;AAAA;;;;QDrBxBmF,yB;AAQX,yCAAoBvB,KAApB,EAAkDpD,EAAlD,EAA0EwC,mBAA1E,EAA2HlE,MAA3H,EAA2I;AAAA;;AAAvH,aAAA8E,KAAA,GAAAA,KAAA;AAA8B,aAAApD,EAAA,GAAAA,EAAA;AAAwB,aAAAwC,mBAAA,GAAAA,mBAAA;AAAiD,aAAAlE,MAAA,GAAAA,MAAA;AACzH,aAAK4B,IAAL,GAAY,KAAKF,EAAL,CAAQG,KAAR,CAAc;AACxBtE,mBAAS,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWiF,OAAX,CAAmB,CAChD,0DAAWV,QADqC,CAAnB,CAApB,CADa;AAIxBtE,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWgF,OAAX,CAAmB,CAC/C,0DAAWV,QADoC,CAAnB,CAApB,CAJc;AAOxBpC,aAAG,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAW8C,OAAX,CAAmB,CAC1C,0DAAWV,QAD+B,CAAnB,CAApB;AAPmB,SAAd,CAAZ;AAWA;;;;mCAGS;AAAA;;AACT,eAAKgD,KAAL,CAAWC,QAAX,CACGhH,IADH,CACQ,iEAAU,UAACiB,MAAD;AAAA,mBAAsBA,MAAM,CAACZ,GAAP,CAAW,IAAX,CAAtB;AAAA,WAAV,CADR,EAEGC,SAFH,CAEa,UAAAxB,EAAE,EAAI;AACf,mBAAI,CAACuC,cAAL,GAAsB6F,QAAQ,CAACpI,EAAD,EAAK,EAAL,CAA9B;;AACA,mBAAI,CAACqI,IAAL;AACD,WALH;AAMD;;;+BAEgC;AAAA;;AAAA,cAA5BC,SAA4B,uEAAP,KAAO;AAC/B,eAAKjB,mBAAL,CAAyBoC,eAAzB,CAAyC,KAAKlH,cAA9C,EAA8Df,SAA9D,CAAwE,UAAA6B,CAAC,EAAI;AACzE,mBAAI,CAACqF,YAAL,GAAoB;AAClB1I,gBAAE,EAAGqD,CAAC,CAACrD,EADW;AAElBU,uBAAS,EAAG2C,CAAC,CAAC3C,SAFI;AAGlBC,sBAAQ,EAAG0C,CAAC,CAAC1C,QAHK;AAIlBkC,iBAAG,EAAGQ,CAAC,CAACR;AAJU,aAApB;AAMH,WAPD;AAQD;;;2CAEe;AAAA;;AACd,cAAMqC,GAAG,GAAG,KAAKH,IAAL,CAAUI,KAAtB;;AAEA,cAAID,GAAG,CAACxE,SAAJ,IAAiBwE,GAAG,CAACvE,QAArB,IAAiCuE,GAAG,CAACrC,GAAzC,EAA8C;AAC1C,iBAAKwE,mBAAL,CAAyBqC,gBAAzB,CAA0C,KAAKnH,cAA/C,EAA+D2C,GAAG,CAACxE,SAAnE,EAA6EwE,GAAG,CAACvE,QAAjF,EAA0FuE,GAAG,CAACrC,GAA9F,EACCrB,SADD,CAEE,YAAM;AACF,qBAAI,CAACqC,cAAL,GAAoB,8BAApB;AACAC,wBAAU,CAAC,YAAM;AACb,uBAAI,CAACX,MAAL,CAAYY,aAAZ;AACH,eAFS,EAEP,IAFO,CAAV;AAGH,aAPH,EAQE,UAAAC,GAAG,EAAI;AACH,qBAAI,CAACC,YAAL,GAAoBD,GAAG,CAACE,KAAJ,CAAUA,KAA9B;AACH,aAVH;AAaH;AACF;;;;;;;uBA7DUsF,yB,EAAyB,+H,EAAA,2H,EAAA,kJ,EAAA,uH;AAAA,K;;;YAAzBA,yB;AAAyB,4C;AAAA,c;AAAA,a;AAAA,8lC;AAAA;AAAA;ACZtC;;AAOE;;AAOF;;AAAmB;;AAAiB;;AAEpC;;;;AAhBK;;AAOE;;AAAA;;AASgD;;AAAA;;;;;;;;;sEDJ1CA,yB,EAAyB;cALrC,uDAKqC;eAL3B;AACTrF,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAK2B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACUQ;;AACI;;AAA0B;;AAAG;;AAA8B;;AAAK;;AAAK;;AAAoB;;AACzF;;AACI;;AACI;;AACJ;;AACA;;AAA+B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC3B;;AACJ;;AACJ;;AACJ;;;;;;AATiC;;AAAA;;AAAwC;;AAAA;;AAEzD;;AAAA;;;;;;AAbxB;;AAEI;;AACI;;AAAmB;;AAAa;;AAChC;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACA;;;;AAWA;;AACJ;;AAGA;;;;;;AAfQ;;AAAA;;;;QDCCsF,sB;AAMX,sCAAoBtC,mBAApB,EAAsElE,MAAtE,EAAsF;AAAA;;AAAlE,aAAAkE,mBAAA,GAAAA,mBAAA;AAAkD,aAAAlE,MAAA,GAAAA,MAAA;AACrE;;;;mCAEO;AACN,eAAKmE,cAAL,GAAoB,KAAKD,mBAAL,CAAyBE,gBAAzB,EAApB;AACD;;;2CAEkBvH,E,EAAS;AAAA;;AAC1B,eAAKqH,mBAAL,CAAyBuC,kBAAzB,CAA4C5J,EAA5C,EACCwB,SADD,CAEE,YAAM;AACF,mBAAI,CAACqC,cAAL,GAAoB,+BAApB;AACAC,sBAAU,CAAC,YAAM;AACf,qBAAI,CAACX,MAAL,CAAYY,aAAZ;AACH,aAFW,EAET,IAFS,CAAV;AAGH,WAPH,EAQE,UAAAC,GAAG,EAAI;AACH,mBAAI,CAACC,YAAL,GAAoBD,GAAG,CAACE,KAAJ,CAAUA,KAA9B;AACH,WAVH;AAYA,eAAKoD,cAAL,GAAoB,KAAKD,mBAAL,CAAyBE,gBAAzB,EAApB;AACD;;;;;;;uBA3BUoC,sB,EAAsB,kJ,EAAA,uH;AAAA,K;;;YAAtBA,sB;AAAsB,wC;AAAA,c;AAAA,a;AAAA,8Z;AAAA;AAAA;ACXnC;;;;;;AAA4D;;;;;;;;;;sEDW/CA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTxF,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEXnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AAAQ;;AAAO;;AAAU;;AACzB;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;;;;;AAJ2B;;AAAA;;;;;;AAM3B;;AACE;;AAAQ;;AAAK;;AAAU;;AACvB;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;;;;;AAJyB;;AAAA;;;;QDIdwF,e;AAOT,+BAAoBC,WAApB,EAAsD5G,WAAtD,EAAuFC,MAAvF,EAA6GuC,SAA7G,EAAqI;AAAA;;AAAjH,aAAAoE,WAAA,GAAAA,WAAA;AAAkC,aAAA5G,WAAA,GAAAA,WAAA;AAAiC,aAAAC,MAAA,GAAAA,MAAA;AAAsB,aAAAuC,SAAA,GAAAA,SAAA;AAF7G,aAAAZ,OAAA,GAAgB,KAAhB;AAGE,aAAKC,IAAL,GAAY,KAAK+E,WAAL,CAAiB9E,KAAjB,CAAuB;AACjCxE,eAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWmF,OAAX,CAAmB,CAC5C,0DAAWV,QADiC,CAAnB,CAApB,CAD0B;AAIjCvD,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWiE,OAAX,CAAmB,CAC/C,0DAAWV,QADoC,CAAnB,CAApB,CAJuB;AAOjC8E,yBAAe,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWpE,OAAX,CAAmB,CACtD,0DAAWV,QAD2C,CAAnB,CAApB,CAPgB;AAUjCvE,mBAAS,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWiF,OAAX,CAAmB,CAChD,0DAAWV,QADqC,CAAnB,CAApB,CAVsB;AAajCtE,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWgF,OAAX,CAAmB,CAC/C,0DAAWV,QADoC,CAAnB,CAApB,CAbuB;AAgBjCrE,qBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAW+E,OAAX,CAAmB,EAAnB,CAApB;AAhBoB,SAAvB,CAAZ;AAmBD;;;;mCAEU;AACT,cAAI,KAAKb,OAAT,EAAiB;AACf,iBAAK3B,MAAL,CAAYY,aAAZ;AACD;AACF;;;iCAEQ;AAAA;;AACL,cAAMmB,GAAG,GAAG,KAAKH,IAAL,CAAUI,KAAtB;;AAEA,cAAID,GAAG,CAAC1E,KAAJ,IAAa0E,GAAG,CAACxE,SAAjB,IAA6BwE,GAAG,CAACvE,QAAjC,IAA6CuE,GAAG,CAACxD,QAAjD,IAA6DwD,GAAG,CAACxD,QAAJ,KAAiBwD,GAAG,CAAC6E,eAAtF,EAAuG;AAErG,iBAAK7G,WAAL,CAAiB8G,MAAjB,CAAwB9E,GAAG,CAAC1E,KAA5B,EAAmC0E,GAAG,CAACxD,QAAvC,EAAgDwD,GAAG,CAACxE,SAApD,EAA8DwE,GAAG,CAACvE,QAAlE,EAA2EuE,GAAG,CAACtE,WAA/E,EACCY,SADD,CAEE,YAAM;AACF,qBAAI,CAACqC,cAAL,GAAoB,iCAApB;AACA,qBAAI,CAACiB,OAAL,GAAa,IAAb;AACAhB,wBAAU,CAAC,YAAM;AAACuB,wBAAQ,CAACC,MAAT,CAAgB,IAAhB;AACjB,eADS,EACP,IADO,CAAV;AAEH,aAPH,EAQE,UAAAtB,GAAG,EAAI;AACH,qBAAI,CAACC,YAAL,GAAoBD,GAAG,CAACE,KAAJ,CAAUA,KAA9B;AACH,aAVH;AAaD;AAEJ;;;;;;;uBAvDQ2F,e,EAAe,2H,EAAA,mI,EAAA,uH,EAAA,uI;AAAA,K;;;YAAfA,e;AAAe,6B;AAAA,e;AAAA,a;AAAA,iuC;AAAA;AAAA;ACZ5B;;AAOE;;AAOF;;AAAmB;;AAAO;;AAE1B;;AAEI;;AACI;;AACI;;AAAO;;AAAU;;AACjB;;AACJ;;AACA;;AACI;;AAAO;;AAAS;;AAChB;;AACJ;;AACA;;AACI;;AAAO;;AAAuB;;AAC9B;;AACJ;;AACA;;AACI;;AAAO;;AAAa;;AACpB;;AACJ;;AAEA;;AACI;;AAAO;;AAAQ;;AACf;;AACJ;;AAEA;;AACI;;AAAO;;AAAgB;;AACvB;;AACJ;;AACJ;;AAEA;;AACI;;AAAuD;AAAA,mBAAS,IAAAG,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAO;;AACrF;;AAIJ;;;;AArDK;;AAOE;;AAAA;;AASiB;;AAAA;;AAgCc;;AAAA;;;;;;;;;sEDpCzBH,e,EAAe;cAL3B,uDAK2B;eALjB;AACT1F,kBAAQ,EAAE,QADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD,EAA2B,sBAA3B;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AAAQ;;AAAO;;AAAU;;AACzB;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;;;;;AAJ2B;;AAAA;;;;;;AAM3B;;AACE;;AAAQ;;AAAK;;AAAU;;AACvB;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;;;;;AAJyB;;AAAA;;;;;;AAiBX;;AACI;;AACJ;;;;;;AAF4C;;AACxC;;AAAA;;;;;;AAsBJ;;AAAoC;;AAAiB;;;;;;AADzD;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;QDlCR4F,uB;AAqBX,uCAAoBpF,EAApB,EAA4C3B,WAA5C,EAA8EC,MAA9E,EACUsC,kBADV,EACiD;AAAA;;AAAA;;AAD7B,aAAAZ,EAAA,GAAAA,EAAA;AAAwB,aAAA3B,WAAA,GAAAA,WAAA;AAAkC,aAAAC,MAAA,GAAAA,MAAA;AACpE,aAAAsC,kBAAA,GAAAA,kBAAA;AAXV,aAAAyE,MAAA,GAAS,IAAI,wDAAJ,CAAc;AACrBC,cAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWlF,QAAZ,CAApB,CADe;AAErBmF,oBAAU,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWnF,QAAZ,CAApB;AAFS,SAAd,CAAT;AAKA,aAAAoF,WAAA;AAQE,aAAKtF,IAAL,GAAY,KAAKF,EAAL,CAAQG,KAAR,CAAc;AACxBjC,gBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAW4C,OAAX,CAAmB,CAC7C,0DAAWV,QADkC,CAAnB,CAApB,CADgB;AAIxBjD,uBAAa,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAW2D,OAAX,CAAmB,CACpD,0DAAWV,QADyC,CAAnB,CAApB;AAJS,SAAd,CAAZ;AASA,aAAK/B,WAAL,CAAiBlC,KAAjB,CAAuBQ,SAAvB,CAAiC,UAAA6B,CAAC;AAAA,iBAAE,OAAI,CAAC7C,KAAL,GAAW6C,CAAC,CAAC7C,KAAf;AAAA,SAAlC;AACD;;;;mCAEO;AACN,eAAKuF,MAAL,GAAc,KAAK7C,WAAL,CAAiB8C,WAAjB,EAAd;AACD;;;oCAEW;AAAA;;AACV,cAAMd,GAAG,GAAG,KAAKH,IAAL,CAAUI,KAAtB;;AAEA,cAAID,GAAG,CAACnC,MAAJ,IAAcmC,GAAG,CAAClD,aAAtB,EAAqC;AAEnC,iBAAKyD,kBAAL,CAAwB6E,SAAxB,CAAkCpF,GAAG,CAAClD,aAAtC,EAAqDkD,GAAG,CAACnC,MAAzD,EACKvB,SADL,CAEQ,YAAM;AACF,qBAAI,CAACqC,cAAL,GAAoB,qBAApB;AACAC,wBAAU,CAAC,YAAM;AACf,uBAAI,CAACX,MAAL,CAAYY,aAAZ,yBAA2C,OAAI,CAACvD,KAAhD;AACD,eAFS,EAEP,IAFO,CAAV;AAGH,aAPT,EAOU,UAAAwD,GAAG,EAAI;AACP,qBAAI,CAACC,YAAL,GAAoBD,GAAG,CAACE,KAAJ,CAAUA,KAA9B;AACD,aATT;AAWD;AACF;;;qCAMY+C,K,EAAO;AAChB,eAAKkD,IAAL,GAAYlD,KAAK,CAACC,MAAN,CAAaqD,KAAb,CAAmB,CAAnB,CAAZ;AACH;;;qCAES;AAAA;;AACR,cAAI,CAAC,KAAKJ,IAAV,EACE;AAEF,cAAMK,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,gBAAM,CAACE,MAAP,GAAgB,UAACC,GAAD,EAAS;AACrB,gBAAM3H,IAAI,GAAY2H,GAAW,CAACzD,MAAZ,CAAmB0D,MAAzC;;AAEA,mBAAI,CAACnF,kBAAL,CAAwBoF,uBAAxB,CAAgD7H,IAAhD,EACKxB,SADL,CAEM,YAAM;AACJ,qBAAI,CAACqC,cAAL,GAAoB,qBAApB;AACAC,wBAAU,CAAC,YAAM;AACf,uBAAI,CAACX,MAAL,CAAYY,aAAZ,yBAA2C,OAAI,CAACvD,KAAhD;AACD,eAFS,EAEP,IAFO,CAAV;AAGD,aAPP,EAOQ,UAAAwD,GAAG,EAAI;AACP,qBAAI,CAACC,YAAL,GAAoBD,GAAG,CAACE,KAAJ,CAAUA,KAA9B;AACD,aATP;AAWH,WAdD;;AAeAsG,gBAAM,CAACM,UAAP,CAAkB,KAAKX,IAAvB;AACD;;;4BA9BI;AACH,iBAAO,KAAKD,MAAL,CAAYa,QAAnB;AACD;;;;;;;uBA7DUd,uB,EAAuB,2H,EAAA,mI,EAAA,uH,EAAA,iJ;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA,e;AAAA,c;AAAA,6sC;AAAA;AAAA;ACdpC;;AAOE;;AAOF;;AAAmB;;AAAe;;AAElC;;AACI;;AACI;;AACI;;AAAO;;AAAO;;AACd;;AACJ;;AACA;;AACI;;AAAO;;AAAS;;AAChB;;AACI;;;;AAGJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAsD;AAAA,mBAAS,IAAAK,SAAA,EAAT;AAAoB,WAApB;;AAAsB;;AAAU;;AAC1F;;AACJ;;AAEA;;AAAwB;;AAAyC;;AACjE;;AACI;;AACI;;AACI;;AAKI;AAAA,mBAAU,IAAAU,YAAA,QAAV;AAA8B,WAA9B;;AALJ;;AAMA;;AAGJ;;AACA;;AACI;;AAA6B;AAAA,mBAAS,IAAAC,UAAA,EAAT;AAAqB,WAArB;;AAAuB;;AAAM;;AAC9D;;AACJ;;AACJ;;AACA;;AACI;;AAAI;;AAAG;;AAAa;;AAAI;;AACxB;;AAAG;;AAAe;;AACtB;;;;AA3DK;;AAOE;;AAAA;;AAS4B;;AAAA;;AASX;;AAAA;;AAQa;;AAAA;;AAK/B;;AAAA;;AASW;;AAAA;;AAWV;;AAAA;;;;;;;;;;sED5CMhB,uB,EAAuB;cALnC,uDAKmC;eALzB;AACT9F,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEI;;AACI;;AACJ;;;;;;AAFQ;;;;;;AAIZ;;AAAqC;;AAA0C;;;;;;AAKnE;;AACI;;AAA0B;;AAAG;;AAAM;;AAAI;;AAAI;;AAAwB;;AACnE;;AAA0B;;AAAG;;AAAM;;AAAI;;AAAI;;AAA6B;;AACxE;;AAA0B;;AAAG;;AAAQ;;AAAI;;AAAI;;AAA+B;;AAC5E;;AAAgC;;AAAG;;AAAI;;AAAI;;AAAI;;AAAqB;;AACxE;;;;;;AAJ+C;;AAAA;;AACA;;AAAA;;AACE;;AAAA;;AACE;;AAAA;;;;;;AAP/D;;AACI;;AACI;;AACI;;;;AAMJ;;AACJ;;AACJ;;;;;;AARgB;;AAAA;;;;QDGH6G,uB;AAQX,uCAAoBhI,WAApB,EAAsDC,MAAtD,EAA6EsC,kBAA7E,EAAqH;AAAA;;AAAA;;AAAjG,aAAAvC,WAAA,GAAAA,WAAA;AAAkC,aAAAC,MAAA,GAAAA,MAAA;AAAuB,aAAAsC,kBAAA,GAAAA,kBAAA;AAC3E,aAAKjF,KAAL,GAAa,KAAK2C,MAAL,CAAY2C,GAAZ,CAAgBtC,KAAhB,CAAsB,eAAtB,EAAuC,CAAvC,EAA0ClB,QAA1C,EAAb;;AACA,YAAI,CAAC,KAAK9B,KAAV,EAAgB;AACd,eAAK0C,WAAL,CAAiBlC,KAAjB,CAAuBQ,SAAvB,CAAiC,UAAA6B,CAAC;AAAA,mBAAE,OAAI,CAAC7C,KAAL,GAAW6C,CAAC,CAAC7C,KAAf;AAAA,WAAlC;AACD;;AAED,aAAKQ,KAAL,GAAa,KAAKkC,WAAL,CAAiBlC,KAA9B;AAEA,aAAKmK,aAAL,GAAmB,KAAK1F,kBAAL,CAAwB2F,eAAxB,CAAwC,KAAK5K,KAA7C,CAAnB;;AACA,YAAI8C,QAAQ,CAACC,MAAb,EAAoB;AAClB,eAAKzB,OAAL,GAAewB,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BC,SAA9B,CAAwC,CAAxC,EAA2CH,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BE,MAAzE,CAAf;AACD;AACF;;;;mCAEO;AAAA;;AACN,eAAK1C,KAAL,GAAa,KAAKkC,WAAL,CAAiBlC,KAA9B;AACA,eAAKR,KAAL,GAAa,KAAK2C,MAAL,CAAY2C,GAAZ,CAAgBtC,KAAhB,CAAsB,eAAtB,EAAuC,CAAvC,EAA0ClB,QAA1C,EAAb;;AACA,cAAI,CAAC,KAAK9B,KAAV,EAAgB;AACd,iBAAK0C,WAAL,CAAiBlC,KAAjB,CAAuBQ,SAAvB,CAAiC,UAAA6B,CAAC;AAAA,qBAAE,OAAI,CAAC7C,KAAL,GAAW6C,CAAC,CAAC7C,KAAf;AAAA,aAAlC;AACD;;AAED,cAAI8C,QAAQ,CAACC,MAAb,EAAoB;AAClB,iBAAKzB,OAAL,GAAewB,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BC,SAA9B,CAAwC,CAAxC,EAA2CH,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BE,MAAzE,CAAf;AACD;AACF;;;;;;;uBAhCUwH,uB,EAAuB,mI,EAAA,uH,EAAA,iJ;AAAA,K;;;YAAvBA,uB;AAAuB,yC;AAAA,c;AAAA,a;AAAA,ma;AAAA;AAAA;ACdpC;;AACI;;AAAmB;;AAAY;;AAC/B;;AAGJ;;AACA;;;;AAEA;;;;;;AAN4F;;AAAA;;AAIxF;;AAAA;;AAEwD;;AAAA;;;;;;;;;;sEDM/CA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACT/G,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEdpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACoBY;;AAAyE;;AAAG;;AAAkB;;AAAI;;AAAI;;AAA0C;;AAAU;;AAAI;;;;;;AAArD;;AAAA;;;;;;AARrH;;AACI;;AACI;;AACA;;AACI;;AACI;;AAAG;;;;;;AAAsE;;AAC7E;;AACA;;AAA+B;;AAAG;;AAAa;;AAAI;;AAAI;;;;AAAgC;;AACvF;;;;AACA;;AAA+B;;AAAG;;AAAK;;AAAI;;AAAI;;;;AAAiC;;AACpF;;AACA;;AACJ;;AACJ;;;;;;AARmB;;AAAA;;AAEgD;;AAAA;;AACzB;;AAAA;;AACiB;;AAAA;;;;;;AAc3C;;AAAqD;;AAAG;;AAAkB;;AAAI;;AAAI;;AAAuD;;AAAU;;AAAI;;;;;;;;AAAlE;;AAAA;;;;;;AACrF;;AAAsF;;AAAG;;AAAK;;AAAI;;AAAI;;AAAa;;;;;;AAAb;;AAAA;;;;;;AAN1G;;AACI;;AACI;;AAAG;;AAA8B;;AACrC;;AACA;;AAA+B;;AAAG;;AAAa;;AAAI;;AAAI;;AAAY;;AACnE;;AACA;;;;AACJ;;;;;;;;AALW;;AAAA;;AAEgD;;AAAA;;AACzB;;AAAA;;AACA;;AAAA;;;;;;AAT9C;;AACQ;;AACI;;AACA;;;;AAQA;;AACJ;;AACR;;;;;;AAVgB;;AAAA;;;;QDjBHgH,c;AAUT,8BAAoBnI,WAApB,EAAqD2B,EAArD,EAA6Ea,SAA7E,EAA4GvC,MAA5G,EAA2H;AAAA;;AAAvG,aAAAD,WAAA,GAAAA,WAAA;AAAiC,aAAA2B,EAAA,GAAAA,EAAA;AAAwB,aAAAa,SAAA,GAAAA,SAAA;AAA+B,aAAAvC,MAAA,GAAAA,MAAA;AAExG,aAAK4B,IAAL,GAAY,KAAKF,EAAL,CAAQG,KAAR,CAAc;AACxB4C,gBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWjC,OAAX,CAAmB,CAC7C,0DAAWV,QADkC,CAAnB,CAApB;AADgB,SAAd,CAAZ;AAIA,aAAKqG,GAAL,GAAW,KAAK5F,SAAL,CAAee,uBAAf,CAAuC,uDAAvC,CAAX;AACL;;;;mCAES;AAAA;;AACN,eAAK9C,WAAL,GAAiB,KAAKT,WAAL,CAAiBlC,KAAlC;AACA,eAAKsK,GAAL,GAAW,KAAK5F,SAAL,CAAee,uBAAf,CAAuC,uDAAvC,CAAX;AACA,eAAK9C,WAAL,CAAiBnC,SAAjB,CACE,UAAC2H,IAAD,EAAU;AACN,mBAAI,CAACoC,YAAL,GAAkB,OAAI,CAAC7F,SAAL,CAAec,sBAAf,CAAsC2C,IAAI,CAACvI,WAA3C,CAAlB;;AACA,gBAAIuI,IAAI,CAAC3I,KAAL,IAAa,eAAjB,EAAiC;AAC/B,qBAAI,CAACuF,MAAL,GAAY,OAAI,CAAC7C,WAAL,CAAiB8C,WAAjB,EAAZ;AACD;AACJ,WANH;AAQD;;;iCAEK;AACJ,cAAMd,GAAG,GAAG,KAAKH,IAAL,CAAUI,KAAtB;;AAEA,cAAID,GAAG,CAAC0C,MAAR,EAAgB;AACd,iBAAK7B,MAAL,GAAY,KAAK7C,WAAL,CAAiBsI,QAAjB,CAA0BtG,GAAG,CAAC0C,MAA9B,CAAZ;AACD;AACF;;;mCAEUrB,I,EAAW;AACpB,iBAAO,KAAKb,SAAL,CAAec,sBAAf,CAAsCD,IAAtC,CAAP;AACD;;;;;;;uBA1CQ8E,c,EAAc,mI,EAAA,2H,EAAA,uI,EAAA,uH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,c;AAAA,suB;AAAA;AAAA;ACb3B;;AACI;;AACJ;;AACA;;AAAmB;;AAAK;;AAExB;;AAA8C;;AAAC;;AAE/C;;AACI;;AACA;;AAA+C;AAAA,mBAAS,IAAAzD,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAA4B;;AAClG;;AAEA;;;;;;;;AAeA;;;;;;AAtB4B;;AAAA;;AAEtB;;AAAA;;AAEoB;;AAAA;;AAGkC;;AAAA;;AAeA;;AAAA;;;;;;;;;;sEDd/CyD,c,EAAc;cAL1B,uDAK0B;eALhB;AACTlH,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEb3B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMoH,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAA3H,GAAG;AAAA,aAAI4H,OAAO,CAAC1H,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Routes} from '@angular/router';\nimport {LoginComponent} from \"../login/login.component\";\nimport {SignupComponent} from \"../signup/signup.component\";\nimport {AddTransactionComponent} from \"../transaction/add-transaction/add-transaction.component\";\nimport {MyTransactionsComponent} from \"../transaction/mytransactions/mytransactions.component\";\nimport { PhotographersComponent } from '../photographer/photographers/photographers.component';\nimport { AddPhotographerComponent } from '../photographer/add-photographer/add-photographer.component';\nimport { EditPhotographerComponent } from '../photographer/edit-photographer/edit-photographer.component';\nimport { PhotographsComponent } from '../photograph/photographs/photographs.component';\nimport { AddPhotographComponent } from '../photograph/add-photograph/add-photograph.component';\nimport { EditPhotographComponent } from '../photograph/edit-photograph/edit-photograph.component';\nimport { MyPhotographsComponent } from '../photograph/my-photographs/my-photographs.component';\nimport { MessagesComponent } from '../message/messages/messages.component';\nimport { AddMessageComponent } from '../message/add-message/add-message.component';\nimport { UsersComponent } from '../users/users.component';\nimport { AdminPhotographsComponent } from '../photograph/admin-photographs/admin-photographs.component';\n\n\nexport const routesConfig: Routes = [\n    {\n        path: 'users',\n        component: UsersComponent\n    },\n    {\n        path: 'transaction/SESSIONID/:session',\n        component: AddTransactionComponent\n    },\n/*********************************************** */\n    {\n        path: 'user/photographs',\n        component: PhotographsComponent\n    },\n    {\n        path: 'admin/photographs',\n        component: AdminPhotographsComponent\n    },\n    {\n        path: 'myphotographs/SESSIONID/:session',\n        component: MyPhotographsComponent\n    },\n    {\n        path: 'photographs/add',\n        component: AddPhotographComponent\n    },\n    {\n        path: 'photographs/:id',\n        component: EditPhotographComponent\n    },\n/*********************************************** */\n    {\n        path: 'photographers',\n        component: PhotographersComponent\n    },\n    {\n        path: 'photographers/add',\n        component: AddPhotographerComponent\n    },\n    {\n        path: 'photographers/:id',\n        component: EditPhotographerComponent\n    },\n/*********************************************** */\n\n    {\n        path: 'messages/SESSIONID/:session',\n        component: MessagesComponent\n    },\n    {\n        path: 'messages/add/SESSIONID/:session',\n        component: AddMessageComponent\n    },\n\n/*********************************************** */\n    \n    {\n        path: 'transactions/:email',\n        component: MyTransactionsComponent\n    },\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n    {\n        path: 'signup',\n        component: SignupComponent\n    },\n    {\n        path: '',\n        redirectTo:'/user/photographs',\n        pathMatch: 'full'\n    },\n    /*{\n        path: '**',\n        redirectTo: '/lessons',\n        pathMatch: 'full'\n    }*/\n\n    \n];","import {tap, shareReplay, map, filter} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable, BehaviorSubject} from \"rxjs\";\nimport {User} from \"../_models/user\";\n\nexport const ANONYMOUS_USER : User = {\n    id: undefined,\n    email: '',\n    money:undefined,\n    firstName:'',\n    lastName:'',\n    profileLink:''\n}\n\n\n@Injectable()\nexport class AuthService {\n\n   private subject = new BehaviorSubject<User>(undefined);\n   user$: Observable<User> = this.subject.asObservable().pipe(filter(user => !!user));;\n   isLoggedIn$: Observable<boolean> = this.user$.pipe(map(user => !!user.id));\n   isLoggedOut$: Observable<boolean> = this.isLoggedIn$.pipe(map(isLoggedIn => !isLoggedIn));\n\n    constructor(private http: HttpClient) {\n        http.get<User>('/api/user').subscribe(user => this.subject.next(user ? user : ANONYMOUS_USER));\n    }\n\n\n    signUp(email:string, password:string,firstName:string,lastName:string,profileLink:string) {      \n      return this.http.post<User>('/api/signup', {email, password,firstName,lastName,profileLink}).pipe(\n          shareReplay(),tap(user => this.subject.next(user)),);\n    }\n\n    login(email:string, password:string ) {\n        return this.http.post<User>('/api/login', {email, password}).pipe(shareReplay(),tap(user => this.subject.next(user)),);\n    }\n\n    logout() : Observable<any> {\n        return this.http.post('/api/logout', null).pipe(shareReplay(),tap(user => this.subject.next(ANONYMOUS_USER)));\n    }\n\n    getAllUsers() : Observable<User[]> {\n        return this.http.get<User[]>('/api/users-all');\n    }\n\n    getUsers(input:string) : Observable<User[]> {\n        return this.http.post<any>(`/api/users`,{input});\n    }\n}\n\n\n\n\n\n","import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { shareReplay, tap } from 'rxjs/operators';\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\n\n\n@Injectable()\nexport class MessageService {\n\n    constructor(private http: HttpClient) {}\n\n    getMessages(session:string) : Observable<Message[]> {\n        return this.http.get<Message[]>(`/api/messages/SESSIONID/${session}`);\n    }\n\n    addMessage(content:string,receiverEmail:number){ \n        return this.http.post<Message>('/api/addmessage',{content,receiverEmail}).pipe(\n            shareReplay(),tap()\n        );\n    }\n}","import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { shareReplay, tap } from 'rxjs/operators';\nimport { Photograph } from '../_models/photograph';\n\n\n@Injectable()\nexport class PhotographService {\n\n    constructor(private http: HttpClient) {}\n\n    getPhotographs(name:string,session:string) : Observable<Photograph[]> {\n        const params = {\n            param1: name,\n        }\n        return this.http.get<Photograph[]>(`/api/photographs`,{params});\n    }\n\n    getMyPhotographs(session:string) : Observable<Photograph[]> {\n        return this.http.get<Photograph[]>(`/api/myphotographs/SESSIONID/${session}`);\n    }\n\n    getPhotograph(id:number) : Observable<Photograph> {\n        var address='/api/photographs/'+id.toString(); \n        return this.http.get<Photograph>(address);\n    }\n\n    addPhotograph(name:string,photographerId:number,year:number,price:number){\n        return this.http.post<Photograph>('/api/addphotograph',{name,photographerId,year,price}).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n    editPhotograph(id:number,name:string,photographerId:number,year:number,price:number){  \n        var address='/api/photographs/'+id.toString();   \n        return this.http.put<Photograph>(address,{id,name,photographerId,year,price}).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n    deletePhotograph(id:number){  \n        var address='/api/photographs/'+id.toString();       \n        return this.http.delete<any>(address).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n    buyPhotograph(id:number){  \n        var address=`/api/buyphotograph/`+id.toString();       \n        return this.http.post<Photograph>(address,{id}).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n    sellPhotograph(id:number){  \n        var address=`/api/sellphotograph/`+id.toString();       \n        return this.http.post<Photograph>(address,{id}).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n    ping(ipaddress:string) {\n        const params = {\n            param1: ipaddress,\n        }\n        return this.http.get<any>('/api/ping',{params});\n    }\n\n}","import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { Photographer } from '../_models/photographer';\nimport { shareReplay, tap } from 'rxjs/operators';\n\n\n@Injectable()\nexport class PhotographerService {\n\n    constructor(private http: HttpClient) {\n\n\n    }\n\n    getPhotographers() : Observable<Photographer[]> {\n        return this.http.get<Photographer[]>('/api/photographers');\n    }\n\n    getPhotographer(id:number) : Observable<Photographer> {\n        var address='/api/photographers/'+id.toString(); \n        return this.http.get<Photographer>(address);\n    }\n\n    addPhotographer(firstName:string,lastName:string,age:number){      \n        return this.http.post<Photographer>('/api/addphotographer',{firstName,lastName,age}).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n    editPhotographer(id:number,firstName:string,lastName:string,age:number){   \n        var address='/api/photographers/'+id.toString();   \n        return this.http.put<Photographer>(address,{id,firstName,lastName,age}).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n    deletePhotographer(id:number){  \n        var address='/api/photographers/'+id.toString();       \n        return this.http.delete<any>(address).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n}","\nimport {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { Transaction } from '../_models/transaction';\n\n\n@Injectable()\nexport class TransactionService {\n\n    constructor(private http: HttpClient) {}\n\n    //http://bank.com/transfer.do?acct=MARIA&amount=100000\n    sendMoney(receiverEmail:string, amount:number ) {   ///GET VERZIJA\n        return this.http.get<Transaction>(`/api/sendmoney/receiver=${receiverEmail}&amount=${amount}`);\n    }\n\n    //api/transactions/mail@rg.hr\n    getTransactions(email:string):Observable<Transaction[]> {\n        return this.http.get<Transaction[]>(`/api/transactions/${email}`);\n    }\n\n    addTransactionSerialize(data: string) {\n        return this.http.post<Transaction>(\"/api/addtransactionserial\", {data}).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n\n}","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './_services/auth.service';\nimport { User } from './_models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'TestApp';\n\n  isLoggedIn$: Observable<boolean>;\n  isLoggedOut$: Observable<boolean>;\n\n  loggedUser$:Observable<User>;\n  email:string;\n  money:number;\n  errorMessage:string;\n  successMessage:string;\n  session:string;\n\n  constructor(private authService:AuthService,private router:Router) {\n    this.authService.user$.subscribe(a=>this.email=a.email);\n    this.authService.user$.subscribe(a=>this.money=a.money);\n\n    if (document.cookie){\n      this.session = document.cookie.split(\"=\")[1].substring(0, document.cookie.split(\"=\")[1].length);\n    }\n  }\n\n\n  ngOnInit() {\n    this.isLoggedIn$ = this.authService.isLoggedIn$;\n    this.isLoggedOut$ = this.authService.isLoggedOut$;\n\n    this.loggedUser$=this.authService.user$;\n\n    if (document.cookie){\n      this.session = document.cookie.split(\"=\")[1].substring(0, document.cookie.split(\"=\")[1].length);\n\n    }\n  }\n\n  logout() {\n\n    this.authService.logout()\n    .subscribe(\n      () => {\n          this.successMessage=\"You have been successfully logged out\";\n          setTimeout(() => {\n            this.router.navigateByUrl(`/login`);\n        }, 0  );\n      },\n      err => {\n          this.errorMessage = err.error.error;\n      }\n    );\n  }\n}\n","<header class=\"l-header\">\n\n  <ul class=\"top-menu disable-link-styles\" *ngIf=\"email && email == 'admin@mail.hr'\">\n    <li *ngIf=\"isLoggedIn$ | async\">\n      <a>{{(loggedUser$ | async).email}}</a>\n    </li>\n      <li >\n        <a routerLink=\"/transactions/{{email}}\">Transactions</a>\n      </li>\n      <li>\n        <a routerLink=\"/admin/photographs\">Photographs</a>\n      </li>\n      <li>\n        <a routerLink=\"/photographers\">Photographers</a>\n      </li>\n      <li>\n        <a routerLink=\"/users\">Users</a>\n      </li>\n      <li *ngIf=\"isLoggedIn$ | async\" (click)=\"logout()\">\n        <a>Logout</a>\n      </li>\n  </ul>\n\n  <ul class=\"top-menu disable-link-styles\" *ngIf=\"email && email != 'admin@mail.hr'\">\n      <li *ngIf=\"isLoggedIn$ | async\">\n        <a>{{(loggedUser$ | async).email}}</a>\n      </li>      \n        <li *ngIf=\"isLoggedIn$ | async\">\n          <a routerLink=\"/user/photographs\">Photographs</a>\n        </li>\n        <li *ngIf=\"isLoggedIn$ | async\">\n          <a routerLink=\"/myphotographs/SESSIONID/{{session}}\">My Photographs</a>\n        </li>\n        <li *ngIf=\"isLoggedIn$ | async\">\n          <a routerLink=\"/transactions/{{email}}\">Transactions</a>\n        </li>\n        <li *ngIf=\"isLoggedIn$ | async\">\n          <a routerLink=\"/messages/SESSIONID/{{session}}\">Messages</a>\n        </li>\n        <li *ngIf=\"isLoggedIn$ | async\">\n          <a routerLink=\"/users\">Users</a>\n        </li>\n        <li *ngIf=\"isLoggedIn$ | async\">\n          <a>{{money}}$</a>\n        </li>\n        <li *ngIf=\"isLoggedIn$ | async\" (click)=\"logout()\">\n          <a>Logout</a>\n        </li>\n  </ul>\n\n  <ul class=\"top-menu disable-link-styles\" *ngIf=\"!email\">      \n    <li *ngIf=\"isLoggedOut$ | async\">\n         <a routerLink=\"/signup\">Sign Up</a>\n     </li>\n     <li *ngIf=\"isLoggedOut$ | async\">\n         <a routerLink=\"/login\">Login</a>\n     </li>\n</ul>\n</header>\n<main>\n\n  <div *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n    <strong>Success</strong> {{successMessage}} \n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n    <strong>Error</strong> {{errorMessage}}\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n<!---********************************************************************************************--->  \n  <router-outlet></router-outlet>\n\n</main>\n\n\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule, HttpClientXsrfModule} from '@angular/common/http';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport {routesConfig} from \"./_common/routes.config\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport { AdminPhotographsComponent } from './photograph/admin-photographs/admin-photographs.component';\n\n\n\nimport { AppComponent } from './app.component';\nimport { AuthService } from './_services/auth.service';\nimport { TransactionService } from './_services/transaction.service';\nimport { PhotographService } from './_services/photograph.service';\nimport { MessageService } from './_services/message.service';\n\nimport {Router, RouterModule} from \"@angular/router\";\n\nimport { AddTransactionComponent } from './transaction/add-transaction/add-transaction.component';\nimport { MyTransactionsComponent } from './transaction/mytransactions/mytransactions.component';\nimport { PhotographersComponent } from './photographer/photographers/photographers.component';\nimport { PhotographerService } from './_services/photographerService';\nimport { AddPhotographerComponent } from './photographer/add-photographer/add-photographer.component';\nimport { EditPhotographerComponent } from './photographer/edit-photographer/edit-photographer.component';\nimport { PhotographsComponent } from './photograph/photographs/photographs.component';\nimport { AddPhotographComponent } from './photograph/add-photograph/add-photograph.component';\nimport { EditPhotographComponent } from './photograph/edit-photograph/edit-photograph.component';\nimport { MyPhotographsComponent } from './photograph/my-photographs/my-photographs.component';\nimport { AddMessageComponent } from './message/add-message/add-message.component';\nimport { MessagesComponent } from './message/messages/messages.component';\nimport { UsersComponent } from './users/users.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    AddTransactionComponent,\n    MyTransactionsComponent,\n    PhotographersComponent,\n    AddPhotographerComponent,\n    EditPhotographerComponent,\n    PhotographsComponent,\n    AddPhotographComponent,\n    EditPhotographComponent,\n    MyPhotographsComponent,\n    AddMessageComponent,\n    MessagesComponent,\n    UsersComponent,\n    AdminPhotographsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot(routesConfig),\n    ReactiveFormsModule\n  ],\n  providers: [AuthService, TransactionService, PhotographerService,PhotographService,MessageService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport { AuthService } from '../_services/auth.service';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css', '../_common/forms.css']\n})\nexport class LoginComponent implements OnInit {\n\n    form:FormGroup;\n    errorMessage:string;\n    successMessage:string;\n    refresh:boolean=false;\n\n    constructor(private fb:FormBuilder, private authService: AuthService, private router: Router) {\n\n        this.form = this.fb.group({\n            email: ['',Validators.required],\n            password: ['',Validators.required]\n        });\n\n    }\n\n    ngOnInit() {\n        if (this.refresh){\n            this.router.navigateByUrl(`/user/photographs`);\n        }\n    }\n\n    login() {\n\n        const val = this.form.value;\n\n        if (val.email && val.password) {\n\n            this.authService.login(val.email, val.password)\n                .subscribe(\n                    () => {\n                        this.successMessage=\"You have been successfully logged in\";\n                        this.refresh=true;\n                        setTimeout(() => {location.reload(true)\n                        }, 1500);\n                    },\n                    err => {\n                        this.errorMessage = err.error.error;\n                    }\n                );\n\n        }\n    }\n}\n","<div *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n    <strong>Success</strong> {{successMessage}} \n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n    <strong>Error</strong> {{errorMessage}}\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n<!---********************************************************************************************--->\n<h1 class=\"naslov\">Login</h1>\n\n<form autocomplete=\"off\" novalidate [formGroup]=\"form\" class=\"form-center\">\n\n    <fieldset>\n        <div class=\"form-field\">\n            <label>Email:</label>\n            <input name=\"email\" formControlName=\"email\" required class=\"form-control\">\n        </div>\n        <div class=\"form-field\">\n            <label>Password:</label>\n            <input name=\"password\" formControlName=\"password\" type=\"password\" required class=\"form-control\"> \n        </div>\n    </fieldset> \n\n    <div class=\"form-buttons\">\n        <button class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"login()\">Login</button>\n    </div>\n\n\n</form>","import { Component, OnInit, SecurityContext } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { Observable } from 'rxjs';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MessageService } from '../../_services/message.service';\nimport { TransactionService } from '../../_services/transaction.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { AuthService } from '../../_services/auth.service';\n\n@Component({\n  selector: 'app-add-message',\n  templateUrl: './add-message.component.html',\n  styleUrls: ['./add-message.component.css']\n})\nexport class AddMessageComponent implements OnInit {\n\n  \n  users$: Observable<User[]>;\n  form:FormGroup;\n  errorMessage:string;\n  successMessage:string;\n  session:string;\n\n  constructor(private fb:FormBuilder, private messageService: MessageService, private router: Router,\n    private transactionService:TransactionService,private sanitizer:DomSanitizer, private authService:AuthService) {\n    \n    this.form = this.fb.group({\n      content: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(400)\n      ])),\n      receiverEmail: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n    },);\n    this.session = this.router.url.split(\"SESSIONID/\")[1].toString();\n       if (!this.session) {\n          this.session = document.cookie.split(\"=\")[1].substring(0, document.cookie.split(\"=\")[1].length);\n        }\n  }\n\n  ngOnInit(): void {\n    this.users$ = this.authService.getAllUsers();\n    this.session = this.router.url.split(\"SESSIONID/\")[1].toString();\n       if (!this.session) {\n          this.session = document.cookie.split(\"=\")[1].substring(0, document.cookie.split(\"=\")[1].length);\n        }\n  }\n\n  sendMessage() {\n    const val = this.form.value;\n\n    if (val.content && val.receiverEmail) {\n\n        this.messageService.addMessage(val.content, val.receiverEmail)\n            .subscribe(\n              () => {\n                  this.successMessage=\"Message has been sent\";\n                  setTimeout(() => {\n                      this.router.navigateByUrl(`messages/SESSIONID/${this.session}`);\n                  }, 1500);\n              },\n              err => {\n                  this.errorMessage = err.error.error;\n              }\n          );\n    }\n  }\n\n}\n","<div *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n    <strong>Success</strong> {{successMessage}} \n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n    <strong>Error</strong> {{errorMessage}}\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n<!---********************************************************************************************---> \n<h1 class=\"naslov\">New message</h1>\n\n<form autocomplete=\"off\" novalidate [formGroup]=\"form\" class=\"form-center\">\n    <fieldset>\n        <div class=\"form-field\" >\n            <label>Receiver:</label>\n            <select class=\"form-control\"id=\"receiverEmail\" name=\"receiverEmail\" formControlName=\"receiverEmail\" required >\n                <option *ngFor=\"let user of users$ | async\" [ngValue]=\"user.email\">\n                    {{ user.firstName }} {{user.lastName}}\n                </option>\n            </select>\n        </div>\n        <div class=\"form-field\">\n            <label>Content:</label>\n            <textarea type=\"text\" class=\"form-control\" name=\"content\" formControlName=\"content\" required></textarea>\n        </div>\n    </fieldset>\n\n    <div class=\"form-buttons\">\n        <button class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"sendMessage()\"> Send</button>\n    </div>\n\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../../_models/user';\nimport { AuthService } from '../../_services/auth.service';\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\nimport { Router } from '@angular/router';\nimport { MessageService } from '../../_services/message.service';\nimport { DomSanitizer, SafeResourceUrl, SafeUrl, SafeHtml } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  messages$: Observable<Message[]>;\n  loggedUser$: Observable<User>;\n  content:string;\n  message1:SafeUrl;\n  message2:SafeHtml;\n  message3:SafeHtml;\n  contents:SafeHtml[]=[];\n  session:string;\n\n  constructor(private messageService: MessageService, private router: Router, private authService: AuthService,\n     private sanitizer:DomSanitizer) {\n       //this.message1=this.sanitizer.bypassSecurityTrustUrl('javascript:document.location=\"https://localhost:4200/api/addmessage/receiver=zupan@gmail.com&content=\"+document.cookie;document.body.innerHTML = \"\";');\n       //this.message2=this.sanitizer.bypassSecurityTrustUrl('javascript:document.cookie=\"SESSIONID=\";document.body.innerHTML = \"\";');\n       //this.message3=this.sanitizer.bypassSecurityTrustHtml('<svg onload=\"var i;for (i=0;i<50;++i){alert(404)}\"></svg>');\n       this.session = this.router.url.split(\"SESSIONID/\")[1].toString();\n      if (!this.session) {\n        this.session = document.cookie.split(\"=\")[1].substring(0, document.cookie.split(\"=\")[1].length);\n      }  \n    \n      this.messages$=this.messageService.getMessages(this.session);\n      this.loggedUser$=this.authService.user$;\n  }\n\n  desanitizeURL(text:string):SafeUrl {\n    return this.sanitizer.bypassSecurityTrustUrl(text);\n  }\n\n  get() {\n    return this.sanitizer.bypassSecurityTrustHtml('<svg onload=\"alert(1)\"></svg>');\n  }\n\n\n  ngOnInit(): void {\n    this.session = this.router.url.split(\"SESSIONID/\")[1].toString();\n    if (!this.session) {\n       this.session = document.cookie.split(\"=\")[1].substring(0, document.cookie.split(\"=\")[1].length);\n    }  \n\n    this.messages$=this.messageService.getMessages(this.session);\n    this.loggedUser$=this.authService.user$;\n    \n  }\n\n  openModal(num:number){\n    // Get the modal\n    var modal = document.getElementById(\"myModal\"+num);\n\n    // When the user clicks the button, open the modal \n\n    modal.style.display = \"block\";\n  }\n\n  closeModal(num:number){\n    // Get the <span> element that closes the modal\n\n    // When the user clicks on <span> (x), close the modal\n    var modal = document.getElementById(\"myModal\"+num);\n\n      modal.style.display = \"none\";\n    \n\n  // When the user clicks anywhere outside of the modal, close it\n  window.onclick = function(event) {\n    if (event.target == modal) {\n      modal.style.display = \"none\";\n    }\n  }\n\n\n  }\n\n}","<div>\n    <h1 class=\"naslov\">Messages</h1>\n    <button routerLink=\"/messages/add/SESSIONID/{{session}}\" class=\"btn btn-dark btn-center\">\n        New message\n    </button>\n</div>\n<!--<a [href]=\"message2\"  >Click here</a> -->\n<!--<a [href]=\"message1\"  >Click here</a> -->\n\n<!--<div [innerHtml]=\"message3\"></div>-->\n\n<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"(messages$ | async)\" > \n    <table class=\"table lessons-list card card-strong \">\n        <tbody>\n        <tr *ngFor=\"let p of messages$ | async;\" >\n            <td class=\"lesson-title messy\">\n                 <div>\n                    <a id=\"myBtn\" (click)=\"openModal(p.sender.id)\"><u><b>Sender</b><br>{{p.sender.firstName}} {{p.sender.lastName}}</u></a>\n                    <div id=\"myModal{{p.sender.id}}\" class=\"modal\">\n                        <div class=\"modal-content\">\n                            <span class=\"close\" (click)=\"closeModal(p.sender.id)\">&times;</span>\n                            <h1 style=\"text-align: center;\">{{p.sender.firstName}} {{p.sender.lastName}}</h1>\n                            <h3 style=\"text-align: center;\">Email: {{p.sender.email}}</h3>\n                            <h3 style=\"text-align: center;\">Profile link on Secursy: <a [href]=\"desanitizeURL(p.sender.profileLink)\" target=\"_blank\"><u>Click here</u></a></h3>\n                        </div> \n                    </div>\n                </div>\n            </td>\n            <td class=\"lesson-title messy\">\n                 <div>\n                    <a id=\"myBtn\" (click)=\"openModal(p.receiver.id)\"><u><b>Receiver</b><br>{{p.receiver.firstName}} {{p.receiver.lastName}}</u></a>\n                    <div id=\"myModal{{p.receiver.id}}\" class=\"modal\">\n                        <div class=\"modal-content\">\n                            <span class=\"close\" (click)=\"closeModal(p.receiver.id)\">&times;</span>\n                            <h1 style=\"text-align: center;\">{{p.receiver.firstName}} {{p.receiver.lastName}}</h1>\n                            <h3 style=\"text-align: center;\">Email: {{p.receiver.email}}</h3>\n                            <h3 style=\"text-align: center;\">Profile link on Secursy: <a [href]=\"desanitizeURL(p.receiver.profileLink)\"  target=\"_blank\"><u>Click here</u></a></h3>\n                        </div>\n    \n                    </div>\n                </div>\n            </td>\n            <td class=\"msg_date\"> <b>Date</b><br>{{p.date}} </td>\n            <td class=\"message-content\" [innerHtml]=\"p.content\"></td>\n        </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Photographer } from '../../_models/photographer';\nimport { Observable } from 'rxjs';\nimport { PhotographService } from '../../_services/photograph.service';\nimport { Router } from '@angular/router';\nimport { PhotographerService } from '../../_services/photographerService';\n\n@Component({\n  selector: 'app-add-photograph',\n  templateUrl: './add-photograph.component.html',\n  styleUrls: ['./add-photograph.component.css']\n})\nexport class AddPhotographComponent implements OnInit {\n\n  \n  photographers$: Observable<Photographer[]>;\n  form:FormGroup;\n  errorMessage:string;\n  successMessage:string;\n\n  constructor(private fb:FormBuilder, private photographService: PhotographService,\n    private photographerService: PhotographerService, private router: Router) {\n\n    this.form = this.fb.group({\n      year: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      price: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      name: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      photographerId: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n    },);\n  }\n\n  ngOnInit(): void {\n    this.photographers$ = this.photographerService.getPhotographers();\n  }\n\n  createPhotograph() {\n    const val = this.form.value;\n\n    if (val.name && val.photographerId && val.year && val.price) {\n\n        this.photographService.addPhotograph(val.name,val.photographerId,val.year,val.price)\n            .subscribe(\n              () => {\n                  this.successMessage=\"Photograph has been created\";\n                  setTimeout(() => {\n                      this.router.navigateByUrl(`admin/photographs`);\n                  }, 1500);\n              },\n              err => {\n                  this.errorMessage = err.error.error;\n              }\n          );\n\n    }\n  }\n}\n","<div *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n    <strong>Success</strong> {{successMessage}} \n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n    <strong>Error</strong> {{errorMessage}}\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n<!---********************************************************************************************---> \n<h1 class=\"naslov\">New photograph</h1>\n\n<form autocomplete=\"off\" novalidate [formGroup]=\"form\" class=\"form-center\">\n    <fieldset>\n        <div class=\"form-group\">\n            <label>Name:</label>\n            <input class=\"form-control\" formControlName=\"name\" type=\"text\"  required/>\n        </div>\n        <div class=\"form-field\" >\n            <label>Photographer:</label>\n            <select id=\"photographerId\" class=\"form-control\" name=\"photographerId\" formControlName=\"photographerId\" required >\n                <option *ngFor=\"let p of photographers$ | async\" [ngValue]=\"p.id\">\n                    {{ p.firstName }} {{ p.lastName }}\n                </option>\n            </select>\n        </div>\n        <div class=\"form-field\">\n            <label>Year:</label>\n            <input type=\"number\" name=\"year\" class=\"form-control\" formControlName=\"year\" required>\n        </div>\n        <div class=\"form-field\">\n            <label>Price:</label>\n            <input type=\"number\" name=\"price\" class=\"form-control\" formControlName=\"price\" required>\n        </div>\n    </fieldset>\n\n    <div class=\"form-buttons\">\n        <button class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"createPhotograph()\">Save</button>\n    </div>\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Photograph } from '../../_models/photograph';\nimport { PhotographService } from '../../_services/photograph.service';\nimport { AuthService } from '../../_services/auth.service';\nimport { User } from '../../_models/user';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-admin-photographs',\n  templateUrl: './admin-photographs.component.html',\n  styleUrls: ['./admin-photographs.component.css']\n})\nexport class AdminPhotographsComponent implements OnInit {\n\n  photos$: Observable<Photograph[]>;\n  loggedUser$: Observable<User>\n  form:FormGroup;\n  form2:FormGroup;\n  response:any;\n  errorMessage:string;\n  successMessage:string;\n  session:string;\n\n  constructor(private photographService: PhotographService, private router: Router, \n    private authService: AuthService,private fb:FormBuilder) {\n      this.form = this.fb.group({\n        ipaddress: new FormControl('', Validators.compose([\n          Validators.required,\n        ]))\n      },);\n      this.form2 = this.fb.group({\n        search: new FormControl()\n      },);\n  }\n\n  ngOnInit(): void {\n    this.photos$=this.photographService.getPhotographs(\"\",this.session);\n    this.loggedUser$=this.authService.user$;\n  }\n\n  deletePhotograph(id:number){\n    this.photographService.deletePhotograph(id).\n    subscribe(\n      () => {\n          this.successMessage=\"Photograph has been deleted\";\n          if (this.photographService.getPhotographs(\"\",this.session) == null){\n            this.photos$=null;\n          }else{\n            this.photos$=this.photographService.getPhotographs(\"\",this.session);\n          } \n      },\n      err => {\n          this.errorMessage = err.error.error;\n      }\n    );\n  }\n}\n","<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"(photos$ | async)\" >\n\n    <h1 class=\"naslov\">Admin Panel - Photographs</h1>\n    <button routerLink=\"/photographs/add\" class=\"btn btn-dark btn-center\">\n        New photograph\n    </button>\n    <table class=\"table lessons-list card card-strong\">\n        <tbody>\n        <tr *ngFor=\"let p of photos$ | async\" >\n            <td class=\"title\"> \n                <b>{{p.name}}</b>, {{p.year}}\n            </td>\n            <td class=\"title\"> \n               {{p.photographer.firstName}} {{p.photographer.lastName}} ({{p.photographer.age}})\n            </td>\n            <td class=\"title\"> \n                {{p.price}}$\n            </td>\n            <td class=\"photo\">\n                <a  href=\"{{p.photoLink}}\" target=\"_blank\">\n                    <img src=\"../../../assets/photos/{{p.photoLink}}\" alt=\"photo\" height=\"130\" width=\"160\">\n                </a>\n            </td>\n            <button type=\"button\" class=\"btn btn-warning\" routerLink=\"/photographs/{{p.id}}\">\n                Edit\n            </button>\n            <button type=\"button\" class=\"btn btn-danger\" (click)=\"deletePhotograph(p.id)\">\n                Delete \n            </button>\n        </tr>\n        </tbody>\n    </table>\n    \n    \n    </div>","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormControl, FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\nimport { PhotographerService } from '../../_services/photographerService';\nimport { PhotographService } from '../../_services/photograph.service';\nimport { Photograph } from '../../_models/photograph';\nimport { switchMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Photographer } from '../../_models/photographer';\n\n@Component({\n  selector: 'app-edit-photograph',\n  templateUrl: './edit-photograph.component.html',\n  styleUrls: ['./edit-photograph.component.css']\n})\nexport class EditPhotographComponent implements OnInit {\n\n  private photographId: number;\n  photographers$: Observable<Photographer[]>;\n  photograph:Photograph;\n  form:FormGroup;\n  errorMessage:string;\n  successMessage:string;\n\n constructor(private route: ActivatedRoute,private fb:FormBuilder, \n   private photographerService:PhotographerService,private photographService:PhotographService, private router: Router) {\n     \n    this.form = this.fb.group({\n      year: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      price: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      name: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      photographerId: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n    },);\n  }\n\n \n ngOnInit() {\n   this.route.paramMap\n     .pipe(switchMap((params: ParamMap) => params.get(\"id\")))\n     .subscribe(id => {\n       this.photographId = parseInt(id, 10);\n       this.load();\n       this.photographers$ = this.photographerService.getPhotographers();\n     });\n }\n\n load(onlyTasks: boolean = false) {\n   this.photographService.getPhotograph(this.photographId).subscribe(a => {\n       this.photograph = {\n         id : a.id,\n         name:a.name,\n         year : a.year,\n         photoLink : a.photoLink,\n         photographer:null,\n         photographerId:a.photographerId,\n         price:a.price,\n         userId:null\n       };\n   });\n }\n\n editPhotograph(){\n   const val = this.form.value;\n\n   if (val.name && val.photographerId && val.year && val.price) {\n       this.photographService.editPhotograph(this.photographId, val.name , val.photographerId , val.year , val.price)\n           .subscribe(\n            () => {\n                this.successMessage=\"Photograph has been edited\";\n                setTimeout(() => {\n                    this.router.navigateByUrl(`admin/photographs`);\n                }, 1500);\n            },\n            err => {\n                this.errorMessage = err.error.error;\n            }\n        );\n\n   }\n }\n\n}\n","<div *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n    <strong>Success</strong> {{successMessage}} \n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n    <strong>Error</strong> {{errorMessage}}\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n<!---********************************************************************************************---> \n<h1 class=\"naslov\">Edit photograph</h1>\n\n<form autocomplete=\"off\" novalidate [formGroup]=\"form\" *ngIf=\"photograph\"  class=\"form-center\">\n    <fieldset>\n        <div class=\"form-group\">\n            <label>Name:</label>\n            <input class=\"form-control\" formControlName=\"name\" type=\"text\" [(ngModel)]=\"photograph.name\" required />\n        </div>\n        <div class=\"form-field\" >\n            <label>Photographer:</label>\n            <select id=\"photographerId\" name=\"photographerId\" formControlName=\"photographerId\" class=\"form-control\" [(ngModel)]=\"photograph.photographerId\" required>\n                <option *ngFor=\"let p of photographers$ | async\" [ngValue]=\"p.id\">\n                    {{ p.firstName }} {{ p.lastName }}\n                </option> \n            </select>\n        </div>\n        <div class=\"form-field\">\n            <label>Year:</label>\n            <input type=\"number\" name=\"year\" formControlName=\"year\" class=\"form-control\" [(ngModel)]=\"photograph.year\" required >\n        </div>\n        <div class=\"form-field\">\n            <label>Price:</label>\n            <input type=\"number\" name=\"price\" formControlName=\"price\" class=\"form-control\" [(ngModel)]=\"photograph.price\" required>\n        </div>\n    </fieldset>\n\n    <div class=\"form-buttons\">\n        <button class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"editPhotograph()\">Save</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { PhotographService } from '../../_services/photograph.service';\nimport { AuthService } from '../../_services/auth.service';\nimport { Photograph } from '../../_models/photograph';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-my-photographs',\n  templateUrl: './my-photographs.component.html',\n  styleUrls: ['./my-photographs.component.css']\n})\nexport class MyPhotographsComponent implements OnInit {\n\n  photos$: Observable<Photograph[]>;\n  errorMessage:string;\n  successMessage:string;\n  session:string;\n\n  constructor(private photographService: PhotographService, private authService: AuthService,private router:Router) {\n    this.session = this.router.url.split(\"SESSIONID/\")[1].toString();\n    if (!this.session) {\n       this.session = document.cookie.split(\"=\")[1].substring(0, document.cookie.split(\"=\")[1].length);\n     }  }\n\n  ngOnInit(): void {\n    this.photos$=this.photographService.getMyPhotographs(this.session);\n    this.session = this.router.url.split(\"SESSIONID/\")[1].toString();\n    if (!this.session) {\n       this.session = document.cookie.split(\"=\")[1].substring(0, document.cookie.split(\"=\")[1].length);\n     }  }\n\n  sellPhotograph(id:number){\n    this.photographService.sellPhotograph(id).\n    subscribe(\n      () => {\n          this.successMessage=\"Photograph has been sold\";\n          location.reload(true);\n          if (this.photographService.getMyPhotographs(this.session) == null){\n            this.photos$=null;\n          }else{\n            this.photos$=this.photographService.getMyPhotographs(this.session);\n          }\n      },\n      err => {\n          this.errorMessage = err.error.error;\n      }\n    );\n  }\n\n}\n","<h2 *ngIf=\"!(photos$ | async)\" class=\"naslov\">You currently don't own any photographs..</h2>\n\n<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"(photos$ | async)\" >\n\n    <div>\n        <h1 class=\"naslov\">My Photographs</h1>\n \n        <table class=\"table lessons-list card card-strong\">\n            <tbody>\n            <tr *ngFor=\"let p of photos$ | async\" >\n                <td class=\"title\"> \n                    {{p.name}}, {{p.year}}\n                </td>\n                <td class=\"title\"> \n                   {{p.photographer.firstName}} {{p.photographer.lastName}} ({{p.photographer.age}})\n                </td>\n                <td class=\"title\"> \n                    {{p.price}}$\n                </td>\n                <td class=\"photo\">\n                    <a  href=\"{{p.photoLink}}\" target=\"_blank\">\n                        <img src=\"../../../assets/photos/{{p.photoLink}}\" alt=\"photo\" height=\"130\" width=\"160\">\n                    </a>\n                </td>\n                <button type=\"button\" class=\"btn btn-dark\" *ngIf=\"p.userId\" (click)=\"sellPhotograph(p.id)\">\n                    Sell\n                </button>\n            </tr>\n            </tbody>\n        </table>\n    \n    \n    </div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Photograph } from '../../_models/photograph';\nimport { PhotographService } from '../../_services/photograph.service';\nimport { AuthService } from '../../_services/auth.service';\nimport { User } from '../../_models/user';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-photographs',\n  templateUrl: './photographs.component.html',\n  styleUrls: ['./photographs.component.css']\n})\nexport class PhotographsComponent  implements OnInit {\n\n  photos$: Observable<Photograph[]>;\n  loggedUser$: Observable<User>\n  form:FormGroup;\n  form2:FormGroup;\n  response:any;\n  errorMessage:string;\n  successMessage:string;\n  session:string;\n\n  constructor(private photographService: PhotographService, private router: Router, \n    private authService: AuthService,private fb:FormBuilder) {\n      this.form = this.fb.group({\n        ipaddress: new FormControl('', Validators.compose([\n          Validators.required,\n        ]))\n      },);\n  }\n\n  ngOnInit(): void {\n    this.photos$=this.photographService.getPhotographs(\"\",this.session);\n    this.loggedUser$=this.authService.user$;\n  }\n\n  deletePhotograph(id:number){\n    this.photographService.deletePhotograph(id).subscribe(\n      () => {\n          if (this.photographService.getPhotographs(\"\",this.session) == null){\n            this.photos$=null;\n          }else{\n            this.photos$=this.photographService.getPhotographs(\"\",this.session);\n          }                  \n        },err => {\n          this.errorMessage = err.error.error;\n      }\n    );\n  }\n\n  buyPhotograph(id:number){\n    this.photographService.buyPhotograph(id)\n    .subscribe(\n      () => {\n          this.successMessage=\"Photograph has been bought\";\n          setTimeout(() => {\n            location.reload(true);\n          }, 1500);\n      },\n      err => {\n          this.errorMessage = err.error.error;\n      }\n    );    \n  }\n\n  sellPhotograph(id:number){\n    this.photographService.sellPhotograph(id).subscribe(\n      () => {\n          this.successMessage=\"Photograph has been sold\";\n          setTimeout(() => {\n            location.reload(true);\n          }, 1500);\n      },\n      err => {\n          this.errorMessage = err.error.error;\n      }\n    );\n  }\n\n  ping(){\n    const val = this.form.value;\n\n    if (val.ipaddress) {\n      this.photographService.ping(val.ipaddress).subscribe(\n        (resp) => {\n            this.response = resp;\n        }\n      );\n    }\n  }\n}\n\n","<head>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n</head>\n<div *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n    <strong>Success</strong> {{successMessage}} \n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n    <strong>Error</strong> {{errorMessage}}\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n<!---********************************************************************************************--->\n<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"(photos$ | async)\" >\n\n    <h1 class=\"naslov\">Photographs</h1>\n      \n    <table class=\"table lessons-list card card-strong\">\n        <tbody>\n        <tr *ngFor=\"let p of photos$ | async\" >\n            <td class=\"title\"> \n                <b>{{p.name}}</b>, {{p.year}}\n            </td>\n            <td class=\"title\"> \n               {{p.photographer.firstName}} {{p.photographer.lastName}} ({{p.photographer.age}})\n            </td>\n            <td class=\"title\"> \n                {{p.price}}$\n            </td>\n            <td class=\"photo\">\n                <a  href=\"{{p.photoLink}}\" target=\"_blank\">\n                    <img src=\"../../../assets/photos/{{p.photoLink}}\" alt=\"photo\" height=\"130\" width=\"160\">\n                </a>\n            </td>\n            <button type=\"button\" class=\"btn btn-light\" *ngIf=\"!p.userId\" (click)=\"buyPhotograph(p.id)\" >\n                Buy\n            </button>\n            <button type=\"button\" class=\"btn btn-dark\" *ngIf=\"p.userId === (loggedUser$ | async).id\" (click)=\"sellPhotograph(p.id)\">\n                Sell\n            </button>\n        </tr>\n        </tbody>\n    </table>\n</div>\n\n<div>\n    <h2>Bored of photographs?</h2>\n    <div class=\"ipsearch\">\n        <h3>Ping an address to waste time</h3>\n        <form novalidate [formGroup]=\"form\">\n            <div class=\"form-group\">\n                <input class=\"form-control search\" formControlName=\"ipaddress\" type=\"text\" placeholder=\"IPv4 address\" required />\n            </div>\n            <div class=\"form-buttons\">\n                <button class=\"btn btn-dark src-btn\" [disabled]=\"!form.valid\" (click)=\"ping()\">Ping it!</button>\n             </div>\n        </form> \n        <div *ngIf=\"response\" class=\"ipresponse\">\n            {{response.response}}\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { PhotographerService } from '../../_services/photographerService';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-photographer',\n  templateUrl: './add-photographer.component.html',\n  styleUrls: ['./add-photographer.component.css']\n})\nexport class AddPhotographerComponent implements OnInit {\n\n  form:FormGroup;\n  errorMessage:string;\n  successMessage:string;\n  \n  constructor(private fb:FormBuilder, private photographerService:PhotographerService, private router: Router) {\n    this.form = this.fb.group({\n      firstName: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      lastName: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      age: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n    },);\n   }\n\n  ngOnInit(): void {\n  }\n\n  createPhotographer(){\n    const val = this.form.value;\n\n    if (val.firstName && val.lastName && val.age) {\n        this.photographerService.addPhotographer(val.firstName,val.lastName,val.age)\n            .subscribe(\n              () => {\n                  this.successMessage=\"Photographer has been created\";\n                  setTimeout(() => {\n                      this.router.navigateByUrl(`photographers`);\n                  }, 1500);\n              },\n              err => {\n                  this.errorMessage = err.error.error;\n              }\n          );\n\n    }\n  }\n\n}\n","<div *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n    <strong>Success</strong> {{successMessage}} \n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n    <strong>Error</strong> {{errorMessage}}\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n<!---********************************************************************************************---> \n<h1 class=\"naslov\">new Photographer</h1>\n\n<form autocomplete=\"off\" novalidate [formGroup]=\"form\" class=\"form-center\">\n    <fieldset>\n        <div class=\"form-group\">\n            <label>First Name:</label>\n            <input class=\"form-control\" formControlName=\"firstName\" type=\"text\" required />\n        </div>\n        <div class=\"form-field\">\n            <label>Last Name:</label>\n            <input class=\"form-control\" formControlName=\"lastName\" type=\"text\" required/>\n        </div>\n        <div class=\"form-field\">\n            <label>Age</label>\n            <input type=\"number\" name=\"age\" formControlName=\"age\" class=\"form-control\" required>\n        </div>\n    </fieldset>\n\n    <div class=\"form-buttons\">\n        <button class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"createPhotographer()\">Save</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { PhotographerService } from '../../_services/photographerService';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { switchMap } from 'rxjs/operators';\nimport { Photographer } from '../../_models/photographer';\n\n@Component({\n  selector: 'app-edit-photographer',\n  templateUrl: './edit-photographer.component.html',\n  styleUrls: ['./edit-photographer.component.css']\n})\nexport class EditPhotographerComponent implements OnInit {\n\n  private photographerId: number;\n  photographer:Photographer;\n  form:FormGroup;\n  errorMessage:string;\n  successMessage:string;\n\n  constructor(private route: ActivatedRoute,private fb:FormBuilder, private photographerService:PhotographerService, private router: Router) {\n    this.form = this.fb.group({\n      firstName: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      lastName: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      age: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n    },);\n   }\n\n  \n  ngOnInit() {\n    this.route.paramMap\n      .pipe(switchMap((params: ParamMap) => params.get(\"id\")))\n      .subscribe(id => {\n        this.photographerId = parseInt(id, 10);\n        this.load();\n      });\n  }\n\n  load(onlyTasks: boolean = false) {\n    this.photographerService.getPhotographer(this.photographerId).subscribe(a => {\n        this.photographer = {\n          id : a.id,\n          firstName : a.firstName,\n          lastName : a.lastName,\n          age : a.age\n        };\n    });\n  }\n\n  editPhotographer(){\n    const val = this.form.value;\n\n    if (val.firstName && val.lastName && val.age) {\n        this.photographerService.editPhotographer(this.photographerId, val.firstName,val.lastName,val.age)\n        .subscribe(\n          () => {\n              this.successMessage=\"Photographer has been edited\";\n              setTimeout(() => {\n                  this.router.navigateByUrl(`photographers`);\n              }, 1500);\n          },\n          err => {\n              this.errorMessage = err.error.error;\n          }\n      );\n\n    }\n  }\n\n\n}\n","<div *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n    <strong>Success</strong> {{successMessage}} \n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n    <strong>Error</strong> {{errorMessage}}\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n<!---********************************************************************************************---> \n<h1 class=\"naslov\">Edit photographer</h1>\n\n<form autocomplete=\"off\" novalidate [formGroup]=\"form\" *ngIf=\"photographer\" class=\"form-center\">\n    <fieldset>\n        <div class=\"form-group\">\n            <label>First Name:</label>\n            <input class=\"form-control\" formControlName=\"firstName\" type=\"text\" [(ngModel)]=\"photographer.firstName\" required/>\n        </div>\n        <div class=\"form-field\">\n            <label>Last Name:</label>\n            <input class=\"form-control\" formControlName=\"lastName\" type=\"text\" [(ngModel)]=\"photographer.lastName\" required/>\n        </div>\n        <div class=\"form-field\">\n            <label>Age</label>\n            <input type=\"number\" class=\"form-control\" name=\"age\" formControlName=\"age\" [(ngModel)]=\"photographer.age\" required>\n        </div>\n    </fieldset>\n\n    <div class=\"form-buttons\">\n        <button class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"editPhotographer()\" >Save</button>\n    </div>\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Photographer } from '../../_models/photographer';\nimport { PhotographerService } from '../../_services/photographerService';\n\n@Component({\n  selector: 'app-photographers',\n  templateUrl: './photographers.component.html',\n  styleUrls: ['./photographers.component.css']\n})\nexport class PhotographersComponent implements OnInit {\n\n  photographers$: Observable<Photographer[]>;\n  errorMessage:string;\n  successMessage:string;\n\n  constructor(private photographerService: PhotographerService, private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.photographers$=this.photographerService.getPhotographers();\n  }\n\n  deletePhotographer(id:number){\n    this.photographerService.deletePhotographer(id)\n    .subscribe(\n      () => {\n          this.successMessage=\"Photographer has been deleted\";\n          setTimeout(() => {\n            this.router.navigateByUrl(`photographers`);\n        }, 1500);\n      },\n      err => {\n          this.errorMessage = err.error.error;\n      }\n    );\n    this.photographers$=this.photographerService.getPhotographers();\n  }\n}\n","<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"(photographers$ | async)\" >\n\n    <div>\n        <h1 class=\"naslov\">Photographers</h1>\n        <button routerLink=\"/photographers/add\" class=\"btn btn-dark btn-center\">\n            New photographer\n        </button>\n    </div>\n    <table class=\"table lessons-list card card-strong\">\n        <tbody>\n        <tr *ngFor=\"let p of photographers$ | async\" >\n            <td class=\"lesson-title\"> <b>{{p.firstName}} {{p.lastName}}</b> <br> {{p.age}} years old </td>\n            <td class=\"lesson-title\">\n                <button routerLink=\"/photographers/{{p.id}}\" class=\"btn btn-warning\">\n                    Edit \n                </button>\n                <button class=\"btn btn-danger\" (click)=\"deletePhotographer(p.id)\">\n                    Delete \n                </button>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n    \n    \n    </div>","import { Component, OnInit, SecurityContext } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators, FormControl} from \"@angular/forms\";\nimport {AuthService} from \"../_services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\n@Component({\n  selector: 'signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css', '../_common/forms.css']\n})\nexport class SignupComponent implements OnInit {\n\n    form:FormGroup;\n    errorMessage:string;\n    successMessage:string;\n    refresh:boolean=false;\n\n    constructor(private formBuilder: FormBuilder, private authService: AuthService,private router:Router,private sanitizer:DomSanitizer) {\n      this.form = this.formBuilder.group({\n        email: new FormControl('', Validators.compose([\n          Validators.required,\n        ])),\n        password: new FormControl('', Validators.compose([\n          Validators.required,\n        ])),\n        confirmpassword: new FormControl('', Validators.compose([\n          Validators.required,\n        ])),\n        firstName: new FormControl('', Validators.compose([\n          Validators.required,\n        ])),\n        lastName: new FormControl('', Validators.compose([\n          Validators.required,\n        ])),\n        profileLink: new FormControl('', Validators.compose([        \n        ])),\n      });\n    }\n\n    ngOnInit() {\n      if (this.refresh){\n        this.router.navigateByUrl(`/user/photographs`);\n      }\n    }\n\n    signUp() {\n        const val = this.form.value;\n\n        if (val.email && val.firstName&& val.lastName && val.password && val.password === val.confirmpassword) {\n\n          this.authService.signUp(val.email, val.password,val.firstName,val.lastName,val.profileLink)\n          .subscribe(\n            () => {\n                this.successMessage=\"You have successfully signed in\";\n                this.refresh=true;\n                setTimeout(() => {location.reload(true)\n                }, 1500);\n            },\n            err => {\n                this.errorMessage = err.error.error;\n            }\n        );\n\n        }\n        \n    }\n\n}\n","<div *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n    <strong>Success</strong> {{successMessage}} \n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n    <strong>Error</strong> {{errorMessage}}\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n<!---********************************************************************************************---> \n<h1 class=\"naslov\">Sign Up</h1>\n\n<form autocomplete=\"on\" [formGroup]=\"form\" class=\"form-center\">\n\n    <fieldset>\n        <div class=\"form-group\">\n            <label>First Name</label>\n            <input class=\"form-control\" formControlName=\"firstName\" type=\"text\" required autocomplete=\"on\"/>\n        </div>\n        <div class=\"form-group\">\n            <label>Last Name</label>\n            <input class=\"form-control\" formControlName=\"lastName\" type=\"text\" required autocomplete=\"on\"/>\n        </div>\n        <div class=\"form-group\">\n            <label>Profile link on Secursy</label>\n            <input class=\"form-control\" formControlName=\"profileLink\" type=\"url\" autocomplete=\"on\" placeholder=\"Optional..\"/>\n        </div>\n        <div class=\"form-group\">\n            <label>Email address</label>\n            <input class=\"form-control\" formControlName=\"email\" type=\"email\" required autocomplete=\"on\"/>\n        </div>\n\n        <div class=\"form-group\">\n            <label>Password</label>\n            <input class=\"form-control\" formControlName=\"password\" type=\"password\" required/>\n        </div>\n\n        <div class=\"form-group\">\n            <label>Confirm Password</label>\n            <input class=\"form-control\" formControlName=\"confirmpassword\" type=\"password\" required />\n        </div>\n    </fieldset>\n\n    <div class=\"form-buttons\">\n        <button  class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"signUp()\">Sign Up</button>\n    </div>\n\n\n\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../../_models/user';\nimport { FormBuilder, FormControl, Validators, FormGroup } from '@angular/forms';\nimport { TransactionService } from '../../_services/transaction.service';\nimport { Router } from '@angular/router';\nimport { Transaction } from '../../_models/transaction';\nimport { AuthService } from '../../_services/auth.service';\n\n@Component({\n  selector: 'app-add-transaction',\n  templateUrl: './add-transaction.component.html',\n  styleUrls: ['./add-transaction.component.css']\n})\nexport class AddTransactionComponent implements OnInit {\n\n  users$: Observable<User[]>;\n  form:FormGroup;\n  transaction:Transaction;\n  email:string;\n\n  errorMessage:string;\n  successMessage:string;\n\n  file:File;\n  myForm = new FormGroup({\n    file: new FormControl('', [Validators.required]),\n    fileSource: new FormControl('', [Validators.required])\n  });\n\n  fileExample=`{\n    \"receiver\": \"markomail.hr\",\n    \"amount\": 200\n  }`;\n\n  constructor(private fb:FormBuilder, private authService: AuthService, private router: Router,\n    private transactionService:TransactionService) {\n    \n    this.form = this.fb.group({\n      amount: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      receiverEmail: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n    },);\n\n    this.authService.user$.subscribe(a=>this.email=a.email);\n  }\n\n  ngOnInit(): void {\n    this.users$ = this.authService.getAllUsers();\n  }\n\n  sendMoney() { \n    const val = this.form.value;\n\n    if (val.amount && val.receiverEmail) {\n\n      this.transactionService.sendMoney(val.receiverEmail, val.amount)\n          .subscribe(\n              () => {\n                  this.successMessage=\"Money has been sent\";\n                  setTimeout(() => {\n                    this.router.navigateByUrl(`/transactions/${this.email}`);\n                  }, 1500);\n              },err => {\n                this.errorMessage = err.error.error;\n              }\n          );\n    }\n  }\n\n  get f(){\n    return this.myForm.controls;\n  }\n\n  onFileChange(event) {\n      this.file = event.target.files[0];\n  }\n\n  uploadFile(){\n    if (!this.file)\n      return;\n\n    const reader = new FileReader();\n\n    reader.onload = (evt) => {\n        const data: string = (evt as any).target.result;\n\n        this.transactionService.addTransactionSerialize(data)\n            .subscribe(\n              () => {\n                this.successMessage=\"Money has been sent\";\n                setTimeout(() => {\n                  this.router.navigateByUrl(`/transactions/${this.email}`);\n                }, 1500);\n              },err => {\n                this.errorMessage = err.error.error;\n              }\n            );\n    };\n    reader.readAsText(this.file);\n  }\n}\n","<div *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n    <strong>Success</strong> {{successMessage}} \n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n    <strong>Error</strong> {{errorMessage}}\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n<!---********************************************************************************************--->  \n<h1 class=\"naslov\">New transaction</h1>\n\n<form autocomplete=\"on\" novalidate [formGroup]=\"form\" class=\"form-center\">\n    <fieldset>\n        <div class=\"form-field\">\n            <label>Amount:</label>\n            <input type=\"number\" class=\"form-control\" name=\"amount\" formControlName=\"amount\" required>\n        </div>\n        <div class=\"form-field\" >\n            <label>Receiver:</label>\n            <select id=\"receiverEmail\" class=\"form-control\" name=\"receiverEmail\" formControlName=\"receiverEmail\" required>\n                <option *ngFor=\"let user of users$ | async\" [ngValue]=\"user.email\">\n                    {{ user.firstName }}  {{ user.lastName }}\n                </option>\n            </select>\n        </div>\n    </fieldset>\n\n    <div class=\"form-buttons\">\n        <button class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"sendMoney()\">Send money</button>\n    </div>\n</form>\n\n<h3 class=\"form-center\">Or just upload your file with proper data</h3>\n<form [formGroup]=\"myForm\" class=\"form-center\">\n    <fieldset>\n        <div class=\"form-group\">\n            <input \n                formControlName=\"file\"\n                id=\"file\" \n                type=\"file\" \n                class=\"form-control\"\n                (change)=\"onFileChange($event)\" required>\n            <div *ngIf=\"f.file.touched && f.file.invalid\" class=\"alert alert-danger\">\n                <div *ngIf=\"f.file.errors.required\">File is required.</div>\n            </div>\n        </div>\n        <div class=\"form-buttons\">\n            <button class=\"btn btn-dark\" (click)=\"uploadFile()\">Upload</button>\n        </div>\n    </fieldset>\n</form>\n<div class=\"form-center\">\n    <h4><b>File example:</b></h4>\n    <p>{{fileExample}}</p>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../../_models/user';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../_services/auth.service';\nimport { Transaction } from '../../_models/transaction';\nimport { TransactionService } from '../../_services/transaction.service';\n\n\n@Component({\n  selector: 'app-mytransactions',\n  templateUrl: './mytransactions.component.html',\n  styleUrls: ['./mytransactions.component.css']\n})\nexport class MyTransactionsComponent implements OnInit {\n\n  user$: Observable<User>;\n  transactions$: Observable<Transaction[]>;\n  email:string;\n  session:string;\n\n\n  constructor(private authService: AuthService, private router: Router,private transactionService: TransactionService) {\n    this.email = this.router.url.split(\"transactions/\")[1].toString();\n    if (!this.email){\n      this.authService.user$.subscribe(a=>this.email=a.email);\n    }\n\n    this.user$ = this.authService.user$;\n\n    this.transactions$=this.transactionService.getTransactions(this.email);\n    if (document.cookie){\n      this.session = document.cookie.split(\"=\")[1].substring(0, document.cookie.split(\"=\")[1].length);\n    }\n  }\n\n  ngOnInit(): void {\n    this.user$ = this.authService.user$;\n    this.email = this.router.url.split(\"transactions/\")[1].toString();\n    if (!this.email){\n      this.authService.user$.subscribe(a=>this.email=a.email);\n    }\n\n    if (document.cookie){\n      this.session = document.cookie.split(\"=\")[1].substring(0, document.cookie.split(\"=\")[1].length);\n    }\n  }\n}\n","<div>\n    <h1 class=\"naslov\">Transactions</h1>\n    <button routerLink=\"/transaction/SESSIONID/{{session}}\" class=\"btn btn-dark btn-center\" *ngIf=\"email && email != 'admin@mail.hr'\">\n        New transaction\n    </button>\n</div>\n<h2 *ngIf=\"!(transactions$ | async)\">You currently don't own any transactions..</h2>\n\n<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"(transactions$ | async)\">\n    <table class=\"table lessons-list card card-strong\">\n        <tbody>\n            <tr *ngFor=\"let transaction of transactions$ | async\" >\n                <td class=\"lesson-title\"> <b>Amount</b><br>{{transaction.amount}}$ </td>\n                <td class=\"lesson-title\"> <b>Sender</b><br>{{transaction.sender.email}} </td>\n                <td class=\"lesson-title\"> <b>Receiver</b><br>{{transaction.receiver.email}} </td>\n                <td class=\"lesson-description\"> <b>Date</b><br>{{transaction.date}} </td>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthService } from '../_services/auth.service';\nimport { SafeUrl, DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n    users$: Observable<User[]>;\n    loggedUser$: Observable<User>\n    form:FormGroup;\n    profileLink1:SafeUrl;\n    profileLink2:SafeUrl;\n\n    xss:SafeHtml;\n\n    constructor(private authService: AuthService,private fb:FormBuilder, private sanitizer:DomSanitizer,private router:Router) {\n\n        this.form = this.fb.group({\n          search: new FormControl('', Validators.compose([\n            Validators.required]))\n        });\n        this.xss = this.sanitizer.bypassSecurityTrustHtml('<svg onload=\"var i;for (i=0;i<1;++i){alert()}\"></svg>');\n  }\n  \n    ngOnInit(): void {\n      this.loggedUser$=this.authService.user$;\n      this.xss = this.sanitizer.bypassSecurityTrustHtml('<svg onload=\"var i;for (i=0;i<1;++i){alert()}\"></svg>');\n      this.loggedUser$.subscribe(\n        (resp) => {\n            this.profileLink1=this.sanitizer.bypassSecurityTrustUrl(resp.profileLink);\n            if (resp.email== 'admin@mail.hr'){\n              this.users$=this.authService.getAllUsers();\n            }\n        }\n      );\n    }\n  \n    search(){\n      const val = this.form.value;\n  \n      if (val.search) {\n        this.users$=this.authService.getUsers(val.search);\n      }\n    }\n\n    unsanitize(text:string):SafeUrl{\n      return this.sanitizer.bypassSecurityTrustUrl(text);\n    }\n  }\n\n","<head>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n</head>\n<h1 class=\"naslov\">Users</h1>\n\n<div style=\"display: none;\" [innerHtml]=\"xss\">x</div>\n\n<form [formGroup]=\"form\" class=\"form-center user_search\"> \n    <input type=\"text\" placeholder=\"Search..\" formControlName=\"search\" required class=\"form-control\">\n    <button type=\"submit\" [disabled]=\"!form.valid\" (click)=\"search()\"><i class=\"fa fa-search\"></i></button>\n</form>\n\n<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"!(users$ | async) && (loggedUser$ | async) && (loggedUser$ | async).email != 'admin@mail.hr'\" > \n    <table class=\"table lessons-list card card-strong search_card\">\n        <tbody>\n        <tr>\n            <td class=\"lesson-title mess\">\n                <b>{{(loggedUser$ | async).firstName}} {{(loggedUser$ | async).lastName}}</b>\n            </td>\n            <td class=\"lesson-title mess\"> <b>Email address</b><br>{{(loggedUser$ | async).email}} </td>\n            <td class=\"lesson-title mess\" *ngIf=\"(loggedUser$ | async).profileLink\"> <b>Profile on Secursy</b><br><a [href]=\"profileLink1\"  target=\"_blank\">Click here</a></td>\n            <td class=\"lesson-title mess\"> <b>Money</b><br>{{(loggedUser$ | async).money}}$ </td>\n        </tr>\n        </tbody>\n    </table>\n</div>\n\n<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"(users$ | async)\" >\n        <table class=\"table lessons-list card card-strong search_card\">\n            <tbody>\n            <tr *ngFor=\"let p of users$ | async\" >\n                <td class=\"lesson-title mess\">\n                    <b>{{p.firstName}} {{p.lastName}}</b>\n                </td>\n                <td class=\"lesson-title mess\"> <b>Email address</b><br>{{p.email}} </td>\n                <td class=\"lesson-title mess\" *ngIf=\"p.profileLink\"> <b>Profile on Secursy</b><br><a [href]=\"unsanitize(p.profileLink)\"  target=\"_blank\">Click here</a></td>\n                <td class=\"lesson-title mess\" *ngIf=\"(loggedUser$ | async).email == 'admin@mail.hr'\"> <b>Money</b><br>{{p.money}}$ </td>\n            </tr>\n            </tbody> \n        </table>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}