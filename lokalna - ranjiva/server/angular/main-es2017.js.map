{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_common/routes.config.ts","./src/app/_services/auth.service.ts","./src/app/_services/message.service.ts","./src/app/_services/photograph.service.ts","./src/app/_services/photographerService.ts","./src/app/_services/transaction.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/message/add-message/add-message.component.ts","./src/app/message/add-message/add-message.component.html","./src/app/message/messages/messages.component.ts","./src/app/message/messages/messages.component.html","./src/app/photograph/add-photograph/add-photograph.component.ts","./src/app/photograph/add-photograph/add-photograph.component.html","./src/app/photograph/admin-photographs/admin-photographs.component.ts","./src/app/photograph/admin-photographs/admin-photographs.component.html","./src/app/photograph/edit-photograph/edit-photograph.component.ts","./src/app/photograph/edit-photograph/edit-photograph.component.html","./src/app/photograph/my-photographs/my-photographs.component.ts","./src/app/photograph/my-photographs/my-photographs.component.html","./src/app/photograph/photographs/photographs.component.ts","./src/app/photograph/photographs/photographs.component.html","./src/app/photographer/add-photographer/add-photographer.component.ts","./src/app/photographer/add-photographer/add-photographer.component.html","./src/app/photographer/edit-photographer/edit-photographer.component.ts","./src/app/photographer/edit-photographer/edit-photographer.component.html","./src/app/photographer/photographers/photographers.component.ts","./src/app/photographer/photographers/photographers.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/transaction/add-transaction/add-transaction.component.ts","./src/app/transaction/add-transaction/add-transaction.component.html","./src/app/transaction/mytransactions/mytransactions.component.ts","./src/app/transaction/mytransactions/mytransactions.component.html","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2017.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Routes} from '@angular/router';\nimport {LoginComponent} from \"../login/login.component\";\nimport {SignupComponent} from \"../signup/signup.component\";\nimport {AddTransactionComponent} from \"../transaction/add-transaction/add-transaction.component\";\nimport {MyTransactionsComponent} from \"../transaction/mytransactions/mytransactions.component\";\nimport { PhotographersComponent } from '../photographer/photographers/photographers.component';\nimport { AddPhotographerComponent } from '../photographer/add-photographer/add-photographer.component';\nimport { EditPhotographerComponent } from '../photographer/edit-photographer/edit-photographer.component';\nimport { PhotographsComponent } from '../photograph/photographs/photographs.component';\nimport { AddPhotographComponent } from '../photograph/add-photograph/add-photograph.component';\nimport { EditPhotographComponent } from '../photograph/edit-photograph/edit-photograph.component';\nimport { MyPhotographsComponent } from '../photograph/my-photographs/my-photographs.component';\nimport { MessagesComponent } from '../message/messages/messages.component';\nimport { AddMessageComponent } from '../message/add-message/add-message.component';\nimport { UsersComponent } from '../users/users.component';\nimport { AdminPhotographsComponent } from '../photograph/admin-photographs/admin-photographs.component';\n\n\nexport const routesConfig: Routes = [\n    {\n        path: 'users',\n        component: UsersComponent\n    },\n    {\n        path: 'transaction/SESSIONID/:session',\n        component: AddTransactionComponent\n    },\n/*********************************************** */\n    {\n        path: 'user/photographs',\n        component: PhotographsComponent\n    },\n    {\n        path: 'admin/photographs',\n        component: AdminPhotographsComponent\n    },\n    {\n        path: 'myphotographs/SESSIONID/:session',\n        component: MyPhotographsComponent\n    },\n    {\n        path: 'photographs/add',\n        component: AddPhotographComponent\n    },\n    {\n        path: 'photographs/:id',\n        component: EditPhotographComponent\n    },\n/*********************************************** */\n    {\n        path: 'photographers',\n        component: PhotographersComponent\n    },\n    {\n        path: 'photographers/add',\n        component: AddPhotographerComponent\n    },\n    {\n        path: 'photographers/:id',\n        component: EditPhotographerComponent\n    },\n/*********************************************** */\n\n    {\n        path: 'messages/SESSIONID/:session',\n        component: MessagesComponent\n    },\n    {\n        path: 'messages/add/SESSIONID/:session',\n        component: AddMessageComponent\n    },\n\n/*********************************************** */\n    \n    {\n        path: 'transactions/:email',\n        component: MyTransactionsComponent\n    },\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n    {\n        path: 'signup',\n        component: SignupComponent\n    },\n    {\n        path: '',\n        redirectTo:'/user/photographs',\n        pathMatch: 'full'\n    },\n    /*{\n        path: '**',\n        redirectTo: '/lessons',\n        pathMatch: 'full'\n    }*/\n\n    \n];","import {tap, shareReplay, map, filter} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable, BehaviorSubject} from \"rxjs\";\nimport {User} from \"../_models/user\";\n\nexport const ANONYMOUS_USER : User = {\n    id: undefined,\n    email: '',\n    money:undefined,\n    firstName:'',\n    lastName:'',\n    profileLink:''\n}\n\n\n@Injectable()\nexport class AuthService {\n\n   private subject = new BehaviorSubject<User>(undefined);\n   user$: Observable<User> = this.subject.asObservable().pipe(filter(user => !!user));;\n   isLoggedIn$: Observable<boolean> = this.user$.pipe(map(user => !!user.id));\n   isLoggedOut$: Observable<boolean> = this.isLoggedIn$.pipe(map(isLoggedIn => !isLoggedIn));\n\n    constructor(private http: HttpClient) {\n        http.get<User>('/api/user').subscribe(user => this.subject.next(user ? user : ANONYMOUS_USER));\n    }\n\n\n    signUp(email:string, password:string,firstName:string,lastName:string,profileLink:string) {      \n      return this.http.post<User>('/api/signup', {email, password,firstName,lastName,profileLink}).pipe(\n          shareReplay(),tap(user => this.subject.next(user)),);\n    }\n\n    login(email:string, password:string ) {\n        return this.http.post<User>('/api/login', {email, password}).pipe(shareReplay(),tap(user => this.subject.next(user)),);\n    }\n\n    logout() : Observable<any> {\n        return this.http.post('/api/logout', null).pipe(shareReplay(),tap(user => this.subject.next(ANONYMOUS_USER)));\n    }\n\n    getAllUsers() : Observable<User[]> {\n        return this.http.get<User[]>('/api/users-all');\n    }\n\n    getUsers(input:string) : Observable<User[]> {\n        return this.http.post<any>(`/api/users`,{input});\n    }\n}\n\n\n\n\n\n","import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { shareReplay, tap } from 'rxjs/operators';\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\n\n\n@Injectable()\nexport class MessageService {\n\n    constructor(private http: HttpClient) {}\n\n    getMessages(session:string) : Observable<Message[]> {\n        return this.http.get<Message[]>(`/api/messages/SESSIONID/${session}`);\n    }\n\n    addMessage(content:string,receiverEmail:number){ \n        return this.http.post<Message>('/api/addmessage',{content,receiverEmail}).pipe(\n            shareReplay(),tap()\n        );\n    }\n}","import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { shareReplay, tap } from 'rxjs/operators';\nimport { Photograph } from '../_models/photograph';\n\n\n@Injectable()\nexport class PhotographService {\n\n    constructor(private http: HttpClient) {}\n\n    getPhotographs(name:string,session:string) : Observable<Photograph[]> {\n        const params = {\n            param1: name,\n        }\n        return this.http.get<Photograph[]>(`/api/photographs`,{params});\n    }\n\n    getMyPhotographs(session:string) : Observable<Photograph[]> {\n        return this.http.get<Photograph[]>(`/api/myphotographs/SESSIONID/${session}`);\n    }\n\n    getPhotograph(id:number) : Observable<Photograph> {\n        var address='/api/photographs/'+id.toString(); \n        return this.http.get<Photograph>(address);\n    }\n\n    addPhotograph(name:string,photographerId:number,year:number,price:number){\n        return this.http.post<Photograph>('/api/addphotograph',{name,photographerId,year,price}).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n    editPhotograph(id:number,name:string,photographerId:number,year:number,price:number){  \n        var address='/api/photographs/'+id.toString();   \n        return this.http.put<Photograph>(address,{id,name,photographerId,year,price}).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n    deletePhotograph(id:number){  \n        var address='/api/photographs/'+id.toString();       \n        return this.http.delete<any>(address).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n    buyPhotograph(id:number){  \n        var address=`/api/buyphotograph/`+id.toString();       \n        return this.http.post<Photograph>(address,{id}).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n    sellPhotograph(id:number){  \n        var address=`/api/sellphotograph/`+id.toString();       \n        return this.http.post<Photograph>(address,{id}).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n    ping(ipaddress:string) {\n        const params = {\n            param1: ipaddress,\n        }\n        return this.http.get<any>('/api/ping',{params});\n    }\n\n}","import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { Photographer } from '../_models/photographer';\nimport { shareReplay, tap } from 'rxjs/operators';\n\n\n@Injectable()\nexport class PhotographerService {\n\n    constructor(private http: HttpClient) {\n\n\n    }\n\n    getPhotographers() : Observable<Photographer[]> {\n        return this.http.get<Photographer[]>('/api/photographers');\n    }\n\n    getPhotographer(id:number) : Observable<Photographer> {\n        var address='/api/photographers/'+id.toString(); \n        return this.http.get<Photographer>(address);\n    }\n\n    addPhotographer(firstName:string,lastName:string,age:number){      \n        return this.http.post<Photographer>('/api/addphotographer',{firstName,lastName,age}).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n    editPhotographer(id:number,firstName:string,lastName:string,age:number){   \n        var address='/api/photographers/'+id.toString();   \n        return this.http.put<Photographer>(address,{id,firstName,lastName,age}).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n    deletePhotographer(id:number){  \n        var address='/api/photographers/'+id.toString();       \n        return this.http.delete<any>(address).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n}","\nimport {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { Transaction } from '../_models/transaction';\n\n\n@Injectable()\nexport class TransactionService {\n\n    constructor(private http: HttpClient) {}\n\n    //http://bank.com/transfer.do?acct=MARIA&amount=100000\n    sendMoney(receiverEmail:string, amount:number ) {   ///GET VERZIJA\n        return this.http.get<Transaction>(`/api/sendmoney/receiver=${receiverEmail}&amount=${amount}`);\n    }\n\n    //api/transactions/mail@rg.hr\n    getTransactions(email:string):Observable<Transaction[]> {\n        return this.http.get<Transaction[]>(`/api/transactions/${email}`);\n    }\n\n    addTransactionSerialize(data: string) {\n        return this.http.post<Transaction>(\"/api/addtransactionserial\", {data}).pipe(\n            shareReplay(),tap()\n        );\n    }\n\n\n}","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './_services/auth.service';\nimport { User } from './_models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'TestApp';\n\n  isLoggedIn$: Observable<boolean>;\n  isLoggedOut$: Observable<boolean>;\n\n  loggedUser$:Observable<User>;\n  email:string;\n  money:number;\n  errorMessage:string;\n  successMessage:string;\n  session:string;\n\n  constructor(private authService:AuthService,private router:Router) {\n    this.authService.user$.subscribe(a=>this.email=a.email);\n    this.authService.user$.subscribe(a=>this.money=a.money);\n\n    if (document.cookie){\n      this.session = document.cookie.split(\"=\")[1].substring(0, document.cookie.split(\"=\")[1].length);\n    }\n  }\n\n\n  ngOnInit() {\n    this.isLoggedIn$ = this.authService.isLoggedIn$;\n    this.isLoggedOut$ = this.authService.isLoggedOut$;\n\n    this.loggedUser$=this.authService.user$;\n\n    if (document.cookie){\n      this.session = document.cookie.split(\"=\")[1].substring(0, document.cookie.split(\"=\")[1].length);\n\n    }\n  }\n\n  logout() {\n\n    this.authService.logout()\n    .subscribe(\n      () => {\n          this.successMessage=\"You have been successfully logged out\";\n          setTimeout(() => {\n            this.router.navigateByUrl(`/login`);\n        }, 0  );\n      },\n      err => {\n          this.errorMessage = err.error.error;\n      }\n    );\n  }\n}\n","<header class=\"l-header\">\n\n  <ul class=\"top-menu disable-link-styles\" *ngIf=\"email && email == 'admin@mail.hr'\">\n    <li *ngIf=\"isLoggedIn$ | async\">\n      <a>{{(loggedUser$ | async).email}}</a>\n    </li>\n      <li >\n        <a routerLink=\"/transactions/{{email}}\">Transactions</a>\n      </li>\n      <li>\n        <a routerLink=\"/admin/photographs\">Photographs</a>\n      </li>\n      <li>\n        <a routerLink=\"/photographers\">Photographers</a>\n      </li>\n      <li>\n        <a routerLink=\"/users\">Users</a>\n      </li>\n      <li *ngIf=\"isLoggedIn$ | async\" (click)=\"logout()\">\n        <a>Logout</a>\n      </li>\n  </ul>\n\n  <ul class=\"top-menu disable-link-styles\" *ngIf=\"email && email != 'admin@mail.hr'\">\n      <li *ngIf=\"isLoggedIn$ | async\">\n        <a>{{(loggedUser$ | async).email}}</a>\n      </li>      \n        <li *ngIf=\"isLoggedIn$ | async\">\n          <a routerLink=\"/user/photographs\">Photographs</a>\n        </li>\n        <li *ngIf=\"isLoggedIn$ | async\">\n          <a routerLink=\"/myphotographs/SESSIONID/{{session}}\">My Photographs</a>\n        </li>\n        <li *ngIf=\"isLoggedIn$ | async\">\n          <a routerLink=\"/transactions/{{email}}\">Transactions</a>\n        </li>\n        <li *ngIf=\"isLoggedIn$ | async\">\n          <a routerLink=\"/messages/SESSIONID/{{session}}\">Messages</a>\n        </li>\n        <li *ngIf=\"isLoggedIn$ | async\">\n          <a routerLink=\"/users\">Users</a>\n        </li>\n        <li *ngIf=\"isLoggedIn$ | async\">\n          <a>{{money}}$</a>\n        </li>\n        <li *ngIf=\"isLoggedIn$ | async\" (click)=\"logout()\">\n          <a>Logout</a>\n        </li>\n  </ul>\n\n  <ul class=\"top-menu disable-link-styles\" *ngIf=\"!email\">      \n    <li *ngIf=\"isLoggedOut$ | async\">\n         <a routerLink=\"/signup\">Sign Up</a>\n     </li>\n     <li *ngIf=\"isLoggedOut$ | async\">\n         <a routerLink=\"/login\">Login</a>\n     </li>\n</ul>\n</header>\n<main>\n\n  <div *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n    <strong>Success</strong> {{successMessage}} \n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n    <strong>Error</strong> {{errorMessage}}\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n<!---********************************************************************************************--->  \n  <router-outlet></router-outlet>\n\n</main>\n\n\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule, HttpClientXsrfModule} from '@angular/common/http';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport {routesConfig} from \"./_common/routes.config\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport { AdminPhotographsComponent } from './photograph/admin-photographs/admin-photographs.component';\n\n\n\nimport { AppComponent } from './app.component';\nimport { AuthService } from './_services/auth.service';\nimport { TransactionService } from './_services/transaction.service';\nimport { PhotographService } from './_services/photograph.service';\nimport { MessageService } from './_services/message.service';\n\nimport {Router, RouterModule} from \"@angular/router\";\n\nimport { AddTransactionComponent } from './transaction/add-transaction/add-transaction.component';\nimport { MyTransactionsComponent } from './transaction/mytransactions/mytransactions.component';\nimport { PhotographersComponent } from './photographer/photographers/photographers.component';\nimport { PhotographerService } from './_services/photographerService';\nimport { AddPhotographerComponent } from './photographer/add-photographer/add-photographer.component';\nimport { EditPhotographerComponent } from './photographer/edit-photographer/edit-photographer.component';\nimport { PhotographsComponent } from './photograph/photographs/photographs.component';\nimport { AddPhotographComponent } from './photograph/add-photograph/add-photograph.component';\nimport { EditPhotographComponent } from './photograph/edit-photograph/edit-photograph.component';\nimport { MyPhotographsComponent } from './photograph/my-photographs/my-photographs.component';\nimport { AddMessageComponent } from './message/add-message/add-message.component';\nimport { MessagesComponent } from './message/messages/messages.component';\nimport { UsersComponent } from './users/users.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    AddTransactionComponent,\n    MyTransactionsComponent,\n    PhotographersComponent,\n    AddPhotographerComponent,\n    EditPhotographerComponent,\n    PhotographsComponent,\n    AddPhotographComponent,\n    EditPhotographComponent,\n    MyPhotographsComponent,\n    AddMessageComponent,\n    MessagesComponent,\n    UsersComponent,\n    AdminPhotographsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot(routesConfig),\n    ReactiveFormsModule\n  ],\n  providers: [AuthService, TransactionService, PhotographerService,PhotographService,MessageService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport { AuthService } from '../_services/auth.service';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css', '../_common/forms.css']\n})\nexport class LoginComponent implements OnInit {\n\n    form:FormGroup;\n    errorMessage:string;\n    successMessage:string;\n    refresh:boolean=false;\n\n    constructor(private fb:FormBuilder, private authService: AuthService, private router: Router) {\n\n        this.form = this.fb.group({\n            email: ['',Validators.required],\n            password: ['',Validators.required]\n        });\n\n    }\n\n    ngOnInit() {\n        if (this.refresh){\n            this.router.navigateByUrl(`/user/photographs`);\n        }\n    }\n\n    login() {\n\n        const val = this.form.value;\n\n        if (val.email && val.password) {\n\n            this.authService.login(val.email, val.password)\n                .subscribe(\n                    () => {\n                        this.successMessage=\"You have been successfully logged in\";\n                        this.refresh=true;\n                        setTimeout(() => {location.reload(true)\n                        }, 1500);\n                    },\n                    err => {\n                        this.errorMessage = err.error.error;\n                    }\n                );\n\n        }\n    }\n}\n","<div *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n    <strong>Success</strong> {{successMessage}} \n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n    <strong>Error</strong> {{errorMessage}}\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n<!---********************************************************************************************--->\n<h1 class=\"naslov\">Login</h1>\n\n<form autocomplete=\"off\" novalidate [formGroup]=\"form\" class=\"form-center\">\n\n    <fieldset>\n        <div class=\"form-field\">\n            <label>Email:</label>\n            <input name=\"email\" formControlName=\"email\" required class=\"form-control\">\n        </div>\n        <div class=\"form-field\">\n            <label>Password:</label>\n            <input name=\"password\" formControlName=\"password\" type=\"password\" required class=\"form-control\"> \n        </div>\n    </fieldset> \n\n    <div class=\"form-buttons\">\n        <button class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"login()\">Login</button>\n    </div>\n\n\n</form>","import { Component, OnInit, SecurityContext } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { Observable } from 'rxjs';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MessageService } from '../../_services/message.service';\nimport { TransactionService } from '../../_services/transaction.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { AuthService } from '../../_services/auth.service';\n\n@Component({\n  selector: 'app-add-message',\n  templateUrl: './add-message.component.html',\n  styleUrls: ['./add-message.component.css']\n})\nexport class AddMessageComponent implements OnInit {\n\n  \n  users$: Observable<User[]>;\n  form:FormGroup;\n  errorMessage:string;\n  successMessage:string;\n  session:string;\n\n  constructor(private fb:FormBuilder, private messageService: MessageService, private router: Router,\n    private transactionService:TransactionService,private sanitizer:DomSanitizer, private authService:AuthService) {\n    \n    this.form = this.fb.group({\n      content: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(400)\n      ])),\n      receiverEmail: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n    },);\n    this.session = this.router.url.split(\"SESSIONID/\")[1].toString();\n       if (!this.session) {\n          this.session = document.cookie.split(\"=\")[1].substring(0, document.cookie.split(\"=\")[1].length);\n        }\n  }\n\n  ngOnInit(): void {\n    this.users$ = this.authService.getAllUsers();\n    this.session = this.router.url.split(\"SESSIONID/\")[1].toString();\n       if (!this.session) {\n          this.session = document.cookie.split(\"=\")[1].substring(0, document.cookie.split(\"=\")[1].length);\n        }\n  }\n\n  sendMessage() {\n    const val = this.form.value;\n\n    if (val.content && val.receiverEmail) {\n\n        this.messageService.addMessage(val.content, val.receiverEmail)\n            .subscribe(\n              () => {\n                  this.successMessage=\"Message has been sent\";\n                  setTimeout(() => {\n                      this.router.navigateByUrl(`messages/SESSIONID/${this.session}`);\n                  }, 1500);\n              },\n              err => {\n                  this.errorMessage = err.error.error;\n              }\n          );\n    }\n  }\n\n}\n","<div *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n    <strong>Success</strong> {{successMessage}} \n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n    <strong>Error</strong> {{errorMessage}}\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n<!---********************************************************************************************---> \n<h1 class=\"naslov\">New message</h1>\n\n<form autocomplete=\"off\" novalidate [formGroup]=\"form\" class=\"form-center\">\n    <fieldset>\n        <div class=\"form-field\" >\n            <label>Receiver:</label>\n            <select class=\"form-control\"id=\"receiverEmail\" name=\"receiverEmail\" formControlName=\"receiverEmail\" required >\n                <option *ngFor=\"let user of users$ | async\" [ngValue]=\"user.email\">\n                    {{ user.firstName }} {{user.lastName}}\n                </option>\n            </select>\n        </div>\n        <div class=\"form-field\">\n            <label>Content:</label>\n            <textarea type=\"text\" class=\"form-control\" name=\"content\" formControlName=\"content\" required></textarea>\n        </div>\n    </fieldset>\n\n    <div class=\"form-buttons\">\n        <button class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"sendMessage()\"> Send</button>\n    </div>\n\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../../_models/user';\nimport { AuthService } from '../../_services/auth.service';\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\nimport { Router } from '@angular/router';\nimport { MessageService } from '../../_services/message.service';\nimport { DomSanitizer, SafeResourceUrl, SafeUrl, SafeHtml } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  messages$: Observable<Message[]>;\n  loggedUser$: Observable<User>;\n  content:string;\n  message1:SafeUrl;\n  message2:SafeHtml;\n  message3:SafeHtml;\n  contents:SafeHtml[]=[];\n  session:string;\n\n  constructor(private messageService: MessageService, private router: Router, private authService: AuthService,\n     private sanitizer:DomSanitizer) {\n       //this.message1=this.sanitizer.bypassSecurityTrustUrl('javascript:document.location=\"https://localhost:4200/api/addmessage/receiver=zupan@gmail.com&content=\"+document.cookie;document.body.innerHTML = \"\";');\n       //this.message2=this.sanitizer.bypassSecurityTrustUrl('javascript:document.cookie=\"SESSIONID=\";document.body.innerHTML = \"\";');\n       //this.message3=this.sanitizer.bypassSecurityTrustHtml('<svg onload=\"var i;for (i=0;i<50;++i){alert(404)}\"></svg>');\n       this.session = this.router.url.split(\"SESSIONID/\")[1].toString();\n      if (!this.session) {\n        this.session = document.cookie.split(\"=\")[1].substring(0, document.cookie.split(\"=\")[1].length);\n      }  \n    \n      this.messages$=this.messageService.getMessages(this.session);\n      this.loggedUser$=this.authService.user$;\n  }\n\n  desanitizeURL(text:string):SafeUrl {\n    return this.sanitizer.bypassSecurityTrustUrl(text);\n  }\n\n  get() {\n    return this.sanitizer.bypassSecurityTrustHtml('<svg onload=\"alert(1)\"></svg>');\n  }\n\n\n  ngOnInit(): void {\n    this.session = this.router.url.split(\"SESSIONID/\")[1].toString();\n    if (!this.session) {\n       this.session = document.cookie.split(\"=\")[1].substring(0, document.cookie.split(\"=\")[1].length);\n    }  \n\n    this.messages$=this.messageService.getMessages(this.session);\n    this.loggedUser$=this.authService.user$;\n    \n  }\n\n  openModal(num:number){\n    // Get the modal\n    var modal = document.getElementById(\"myModal\"+num);\n\n    // When the user clicks the button, open the modal \n\n    modal.style.display = \"block\";\n  }\n\n  closeModal(num:number){\n    // Get the <span> element that closes the modal\n\n    // When the user clicks on <span> (x), close the modal\n    var modal = document.getElementById(\"myModal\"+num);\n\n      modal.style.display = \"none\";\n    \n\n  // When the user clicks anywhere outside of the modal, close it\n  window.onclick = function(event) {\n    if (event.target == modal) {\n      modal.style.display = \"none\";\n    }\n  }\n\n\n  }\n\n}","<div>\n    <h1 class=\"naslov\">Messages</h1>\n    <button routerLink=\"/messages/add/SESSIONID/{{session}}\" class=\"btn btn-dark btn-center\">\n        New message\n    </button>\n</div>\n<!--<a [href]=\"message2\"  >Click here</a> -->\n<!--<a [href]=\"message1\"  >Click here</a> -->\n\n<!--<div [innerHtml]=\"message3\"></div>-->\n\n<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"(messages$ | async)\" > \n    <table class=\"table lessons-list card card-strong \">\n        <tbody>\n        <tr *ngFor=\"let p of messages$ | async;\" >\n            <td class=\"lesson-title messy\">\n                 <div>\n                    <a id=\"myBtn\" (click)=\"openModal(p.sender.id)\"><u><b>Sender</b><br>{{p.sender.firstName}} {{p.sender.lastName}}</u></a>\n                    <div id=\"myModal{{p.sender.id}}\" class=\"modal\">\n                        <div class=\"modal-content\">\n                            <span class=\"close\" (click)=\"closeModal(p.sender.id)\">&times;</span>\n                            <h1 style=\"text-align: center;\">{{p.sender.firstName}} {{p.sender.lastName}}</h1>\n                            <h3 style=\"text-align: center;\">Email: {{p.sender.email}}</h3>\n                            <h3 style=\"text-align: center;\">Profile link on Secursy: <a [href]=\"desanitizeURL(p.sender.profileLink)\" target=\"_blank\"><u>Click here</u></a></h3>\n                        </div> \n                    </div>\n                </div>\n            </td>\n            <td class=\"lesson-title messy\">\n                 <div>\n                    <a id=\"myBtn\" (click)=\"openModal(p.receiver.id)\"><u><b>Receiver</b><br>{{p.receiver.firstName}} {{p.receiver.lastName}}</u></a>\n                    <div id=\"myModal{{p.receiver.id}}\" class=\"modal\">\n                        <div class=\"modal-content\">\n                            <span class=\"close\" (click)=\"closeModal(p.receiver.id)\">&times;</span>\n                            <h1 style=\"text-align: center;\">{{p.receiver.firstName}} {{p.receiver.lastName}}</h1>\n                            <h3 style=\"text-align: center;\">Email: {{p.receiver.email}}</h3>\n                            <h3 style=\"text-align: center;\">Profile link on Secursy: <a [href]=\"desanitizeURL(p.receiver.profileLink)\"  target=\"_blank\"><u>Click here</u></a></h3>\n                        </div>\n    \n                    </div>\n                </div>\n            </td>\n            <td class=\"msg_date\"> <b>Date</b><br>{{p.date}} </td>\n            <td class=\"message-content\" [innerHtml]=\"p.content\"></td>\n        </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Photographer } from '../../_models/photographer';\nimport { Observable } from 'rxjs';\nimport { PhotographService } from '../../_services/photograph.service';\nimport { Router } from '@angular/router';\nimport { PhotographerService } from '../../_services/photographerService';\n\n@Component({\n  selector: 'app-add-photograph',\n  templateUrl: './add-photograph.component.html',\n  styleUrls: ['./add-photograph.component.css']\n})\nexport class AddPhotographComponent implements OnInit {\n\n  \n  photographers$: Observable<Photographer[]>;\n  form:FormGroup;\n  errorMessage:string;\n  successMessage:string;\n\n  constructor(private fb:FormBuilder, private photographService: PhotographService,\n    private photographerService: PhotographerService, private router: Router) {\n\n    this.form = this.fb.group({\n      year: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      price: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      name: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      photographerId: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n    },);\n  }\n\n  ngOnInit(): void {\n    this.photographers$ = this.photographerService.getPhotographers();\n  }\n\n  createPhotograph() {\n    const val = this.form.value;\n\n    if (val.name && val.photographerId && val.year && val.price) {\n\n        this.photographService.addPhotograph(val.name,val.photographerId,val.year,val.price)\n            .subscribe(\n              () => {\n                  this.successMessage=\"Photograph has been created\";\n                  setTimeout(() => {\n                      this.router.navigateByUrl(`admin/photographs`);\n                  }, 1500);\n              },\n              err => {\n                  this.errorMessage = err.error.error;\n              }\n          );\n\n    }\n  }\n}\n","<div *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n    <strong>Success</strong> {{successMessage}} \n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n    <strong>Error</strong> {{errorMessage}}\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n<!---********************************************************************************************---> \n<h1 class=\"naslov\">New photograph</h1>\n\n<form autocomplete=\"off\" novalidate [formGroup]=\"form\" class=\"form-center\">\n    <fieldset>\n        <div class=\"form-group\">\n            <label>Name:</label>\n            <input class=\"form-control\" formControlName=\"name\" type=\"text\"  required/>\n        </div>\n        <div class=\"form-field\" >\n            <label>Photographer:</label>\n            <select id=\"photographerId\" class=\"form-control\" name=\"photographerId\" formControlName=\"photographerId\" required >\n                <option *ngFor=\"let p of photographers$ | async\" [ngValue]=\"p.id\">\n                    {{ p.firstName }} {{ p.lastName }}\n                </option>\n            </select>\n        </div>\n        <div class=\"form-field\">\n            <label>Year:</label>\n            <input type=\"number\" name=\"year\" class=\"form-control\" formControlName=\"year\" required>\n        </div>\n        <div class=\"form-field\">\n            <label>Price:</label>\n            <input type=\"number\" name=\"price\" class=\"form-control\" formControlName=\"price\" required>\n        </div>\n    </fieldset>\n\n    <div class=\"form-buttons\">\n        <button class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"createPhotograph()\">Save</button>\n    </div>\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Photograph } from '../../_models/photograph';\nimport { PhotographService } from '../../_services/photograph.service';\nimport { AuthService } from '../../_services/auth.service';\nimport { User } from '../../_models/user';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-admin-photographs',\n  templateUrl: './admin-photographs.component.html',\n  styleUrls: ['./admin-photographs.component.css']\n})\nexport class AdminPhotographsComponent implements OnInit {\n\n  photos$: Observable<Photograph[]>;\n  loggedUser$: Observable<User>\n  form:FormGroup;\n  form2:FormGroup;\n  response:any;\n  errorMessage:string;\n  successMessage:string;\n  session:string;\n\n  constructor(private photographService: PhotographService, private router: Router, \n    private authService: AuthService,private fb:FormBuilder) {\n      this.form = this.fb.group({\n        ipaddress: new FormControl('', Validators.compose([\n          Validators.required,\n        ]))\n      },);\n      this.form2 = this.fb.group({\n        search: new FormControl()\n      },);\n  }\n\n  ngOnInit(): void {\n    this.photos$=this.photographService.getPhotographs(\"\",this.session);\n    this.loggedUser$=this.authService.user$;\n  }\n\n  deletePhotograph(id:number){\n    this.photographService.deletePhotograph(id).\n    subscribe(\n      () => {\n          this.successMessage=\"Photograph has been deleted\";\n          if (this.photographService.getPhotographs(\"\",this.session) == null){\n            this.photos$=null;\n          }else{\n            this.photos$=this.photographService.getPhotographs(\"\",this.session);\n          } \n      },\n      err => {\n          this.errorMessage = err.error.error;\n      }\n    );\n  }\n}\n","<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"(photos$ | async)\" >\n\n    <h1 class=\"naslov\">Admin Panel - Photographs</h1>\n    <button routerLink=\"/photographs/add\" class=\"btn btn-dark btn-center\">\n        New photograph\n    </button>\n    <table class=\"table lessons-list card card-strong\">\n        <tbody>\n        <tr *ngFor=\"let p of photos$ | async\" >\n            <td class=\"title\"> \n                <b>{{p.name}}</b>, {{p.year}}\n            </td>\n            <td class=\"title\"> \n               {{p.photographer.firstName}} {{p.photographer.lastName}} ({{p.photographer.age}})\n            </td>\n            <td class=\"title\"> \n                {{p.price}}$\n            </td>\n            <td class=\"photo\">\n                <a  href=\"{{p.photoLink}}\" target=\"_blank\">\n                    <img src=\"../../../assets/photos/{{p.photoLink}}\" alt=\"photo\" height=\"130\" width=\"160\">\n                </a>\n            </td>\n            <button type=\"button\" class=\"btn btn-warning\" routerLink=\"/photographs/{{p.id}}\">\n                Edit\n            </button>\n            <button type=\"button\" class=\"btn btn-danger\" (click)=\"deletePhotograph(p.id)\">\n                Delete \n            </button>\n        </tr>\n        </tbody>\n    </table>\n    \n    \n    </div>","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormControl, FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\nimport { PhotographerService } from '../../_services/photographerService';\nimport { PhotographService } from '../../_services/photograph.service';\nimport { Photograph } from '../../_models/photograph';\nimport { switchMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Photographer } from '../../_models/photographer';\n\n@Component({\n  selector: 'app-edit-photograph',\n  templateUrl: './edit-photograph.component.html',\n  styleUrls: ['./edit-photograph.component.css']\n})\nexport class EditPhotographComponent implements OnInit {\n\n  private photographId: number;\n  photographers$: Observable<Photographer[]>;\n  photograph:Photograph;\n  form:FormGroup;\n  errorMessage:string;\n  successMessage:string;\n\n constructor(private route: ActivatedRoute,private fb:FormBuilder, \n   private photographerService:PhotographerService,private photographService:PhotographService, private router: Router) {\n     \n    this.form = this.fb.group({\n      year: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      price: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      name: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      photographerId: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n    },);\n  }\n\n \n ngOnInit() {\n   this.route.paramMap\n     .pipe(switchMap((params: ParamMap) => params.get(\"id\")))\n     .subscribe(id => {\n       this.photographId = parseInt(id, 10);\n       this.load();\n       this.photographers$ = this.photographerService.getPhotographers();\n     });\n }\n\n load(onlyTasks: boolean = false) {\n   this.photographService.getPhotograph(this.photographId).subscribe(a => {\n       this.photograph = {\n         id : a.id,\n         name:a.name,\n         year : a.year,\n         photoLink : a.photoLink,\n         photographer:null,\n         photographerId:a.photographerId,\n         price:a.price,\n         userId:null\n       };\n   });\n }\n\n editPhotograph(){\n   const val = this.form.value;\n\n   if (val.name && val.photographerId && val.year && val.price) {\n       this.photographService.editPhotograph(this.photographId, val.name , val.photographerId , val.year , val.price)\n           .subscribe(\n            () => {\n                this.successMessage=\"Photograph has been edited\";\n                setTimeout(() => {\n                    this.router.navigateByUrl(`admin/photographs`);\n                }, 1500);\n            },\n            err => {\n                this.errorMessage = err.error.error;\n            }\n        );\n\n   }\n }\n\n}\n","<div *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n    <strong>Success</strong> {{successMessage}} \n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n    <strong>Error</strong> {{errorMessage}}\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n<!---********************************************************************************************---> \n<h1 class=\"naslov\">Edit photograph</h1>\n\n<form autocomplete=\"off\" novalidate [formGroup]=\"form\" *ngIf=\"photograph\"  class=\"form-center\">\n    <fieldset>\n        <div class=\"form-group\">\n            <label>Name:</label>\n            <input class=\"form-control\" formControlName=\"name\" type=\"text\" [(ngModel)]=\"photograph.name\" required />\n        </div>\n        <div class=\"form-field\" >\n            <label>Photographer:</label>\n            <select id=\"photographerId\" name=\"photographerId\" formControlName=\"photographerId\" class=\"form-control\" [(ngModel)]=\"photograph.photographerId\" required>\n                <option *ngFor=\"let p of photographers$ | async\" [ngValue]=\"p.id\">\n                    {{ p.firstName }} {{ p.lastName }}\n                </option> \n            </select>\n        </div>\n        <div class=\"form-field\">\n            <label>Year:</label>\n            <input type=\"number\" name=\"year\" formControlName=\"year\" class=\"form-control\" [(ngModel)]=\"photograph.year\" required >\n        </div>\n        <div class=\"form-field\">\n            <label>Price:</label>\n            <input type=\"number\" name=\"price\" formControlName=\"price\" class=\"form-control\" [(ngModel)]=\"photograph.price\" required>\n        </div>\n    </fieldset>\n\n    <div class=\"form-buttons\">\n        <button class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"editPhotograph()\">Save</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { PhotographService } from '../../_services/photograph.service';\nimport { AuthService } from '../../_services/auth.service';\nimport { Photograph } from '../../_models/photograph';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-my-photographs',\n  templateUrl: './my-photographs.component.html',\n  styleUrls: ['./my-photographs.component.css']\n})\nexport class MyPhotographsComponent implements OnInit {\n\n  photos$: Observable<Photograph[]>;\n  errorMessage:string;\n  successMessage:string;\n  session:string;\n\n  constructor(private photographService: PhotographService, private authService: AuthService,private router:Router) {\n    this.session = this.router.url.split(\"SESSIONID/\")[1].toString();\n    if (!this.session) {\n       this.session = document.cookie.split(\"=\")[1].substring(0, document.cookie.split(\"=\")[1].length);\n     }  }\n\n  ngOnInit(): void {\n    this.photos$=this.photographService.getMyPhotographs(this.session);\n    this.session = this.router.url.split(\"SESSIONID/\")[1].toString();\n    if (!this.session) {\n       this.session = document.cookie.split(\"=\")[1].substring(0, document.cookie.split(\"=\")[1].length);\n     }  }\n\n  sellPhotograph(id:number){\n    this.photographService.sellPhotograph(id).\n    subscribe(\n      () => {\n          this.successMessage=\"Photograph has been sold\";\n          location.reload(true);\n          if (this.photographService.getMyPhotographs(this.session) == null){\n            this.photos$=null;\n          }else{\n            this.photos$=this.photographService.getMyPhotographs(this.session);\n          }\n      },\n      err => {\n          this.errorMessage = err.error.error;\n      }\n    );\n  }\n\n}\n","<h2 *ngIf=\"!(photos$ | async)\" class=\"naslov\">You currently don't own any photographs..</h2>\n\n<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"(photos$ | async)\" >\n\n    <div>\n        <h1 class=\"naslov\">My Photographs</h1>\n \n        <table class=\"table lessons-list card card-strong\">\n            <tbody>\n            <tr *ngFor=\"let p of photos$ | async\" >\n                <td class=\"title\"> \n                    {{p.name}}, {{p.year}}\n                </td>\n                <td class=\"title\"> \n                   {{p.photographer.firstName}} {{p.photographer.lastName}} ({{p.photographer.age}})\n                </td>\n                <td class=\"title\"> \n                    {{p.price}}$\n                </td>\n                <td class=\"photo\">\n                    <a  href=\"{{p.photoLink}}\" target=\"_blank\">\n                        <img src=\"../../../assets/photos/{{p.photoLink}}\" alt=\"photo\" height=\"130\" width=\"160\">\n                    </a>\n                </td>\n                <button type=\"button\" class=\"btn btn-dark\" *ngIf=\"p.userId\" (click)=\"sellPhotograph(p.id)\">\n                    Sell\n                </button>\n            </tr>\n            </tbody>\n        </table>\n    \n    \n    </div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Photograph } from '../../_models/photograph';\nimport { PhotographService } from '../../_services/photograph.service';\nimport { AuthService } from '../../_services/auth.service';\nimport { User } from '../../_models/user';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-photographs',\n  templateUrl: './photographs.component.html',\n  styleUrls: ['./photographs.component.css']\n})\nexport class PhotographsComponent  implements OnInit {\n\n  photos$: Observable<Photograph[]>;\n  loggedUser$: Observable<User>\n  form:FormGroup;\n  form2:FormGroup;\n  response:any;\n  errorMessage:string;\n  successMessage:string;\n  session:string;\n\n  constructor(private photographService: PhotographService, private router: Router, \n    private authService: AuthService,private fb:FormBuilder) {\n      this.form = this.fb.group({\n        ipaddress: new FormControl('', Validators.compose([\n          Validators.required,\n        ]))\n      },);\n  }\n\n  ngOnInit(): void {\n    this.photos$=this.photographService.getPhotographs(\"\",this.session);\n    this.loggedUser$=this.authService.user$;\n  }\n\n  deletePhotograph(id:number){\n    this.photographService.deletePhotograph(id).subscribe(\n      () => {\n          if (this.photographService.getPhotographs(\"\",this.session) == null){\n            this.photos$=null;\n          }else{\n            this.photos$=this.photographService.getPhotographs(\"\",this.session);\n          }                  \n        },err => {\n          this.errorMessage = err.error.error;\n      }\n    );\n  }\n\n  buyPhotograph(id:number){\n    this.photographService.buyPhotograph(id)\n    .subscribe(\n      () => {\n          this.successMessage=\"Photograph has been bought\";\n          setTimeout(() => {\n            location.reload(true);\n          }, 1500);\n      },\n      err => {\n          this.errorMessage = err.error.error;\n      }\n    );    \n  }\n\n  sellPhotograph(id:number){\n    this.photographService.sellPhotograph(id).subscribe(\n      () => {\n          this.successMessage=\"Photograph has been sold\";\n          setTimeout(() => {\n            location.reload(true);\n          }, 1500);\n      },\n      err => {\n          this.errorMessage = err.error.error;\n      }\n    );\n  }\n\n  ping(){\n    const val = this.form.value;\n\n    if (val.ipaddress) {\n      this.photographService.ping(val.ipaddress).subscribe(\n        (resp) => {\n            this.response = resp;\n        }\n      );\n    }\n  }\n}\n\n","<head>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n</head>\n<div *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n    <strong>Success</strong> {{successMessage}} \n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n    <strong>Error</strong> {{errorMessage}}\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n<!---********************************************************************************************--->\n<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"(photos$ | async)\" >\n\n    <h1 class=\"naslov\">Photographs</h1>\n      \n    <table class=\"table lessons-list card card-strong\">\n        <tbody>\n        <tr *ngFor=\"let p of photos$ | async\" >\n            <td class=\"title\"> \n                <b>{{p.name}}</b>, {{p.year}}\n            </td>\n            <td class=\"title\"> \n               {{p.photographer.firstName}} {{p.photographer.lastName}} ({{p.photographer.age}})\n            </td>\n            <td class=\"title\"> \n                {{p.price}}$\n            </td>\n            <td class=\"photo\">\n                <a  href=\"{{p.photoLink}}\" target=\"_blank\">\n                    <img src=\"../../../assets/photos/{{p.photoLink}}\" alt=\"photo\" height=\"130\" width=\"160\">\n                </a>\n            </td>\n            <button type=\"button\" class=\"btn btn-light\" *ngIf=\"!p.userId\" (click)=\"buyPhotograph(p.id)\" >\n                Buy\n            </button>\n            <button type=\"button\" class=\"btn btn-dark\" *ngIf=\"p.userId === (loggedUser$ | async).id\" (click)=\"sellPhotograph(p.id)\">\n                Sell\n            </button>\n        </tr>\n        </tbody>\n    </table>\n</div>\n\n<div>\n    <h2>Bored of photographs?</h2>\n    <div class=\"ipsearch\">\n        <h3>Ping an address to waste time</h3>\n        <form novalidate [formGroup]=\"form\">\n            <div class=\"form-group\">\n                <input class=\"form-control search\" formControlName=\"ipaddress\" type=\"text\" placeholder=\"IPv4 address\" required />\n            </div>\n            <div class=\"form-buttons\">\n                <button class=\"btn btn-dark src-btn\" [disabled]=\"!form.valid\" (click)=\"ping()\">Ping it!</button>\n             </div>\n        </form> \n        <div *ngIf=\"response\" class=\"ipresponse\">\n            {{response.response}}\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { PhotographerService } from '../../_services/photographerService';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-photographer',\n  templateUrl: './add-photographer.component.html',\n  styleUrls: ['./add-photographer.component.css']\n})\nexport class AddPhotographerComponent implements OnInit {\n\n  form:FormGroup;\n  errorMessage:string;\n  successMessage:string;\n  \n  constructor(private fb:FormBuilder, private photographerService:PhotographerService, private router: Router) {\n    this.form = this.fb.group({\n      firstName: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      lastName: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      age: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n    },);\n   }\n\n  ngOnInit(): void {\n  }\n\n  createPhotographer(){\n    const val = this.form.value;\n\n    if (val.firstName && val.lastName && val.age) {\n        this.photographerService.addPhotographer(val.firstName,val.lastName,val.age)\n            .subscribe(\n              () => {\n                  this.successMessage=\"Photographer has been created\";\n                  setTimeout(() => {\n                      this.router.navigateByUrl(`photographers`);\n                  }, 1500);\n              },\n              err => {\n                  this.errorMessage = err.error.error;\n              }\n          );\n\n    }\n  }\n\n}\n","<div *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n    <strong>Success</strong> {{successMessage}} \n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n    <strong>Error</strong> {{errorMessage}}\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n<!---********************************************************************************************---> \n<h1 class=\"naslov\">new Photographer</h1>\n\n<form autocomplete=\"off\" novalidate [formGroup]=\"form\" class=\"form-center\">\n    <fieldset>\n        <div class=\"form-group\">\n            <label>First Name:</label>\n            <input class=\"form-control\" formControlName=\"firstName\" type=\"text\" required />\n        </div>\n        <div class=\"form-field\">\n            <label>Last Name:</label>\n            <input class=\"form-control\" formControlName=\"lastName\" type=\"text\" required/>\n        </div>\n        <div class=\"form-field\">\n            <label>Age</label>\n            <input type=\"number\" name=\"age\" formControlName=\"age\" class=\"form-control\" required>\n        </div>\n    </fieldset>\n\n    <div class=\"form-buttons\">\n        <button class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"createPhotographer()\">Save</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { PhotographerService } from '../../_services/photographerService';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { switchMap } from 'rxjs/operators';\nimport { Photographer } from '../../_models/photographer';\n\n@Component({\n  selector: 'app-edit-photographer',\n  templateUrl: './edit-photographer.component.html',\n  styleUrls: ['./edit-photographer.component.css']\n})\nexport class EditPhotographerComponent implements OnInit {\n\n  private photographerId: number;\n  photographer:Photographer;\n  form:FormGroup;\n  errorMessage:string;\n  successMessage:string;\n\n  constructor(private route: ActivatedRoute,private fb:FormBuilder, private photographerService:PhotographerService, private router: Router) {\n    this.form = this.fb.group({\n      firstName: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      lastName: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      age: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n    },);\n   }\n\n  \n  ngOnInit() {\n    this.route.paramMap\n      .pipe(switchMap((params: ParamMap) => params.get(\"id\")))\n      .subscribe(id => {\n        this.photographerId = parseInt(id, 10);\n        this.load();\n      });\n  }\n\n  load(onlyTasks: boolean = false) {\n    this.photographerService.getPhotographer(this.photographerId).subscribe(a => {\n        this.photographer = {\n          id : a.id,\n          firstName : a.firstName,\n          lastName : a.lastName,\n          age : a.age\n        };\n    });\n  }\n\n  editPhotographer(){\n    const val = this.form.value;\n\n    if (val.firstName && val.lastName && val.age) {\n        this.photographerService.editPhotographer(this.photographerId, val.firstName,val.lastName,val.age)\n        .subscribe(\n          () => {\n              this.successMessage=\"Photographer has been edited\";\n              setTimeout(() => {\n                  this.router.navigateByUrl(`photographers`);\n              }, 1500);\n          },\n          err => {\n              this.errorMessage = err.error.error;\n          }\n      );\n\n    }\n  }\n\n\n}\n","<div *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n    <strong>Success</strong> {{successMessage}} \n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n    <strong>Error</strong> {{errorMessage}}\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n<!---********************************************************************************************---> \n<h1 class=\"naslov\">Edit photographer</h1>\n\n<form autocomplete=\"off\" novalidate [formGroup]=\"form\" *ngIf=\"photographer\" class=\"form-center\">\n    <fieldset>\n        <div class=\"form-group\">\n            <label>First Name:</label>\n            <input class=\"form-control\" formControlName=\"firstName\" type=\"text\" [(ngModel)]=\"photographer.firstName\" required/>\n        </div>\n        <div class=\"form-field\">\n            <label>Last Name:</label>\n            <input class=\"form-control\" formControlName=\"lastName\" type=\"text\" [(ngModel)]=\"photographer.lastName\" required/>\n        </div>\n        <div class=\"form-field\">\n            <label>Age</label>\n            <input type=\"number\" class=\"form-control\" name=\"age\" formControlName=\"age\" [(ngModel)]=\"photographer.age\" required>\n        </div>\n    </fieldset>\n\n    <div class=\"form-buttons\">\n        <button class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"editPhotographer()\" >Save</button>\n    </div>\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Photographer } from '../../_models/photographer';\nimport { PhotographerService } from '../../_services/photographerService';\n\n@Component({\n  selector: 'app-photographers',\n  templateUrl: './photographers.component.html',\n  styleUrls: ['./photographers.component.css']\n})\nexport class PhotographersComponent implements OnInit {\n\n  photographers$: Observable<Photographer[]>;\n  errorMessage:string;\n  successMessage:string;\n\n  constructor(private photographerService: PhotographerService, private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.photographers$=this.photographerService.getPhotographers();\n  }\n\n  deletePhotographer(id:number){\n    this.photographerService.deletePhotographer(id)\n    .subscribe(\n      () => {\n          this.successMessage=\"Photographer has been deleted\";\n          setTimeout(() => {\n            this.router.navigateByUrl(`photographers`);\n        }, 1500);\n      },\n      err => {\n          this.errorMessage = err.error.error;\n      }\n    );\n    this.photographers$=this.photographerService.getPhotographers();\n  }\n}\n","<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"(photographers$ | async)\" >\n\n    <div>\n        <h1 class=\"naslov\">Photographers</h1>\n        <button routerLink=\"/photographers/add\" class=\"btn btn-dark btn-center\">\n            New photographer\n        </button>\n    </div>\n    <table class=\"table lessons-list card card-strong\">\n        <tbody>\n        <tr *ngFor=\"let p of photographers$ | async\" >\n            <td class=\"lesson-title\"> <b>{{p.firstName}} {{p.lastName}}</b> <br> {{p.age}} years old </td>\n            <td class=\"lesson-title\">\n                <button routerLink=\"/photographers/{{p.id}}\" class=\"btn btn-warning\">\n                    Edit \n                </button>\n                <button class=\"btn btn-danger\" (click)=\"deletePhotographer(p.id)\">\n                    Delete \n                </button>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n    \n    \n    </div>","import { Component, OnInit, SecurityContext } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators, FormControl} from \"@angular/forms\";\nimport {AuthService} from \"../_services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\n@Component({\n  selector: 'signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css', '../_common/forms.css']\n})\nexport class SignupComponent implements OnInit {\n\n    form:FormGroup;\n    errorMessage:string;\n    successMessage:string;\n    refresh:boolean=false;\n\n    constructor(private formBuilder: FormBuilder, private authService: AuthService,private router:Router,private sanitizer:DomSanitizer) {\n      this.form = this.formBuilder.group({\n        email: new FormControl('', Validators.compose([\n          Validators.required,\n        ])),\n        password: new FormControl('', Validators.compose([\n          Validators.required,\n        ])),\n        confirmpassword: new FormControl('', Validators.compose([\n          Validators.required,\n        ])),\n        firstName: new FormControl('', Validators.compose([\n          Validators.required,\n        ])),\n        lastName: new FormControl('', Validators.compose([\n          Validators.required,\n        ])),\n        profileLink: new FormControl('', Validators.compose([        \n        ])),\n      });\n    }\n\n    ngOnInit() {\n      if (this.refresh){\n        this.router.navigateByUrl(`/user/photographs`);\n      }\n    }\n\n    signUp() {\n        const val = this.form.value;\n\n        if (val.email && val.firstName&& val.lastName && val.password && val.password === val.confirmpassword) {\n\n          this.authService.signUp(val.email, val.password,val.firstName,val.lastName,val.profileLink)\n          .subscribe(\n            () => {\n                this.successMessage=\"You have successfully signed in\";\n                this.refresh=true;\n                setTimeout(() => {location.reload(true)\n                }, 1500);\n            },\n            err => {\n                this.errorMessage = err.error.error;\n            }\n        );\n\n        }\n        \n    }\n\n}\n","<div *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n    <strong>Success</strong> {{successMessage}} \n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n    <strong>Error</strong> {{errorMessage}}\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n<!---********************************************************************************************---> \n<h1 class=\"naslov\">Sign Up</h1>\n\n<form autocomplete=\"on\" [formGroup]=\"form\" class=\"form-center\">\n\n    <fieldset>\n        <div class=\"form-group\">\n            <label>First Name</label>\n            <input class=\"form-control\" formControlName=\"firstName\" type=\"text\" required autocomplete=\"on\"/>\n        </div>\n        <div class=\"form-group\">\n            <label>Last Name</label>\n            <input class=\"form-control\" formControlName=\"lastName\" type=\"text\" required autocomplete=\"on\"/>\n        </div>\n        <div class=\"form-group\">\n            <label>Profile link on Secursy</label>\n            <input class=\"form-control\" formControlName=\"profileLink\" type=\"url\" autocomplete=\"on\" placeholder=\"Optional..\"/>\n        </div>\n        <div class=\"form-group\">\n            <label>Email address</label>\n            <input class=\"form-control\" formControlName=\"email\" type=\"email\" required autocomplete=\"on\"/>\n        </div>\n\n        <div class=\"form-group\">\n            <label>Password</label>\n            <input class=\"form-control\" formControlName=\"password\" type=\"password\" required/>\n        </div>\n\n        <div class=\"form-group\">\n            <label>Confirm Password</label>\n            <input class=\"form-control\" formControlName=\"confirmpassword\" type=\"password\" required />\n        </div>\n    </fieldset>\n\n    <div class=\"form-buttons\">\n        <button  class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"signUp()\">Sign Up</button>\n    </div>\n\n\n\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../../_models/user';\nimport { FormBuilder, FormControl, Validators, FormGroup } from '@angular/forms';\nimport { TransactionService } from '../../_services/transaction.service';\nimport { Router } from '@angular/router';\nimport { Transaction } from '../../_models/transaction';\nimport { AuthService } from '../../_services/auth.service';\n\n@Component({\n  selector: 'app-add-transaction',\n  templateUrl: './add-transaction.component.html',\n  styleUrls: ['./add-transaction.component.css']\n})\nexport class AddTransactionComponent implements OnInit {\n\n  users$: Observable<User[]>;\n  form:FormGroup;\n  transaction:Transaction;\n  email:string;\n\n  errorMessage:string;\n  successMessage:string;\n\n  file:File;\n  myForm = new FormGroup({\n    file: new FormControl('', [Validators.required]),\n    fileSource: new FormControl('', [Validators.required])\n  });\n\n  fileExample=`{\n    \"receiver\": \"markomail.hr\",\n    \"amount\": 200\n  }`;\n\n  constructor(private fb:FormBuilder, private authService: AuthService, private router: Router,\n    private transactionService:TransactionService) {\n    \n    this.form = this.fb.group({\n      amount: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n      receiverEmail: new FormControl('', Validators.compose([\n        Validators.required,\n      ])),\n    },);\n\n    this.authService.user$.subscribe(a=>this.email=a.email);\n  }\n\n  ngOnInit(): void {\n    this.users$ = this.authService.getAllUsers();\n  }\n\n  sendMoney() { \n    const val = this.form.value;\n\n    if (val.amount && val.receiverEmail) {\n\n      this.transactionService.sendMoney(val.receiverEmail, val.amount)\n          .subscribe(\n              () => {\n                  this.successMessage=\"Money has been sent\";\n                  setTimeout(() => {\n                    this.router.navigateByUrl(`/transactions/${this.email}`);\n                  }, 1500);\n              },err => {\n                this.errorMessage = err.error.error;\n              }\n          );\n    }\n  }\n\n  get f(){\n    return this.myForm.controls;\n  }\n\n  onFileChange(event) {\n      this.file = event.target.files[0];\n  }\n\n  uploadFile(){\n    if (!this.file)\n      return;\n\n    const reader = new FileReader();\n\n    reader.onload = (evt) => {\n        const data: string = (evt as any).target.result;\n\n        this.transactionService.addTransactionSerialize(data)\n            .subscribe(\n              () => {\n                this.successMessage=\"Money has been sent\";\n                setTimeout(() => {\n                  this.router.navigateByUrl(`/transactions/${this.email}`);\n                }, 1500);\n              },err => {\n                this.errorMessage = err.error.error;\n              }\n            );\n    };\n    reader.readAsText(this.file);\n  }\n}\n","<div *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n    <strong>Success</strong> {{successMessage}} \n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n    <strong>Error</strong> {{errorMessage}}\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n<!---********************************************************************************************--->  \n<h1 class=\"naslov\">New transaction</h1>\n\n<form autocomplete=\"on\" novalidate [formGroup]=\"form\" class=\"form-center\">\n    <fieldset>\n        <div class=\"form-field\">\n            <label>Amount:</label>\n            <input type=\"number\" class=\"form-control\" name=\"amount\" formControlName=\"amount\" required>\n        </div>\n        <div class=\"form-field\" >\n            <label>Receiver:</label>\n            <select id=\"receiverEmail\" class=\"form-control\" name=\"receiverEmail\" formControlName=\"receiverEmail\" required>\n                <option *ngFor=\"let user of users$ | async\" [ngValue]=\"user.email\">\n                    {{ user.firstName }}  {{ user.lastName }}\n                </option>\n            </select>\n        </div>\n    </fieldset>\n\n    <div class=\"form-buttons\">\n        <button class=\"btn btn-dark\" [disabled]=\"!form.valid\" (click)=\"sendMoney()\">Send money</button>\n    </div>\n</form>\n\n<h3 class=\"form-center\">Or just upload your file with proper data</h3>\n<form [formGroup]=\"myForm\" class=\"form-center\">\n    <fieldset>\n        <div class=\"form-group\">\n            <input \n                formControlName=\"file\"\n                id=\"file\" \n                type=\"file\" \n                class=\"form-control\"\n                (change)=\"onFileChange($event)\" required>\n            <div *ngIf=\"f.file.touched && f.file.invalid\" class=\"alert alert-danger\">\n                <div *ngIf=\"f.file.errors.required\">File is required.</div>\n            </div>\n        </div>\n        <div class=\"form-buttons\">\n            <button class=\"btn btn-dark\" (click)=\"uploadFile()\">Upload</button>\n        </div>\n    </fieldset>\n</form>\n<div class=\"form-center\">\n    <h4><b>File example:</b></h4>\n    <p>{{fileExample}}</p>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../../_models/user';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../_services/auth.service';\nimport { Transaction } from '../../_models/transaction';\nimport { TransactionService } from '../../_services/transaction.service';\n\n\n@Component({\n  selector: 'app-mytransactions',\n  templateUrl: './mytransactions.component.html',\n  styleUrls: ['./mytransactions.component.css']\n})\nexport class MyTransactionsComponent implements OnInit {\n\n  user$: Observable<User>;\n  transactions$: Observable<Transaction[]>;\n  email:string;\n  session:string;\n\n\n  constructor(private authService: AuthService, private router: Router,private transactionService: TransactionService) {\n    this.email = this.router.url.split(\"transactions/\")[1].toString();\n    if (!this.email){\n      this.authService.user$.subscribe(a=>this.email=a.email);\n    }\n\n    this.user$ = this.authService.user$;\n\n    this.transactions$=this.transactionService.getTransactions(this.email);\n    if (document.cookie){\n      this.session = document.cookie.split(\"=\")[1].substring(0, document.cookie.split(\"=\")[1].length);\n    }\n  }\n\n  ngOnInit(): void {\n    this.user$ = this.authService.user$;\n    this.email = this.router.url.split(\"transactions/\")[1].toString();\n    if (!this.email){\n      this.authService.user$.subscribe(a=>this.email=a.email);\n    }\n\n    if (document.cookie){\n      this.session = document.cookie.split(\"=\")[1].substring(0, document.cookie.split(\"=\")[1].length);\n    }\n  }\n}\n","<div>\n    <h1 class=\"naslov\">Transactions</h1>\n    <button routerLink=\"/transaction/SESSIONID/{{session}}\" class=\"btn btn-dark btn-center\" *ngIf=\"email && email != 'admin@mail.hr'\">\n        New transaction\n    </button>\n</div>\n<h2 *ngIf=\"!(transactions$ | async)\">You currently don't own any transactions..</h2>\n\n<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"(transactions$ | async)\">\n    <table class=\"table lessons-list card card-strong\">\n        <tbody>\n            <tr *ngFor=\"let transaction of transactions$ | async\" >\n                <td class=\"lesson-title\"> <b>Amount</b><br>{{transaction.amount}}$ </td>\n                <td class=\"lesson-title\"> <b>Sender</b><br>{{transaction.sender.email}} </td>\n                <td class=\"lesson-title\"> <b>Receiver</b><br>{{transaction.receiver.email}} </td>\n                <td class=\"lesson-description\"> <b>Date</b><br>{{transaction.date}} </td>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthService } from '../_services/auth.service';\nimport { SafeUrl, DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n    users$: Observable<User[]>;\n    loggedUser$: Observable<User>\n    form:FormGroup;\n    profileLink1:SafeUrl;\n    profileLink2:SafeUrl;\n\n    xss:SafeHtml;\n\n    constructor(private authService: AuthService,private fb:FormBuilder, private sanitizer:DomSanitizer,private router:Router) {\n\n        this.form = this.fb.group({\n          search: new FormControl('', Validators.compose([\n            Validators.required]))\n        });\n        this.xss = this.sanitizer.bypassSecurityTrustHtml('<svg onload=\"var i;for (i=0;i<1;++i){alert()}\"></svg>');\n  }\n  \n    ngOnInit(): void {\n      this.loggedUser$=this.authService.user$;\n      this.xss = this.sanitizer.bypassSecurityTrustHtml('<svg onload=\"var i;for (i=0;i<1;++i){alert()}\"></svg>');\n      this.loggedUser$.subscribe(\n        (resp) => {\n            this.profileLink1=this.sanitizer.bypassSecurityTrustUrl(resp.profileLink);\n            if (resp.email== 'admin@mail.hr'){\n              this.users$=this.authService.getAllUsers();\n            }\n        }\n      );\n    }\n  \n    search(){\n      const val = this.form.value;\n  \n      if (val.search) {\n        this.users$=this.authService.getUsers(val.search);\n      }\n    }\n\n    unsanitize(text:string):SafeUrl{\n      return this.sanitizer.bypassSecurityTrustUrl(text);\n    }\n  }\n\n","<head>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n</head>\n<h1 class=\"naslov\">Users</h1>\n\n<div style=\"display: none;\" [innerHtml]=\"xss\">x</div>\n\n<form [formGroup]=\"form\" class=\"form-center user_search\"> \n    <input type=\"text\" placeholder=\"Search..\" formControlName=\"search\" required class=\"form-control\">\n    <button type=\"submit\" [disabled]=\"!form.valid\" (click)=\"search()\"><i class=\"fa fa-search\"></i></button>\n</form>\n\n<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"!(users$ | async) && (loggedUser$ | async) && (loggedUser$ | async).email != 'admin@mail.hr'\" > \n    <table class=\"table lessons-list card card-strong search_card\">\n        <tbody>\n        <tr>\n            <td class=\"lesson-title mess\">\n                <b>{{(loggedUser$ | async).firstName}} {{(loggedUser$ | async).lastName}}</b>\n            </td>\n            <td class=\"lesson-title mess\"> <b>Email address</b><br>{{(loggedUser$ | async).email}} </td>\n            <td class=\"lesson-title mess\" *ngIf=\"(loggedUser$ | async).profileLink\"> <b>Profile on Secursy</b><br><a [href]=\"profileLink1\"  target=\"_blank\">Click here</a></td>\n            <td class=\"lesson-title mess\"> <b>Money</b><br>{{(loggedUser$ | async).money}}$ </td>\n        </tr>\n        </tbody>\n    </table>\n</div>\n\n<div class=\"lessons-list-container v-h-center-block-parent\" *ngIf=\"(users$ | async)\" >\n        <table class=\"table lessons-list card card-strong search_card\">\n            <tbody>\n            <tr *ngFor=\"let p of users$ | async\" >\n                <td class=\"lesson-title mess\">\n                    <b>{{p.firstName}} {{p.lastName}}</b>\n                </td>\n                <td class=\"lesson-title mess\"> <b>Email address</b><br>{{p.email}} </td>\n                <td class=\"lesson-title mess\" *ngIf=\"p.profileLink\"> <b>Profile on Secursy</b><br><a [href]=\"unsanitize(p.profileLink)\"  target=\"_blank\">Click here</a></td>\n                <td class=\"lesson-title mess\" *ngIf=\"(loggedUser$ | async).email == 'admin@mail.hr'\"> <b>Money</b><br>{{p.money}}$ </td>\n            </tr>\n            </tbody> \n        </table>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}